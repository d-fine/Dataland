// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
package org.dataland.datalandqaservice.org.dataland.datalandqaservice.frameworks.nuclearandgas

import com.fasterxml.jackson.databind.ObjectMapper
import io.swagger.v3.oas.annotations.Operation
import org.dataland.datalandqaservice.frameworks.nuclearandgas.model.NuclearAndGasData
import org.dataland.datalandqaservice.org.dataland.datalandqaservice.controller.QaReportController
import org.dataland.datalandqaservice.org.dataland.datalandqaservice.model.reports.QaReportMetaInformation
import org.dataland.datalandqaservice.org.dataland.datalandqaservice.model.reports.QaReportStatusPatch
import org.dataland.datalandqaservice.org.dataland.datalandqaservice.model.reports.QaReportWithMetaInformation
import org.dataland.datalandqaservice.org.dataland.datalandqaservice.services.AssembledDatasetQaReportManager
import org.dataland.datalandqaservice.org.dataland.datalandqaservice.services.QaReportSecurityPolicy
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.http.ResponseEntity
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

/**
* A REST controller for the nuclear-and-gas QA report API.
*/
@RequestMapping("/data/nuclear-and-gas")
@RestController
class NuclearAndGasDataQaReportController(
    @Autowired objectMapper: ObjectMapper,
    @Autowired qaReportManager: AssembledDatasetQaReportManager,
    @Autowired qaReportSecurityPolicy: QaReportSecurityPolicy,
) : QaReportController<NuclearAndGasData>(
        objectMapper = objectMapper,
        qaReportManager = qaReportManager,
        qaReportSecurityPolicy = qaReportSecurityPolicy,
        clazz = NuclearAndGasData::class.java,
        dataType = "nuclear-and-gas",
    ) {
    @Operation(operationId = "postNuclearAndGasDataQaReport")
    override fun postQaReport(
        dataId: String,
        qaReport: NuclearAndGasData,
    ): ResponseEntity<QaReportMetaInformation> = super.postQaReport(dataId, qaReport)

    @Operation(operationId = "getNuclearAndGasDataQaReport")
    override fun getQaReport(
        dataId: String,
        qaReportId: String,
    ): ResponseEntity<QaReportWithMetaInformation<NuclearAndGasData>> = super.getQaReport(dataId, qaReportId)

    @Operation(operationId = "setNuclearAndGasDataQaReportStatus")
    override fun setQaReportStatus(
        dataId: String,
        qaReportId: String,
        statusPatch: QaReportStatusPatch,
    ) {
        super.setQaReportStatus(dataId, qaReportId, statusPatch)
    }

    @Operation(operationId = "getNuclearAndGasDataAllQaReportsForDataset")
    override fun getAllQaReportsForDataset(
        dataId: String,
        showInactive: Boolean?,
        reporterUserId: String?,
    ): ResponseEntity<List<QaReportWithMetaInformation<NuclearAndGasData>>> =
        super
            .getAllQaReportsForDataset(dataId, showInactive, reporterUserId)
}
