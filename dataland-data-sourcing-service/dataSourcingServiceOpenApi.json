{
  "openapi": "3.0.1",
  "info": {
    "title": "Dataland Data Sourcing Service API documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/data-sourcing"
    }
  ],
  "tags": [
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    }
  ],
  "paths": {
    "/requests/": {
      "post": {
        "tags": [
          "request-controller"
        ],
        "summary": "Send a data request",
        "description": "A data request for specific frameworks and companies is being sent.",
        "operationId": "createRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully processed the data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataRequest"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/{dataRequestId}/state": {
      "patch": {
        "tags": [
          "request-controller"
        ],
        "summary": "Updates the state of a given data request.",
        "description": "Updates the processing state of a data request given the data request id.",
        "operationId": "patchDataRequestState",
        "parameters": [
          {
            "name": "dataRequestId",
            "in": "path",
            "description": "The unique identifier of the data request on Dataland.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          {
            "name": "requestState",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataRequest"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/state": {
      "patch": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Patch DataSourcing state",
        "description": "Patch the state of a DataSourcing object specified by ID.",
        "operationId": "patchDataSourcingState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DataSourcingState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched state.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/documents": {
      "patch": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Patch DataSourcing documents",
        "description": "Patch the associated document IDs of a DataSourcing object. Use appendDocuments to append or overwrite.",
        "operationId": "patchDataSourcingDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appendDocuments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully patched document IDs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/document-sourcing-attempt": {
      "patch": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Patch dateDocumentSourcingAttempt",
        "description": "Patch the dateDocumentSourcingAttempt field of a DataSourcing object for a given ID. Accepts a list of dates.",
        "operationId": "patchDateDocumentSourcingAttempt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully patched dateDocumentSourcingAttempt.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/{dataRequestId}": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Get all information associated with the specified data request.",
        "description": "Gets all the stored data of a particular dara request.",
        "operationId": "getRequest",
        "parameters": [
          {
            "name": "dataRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataRequest"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}": {
      "get": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Get DataSourcing by ID",
        "description": "Retrieve a DataSourcing object by its unique identifier.",
        "operationId": "getDataSourcingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved DataSourcing object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/history": {
      "get": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Get full history of DataSourcing history by ID",
        "description": "Retrieve the history of a DataSourcing object by its unique identifier.",
        "operationId": "getDataSourcingHistoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved DataSourcing history.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourcingResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourcingResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/search": {
      "get": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Get DataSourcing by parameters",
        "description": "Retrieve a DataSourcing object by reporting period, dataType, companyId, and optionally state.",
        "operationId": "getDataSourcingByDimensions",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "description": "Data type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportingPeriod",
            "in": "query",
            "description": "Reporting period.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State (optional).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved DataSourcing object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourcingResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027info\u0027",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027health\u0027",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DataRequest": {
        "required": [
          "companyIdentifier",
          "dataType",
          "reportingPeriod"
        ],
        "type": "object",
        "properties": {
          "companyIdentifier": {
            "type": "string",
            "description": "Unique identifier to find a company.",
            "example": "5493001KJX4BT0IHAG73"
          },
          "dataType": {
            "type": "string",
            "description": "The associated reporting framework.",
            "example": "sfdr"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The associated reporting period (e.g. a fiscal year).",
            "example": "2023"
          },
          "comment": {
            "type": "string",
            "description": "A comment that accompanies the data sourcing request.",
            "example": "The previously provided data is lacking scope 3 emissions, but they should be available."
          }
        }
      },
      "RequestPriority": {
        "type": "string",
        "enum": [
          "Low",
          "Baseline",
          "High",
          "Urgent"
        ]
      },
      "RequestState": {
        "type": "string",
        "enum": [
          "Open",
          "Withdrawn",
          "Processing",
          "Processed"
        ]
      },
      "StoredDataRequest": {
        "required": [
          "companyId",
          "creationTimeStamp",
          "dataType",
          "id",
          "lastModifiedDate",
          "reportingPeriod",
          "requestPriority",
          "state",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "reportingPeriod": {
            "type": "string"
          },
          "dataType": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "creationTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "memberComment": {
            "type": "string"
          },
          "adminComment": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "requestPriority": {
            "$ref": "#/components/schemas/RequestPriority"
          },
          "state": {
            "$ref": "#/components/schemas/RequestState"
          },
          "dataSourcingEntityId": {
            "type": "string"
          }
        }
      },
      "DataSourcingState": {
        "type": "string",
        "enum": [
          "Initialized",
          "DocumentSourcing",
          "DocumentSourcingDone",
          "DataExtraction",
          "DataVerification",
          "NonSourceable",
          "Answered"
        ]
      },
      "DataSourcingResponse": {
        "required": [
          "associatedRequestIds",
          "companyId",
          "dataType",
          "documentIds",
          "expectedPublicationDatesOfDocuments",
          "id",
          "reportingPeriod",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the data sourcing object."
          },
          "companyId": {
            "type": "string",
            "description": "Company ID associated with the data sourcing object."
          },
          "reportingPeriod": {
            "type": "string",
            "description": "Reporting period."
          },
          "dataType": {
            "type": "string",
            "description": "Type of data being sourced."
          },
          "state": {
            "type": "string",
            "description": "Current state of the data sourcing object."
          },
          "documentIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "Document IDs associated with the data sourcing object.",
            "items": {
              "type": "string",
              "description": "Document IDs associated with the data sourcing object."
            }
          },
          "expectedPublicationDatesOfDocuments": {
            "uniqueItems": true,
            "type": "array",
            "description": "Expected publication dates of documents.",
            "items": {
              "type": "string",
              "description": "Expected publication dates of documents.",
              "format": "date-time"
            }
          },
          "dateDocumentSourcingAttempt": {
            "type": "string",
            "description": "Date of document sourcing attempt.",
            "format": "date-time"
          },
          "documentCollector": {
            "type": "string",
            "description": "Document collector\u0027s ID."
          },
          "dataExtractor": {
            "type": "string",
            "description": "Data extractor\u0027s ID."
          },
          "adminComment": {
            "type": "string",
            "description": "Admin comment."
          },
          "associatedRequestIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "Associated request IDs.",
            "items": {
              "type": "string",
              "description": "Associated request IDs."
            }
          }
        },
        "description": "Data transfer object for DataSourcingEntity."
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "ErrorDetails": {
        "required": [
          "errorType",
          "httpStatus",
          "message",
          "summary"
        ],
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "httpStatus": {
            "type": "number"
          },
          "metaInformation": {
            "type": "object"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "default-bearer-auth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      },
      "default-oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/auth",
            "tokenUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  }
}