{
  "openapi": "3.0.1",
  "info": {
    "title": "Dataland Data Sourcing Service API documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/data-sourcing"
    }
  ],
  "tags": [
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    }
  ],
  "paths": {
    "/requests/": {
      "post": {
        "tags": [
          "request-controller"
        ],
        "summary": "Send a data request",
        "description": "A data request for specific frameworks and companies is being sent.",
        "operationId": "createRequest",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully processed the data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleRequestResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/{dataRequestId}/state": {
      "patch": {
        "tags": [
          "request-controller"
        ],
        "summary": "Updates the state of a given data request.",
        "description": "Updates the processing state of a data request given the data request id.",
        "operationId": "patchRequestState",
        "parameters": [
          {
            "name": "dataRequestId",
            "in": "path",
            "description": "The unique identifier of the data request on Dataland.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          {
            "name": "requestState",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredRequest"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/state": {
      "patch": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Patch DataSourcing state",
        "description": "Patch the state of a DataSourcing object specified by ID.",
        "operationId": "patchDataSourcingState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DataSourcingState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched state.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/documents": {
      "patch": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Patch DataSourcing documents",
        "description": "Patch the associated document IDs of a DataSourcing object. Use appendDocuments to append or overwrite.",
        "operationId": "patchDataSourcingDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appendDocuments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully patched document IDs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/document-sourcing-attempt": {
      "patch": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Patch the date of the next planned document sourcing attempt",
        "description": "Patch the date of the next planned document sourcing attemp of a DataSourcing object for a given ID.",
        "operationId": "patchDateDocumentSourcingAttempt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched dateDocumentSourcingAttempt.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/{id}/history": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Get full history of a requests by ID",
        "description": "Retrieve the history of a Request object by its unique identifier.",
        "operationId": "getRequestHistoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Request object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Request history.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredRequest"
                  }
                }
              }
            }
          },
          "404": {
            "description": "request object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredRequest"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/{dataRequestId}": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Get all information associated with the specified data request.",
        "description": "Gets all the stored data of a particular data request.",
        "operationId": "getRequest",
        "parameters": [
          {
            "name": "dataRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredRequest"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}": {
      "get": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Get DataSourcing by ID",
        "description": "Retrieve a DataSourcing object by its unique identifier.",
        "operationId": "getDataSourcingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved DataSourcing object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/{id}/history": {
      "get": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Get full history of DataSourcing history by ID",
        "description": "Retrieve the history of a DataSourcing object by its unique identifier.",
        "operationId": "getDataSourcingHistoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the DataSourcing object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved DataSourcing history.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredDataSourcing"
                  }
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredDataSourcing"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/data-sourcing/search": {
      "get": {
        "tags": [
          "data-sourcing-controller"
        ],
        "summary": "Get DataSourcing by parameters",
        "description": "Retrieve a DataSourcing object by reporting period, dataType, companyId, and optionally state.",
        "operationId": "getDataSourcingByDimensions",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "description": "Data type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportingPeriod",
            "in": "query",
            "description": "Reporting period.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved DataSourcing object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "404": {
            "description": "DataSourcing object not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataSourcing"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027info\u0027",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027health\u0027",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SingleRequest": {
        "required": [
          "companyIdentifier",
          "dataType",
          "reportingPeriods"
        ],
        "type": "object",
        "properties": {
          "companyIdentifier": {
            "type": "string",
            "description": "Unique identifier to find a company.",
            "example": "5493001KJX4BT0IHAG73"
          },
          "dataType": {
            "type": "string",
            "description": "The associated reporting framework.",
            "example": "sfdr"
          },
          "reportingPeriods": {
            "uniqueItems": true,
            "type": "array",
            "description": "The associated reporting periods (e.g. fiscal years).",
            "example": [
              "2023",
              "2024"
            ],
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "type": "string",
            "description": "A comment that accompanies the data sourcing request.",
            "example": "The previously provided data is lacking scope 3 emissions, but they should be available."
          }
        }
      },
      "SingleRequestResponse": {
        "required": [
          "idsOfDuplicateRequests",
          "idsOfStoredRequests",
          "message",
          "reportingPeriodsOfDuplicateRequests",
          "reportingPeriodsOfStoredRequests"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A text about the result of Dataland processing the data request.",
            "example": "Your data request was stored successfully."
          },
          "reportingPeriodsOfStoredRequests": {
            "type": "array",
            "description": "Reporting periods corresponding to the accepted and stored data requests.",
            "example": [
              "2023",
              "2024"
            ],
            "items": {
              "type": "string"
            }
          },
          "idsOfStoredRequests": {
            "type": "array",
            "description": "The list of Dataland IDs of the created data requests. The position of an ID in this list corresponds to the position of the associated reporting period in the field reportingPeriodsOfStoredRequests.",
            "example": [
              "40c84975-529a-41d2-b5dc-dbb4c803d2bc"
            ],
            "items": {
              "type": "string"
            }
          },
          "reportingPeriodsOfDuplicateRequests": {
            "type": "array",
            "description": "Reporting periods corresponding to data requests that were rejected due to being duplicates.",
            "example": [
              "2022"
            ],
            "items": {
              "type": "string"
            }
          },
          "idsOfDuplicateRequests": {
            "type": "array",
            "description": "The list of Dataland IDs of the data requests that were identified as duplicates and hence not created. The position of an ID in this list corresponds to the position of the associated reporting period in the field reportingPeriodsOfDuplicateRequests.",
            "example": [
              "821d400c-059f-4ce0-96d0-668679d744ca"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RequestState": {
        "type": "string",
        "enum": [
          "Open",
          "Withdrawn",
          "Processing",
          "Processed"
        ]
      },
      "RequestPriority": {
        "type": "string",
        "enum": [
          "Low",
          "Baseline",
          "High",
          "Urgent"
        ]
      },
      "StoredRequest": {
        "required": [
          "companyId",
          "creationTimeStamp",
          "dataType",
          "id",
          "lastModifiedDate",
          "reportingPeriod",
          "requestPriority",
          "state",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "reportingPeriod": {
            "type": "string"
          },
          "dataType": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "creationTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "memberComment": {
            "type": "string"
          },
          "adminComment": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "requestPriority": {
            "$ref": "#/components/schemas/RequestPriority"
          },
          "state": {
            "$ref": "#/components/schemas/RequestState"
          },
          "dataSourcingEntityId": {
            "type": "string"
          }
        }
      },
      "DataSourcingState": {
        "type": "string",
        "enum": [
          "Initialized",
          "DocumentSourcing",
          "DocumentSourcingDone",
          "DataExtraction",
          "DataVerification",
          "NonSourceable",
          "Answered"
        ]
      },
      "ExpectedPublicationDateOfDocument": {
        "required": [
          "documentCategory",
          "expectedPublicationDate"
        ],
        "type": "object",
        "properties": {
          "documentCategory": {
            "type": "string"
          },
          "expectedPublicationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StoredDataSourcing": {
        "required": [
          "companyId",
          "dataType",
          "id",
          "reportingPeriod",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the data sourcing object.",
            "example": "ef6d806c-4bd3-4ea2-b8e6-dcc590385e15"
          },
          "companyId": {
            "type": "string",
            "description": "The unique identifier under which the company can be found on Dataland.",
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The associated reporting period (e.g. a fiscal year).",
            "example": "2023"
          },
          "dataType": {
            "type": "string",
            "description": "The associated reporting framework.",
            "example": "sfdr"
          },
          "state": {
            "$ref": "#/components/schemas/DataSourcingState"
          },
          "documentIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The documents from which the data for this data sourcing object are extracted.",
            "example": [
              "91a6f38ece1ae347d1b0dc9f6b6a0ef7593ed051595e3f138e922cb1df39c86c"
            ],
            "items": {
              "type": "string"
            }
          },
          "expectedPublicationDatesOfDocuments": {
            "uniqueItems": true,
            "type": "array",
            "description": "The expected publication dates of future documents relevant for this data sourcing object.",
            "items": {
              "$ref": "#/components/schemas/ExpectedPublicationDateOfDocument"
            }
          },
          "dateDocumentSourcingAttempt": {
            "type": "string",
            "description": "The date of the next planned attempt to source documents for this data sourcing object.",
            "format": "date"
          },
          "documentCollector": {
            "type": "string",
            "description": "The Dataland company ID of the company which is responsible for the collection of documents concerning this data sourcing object.",
            "example": "d23d16de-e9c8-470f-b08b-e576e0c4193e"
          },
          "dataExtractor": {
            "type": "string",
            "description": "The Dataland company ID of the company which is responsible for the extraction of data from documents concerning this data sourcing object.",
            "example": "8248c02a-8958-4518-b61f-a5fff1afbe2e"
          },
          "adminComment": {
            "type": "string",
            "description": "A comment that can be set by Dataland admins to provide additional information.",
            "example": "The data sourcing process is delayed due to unforeseen circumstances."
          },
          "associatedRequestIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The IDs of stored data requests associated with this data sourcing object.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "ErrorDetails": {
        "required": [
          "errorType",
          "httpStatus",
          "message",
          "summary"
        ],
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "httpStatus": {
            "type": "number"
          },
          "metaInformation": {
            "type": "object"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "default-bearer-auth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      },
      "default-oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/auth",
            "tokenUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  }
}