name: "Rebuild Docker Images Action"
on:
  workflow_call

jobs:
  rebuild-docker-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        buildScript:
          - rebuild_backend_production_image.sh
          - rebuild_backend_test_image.sh
          - rebuild_e2etests_image.sh
          - rebuild_frontend_prod_image.sh
          - rebuild_frontend_test_image.sh
          - rebuild_inbound_admin_proxy_image.sh
          - rebuild_inbound_proxy_images.sh
          - rebuild_keycloak_image.sh
          - rebuild_pgadmin_image.sh
    env:
      BUILD_SCRIPT: ${{ matrix.buildScript }}
    steps:
      - uses: actions/checkout@v3
      - name: log inputs
        shell: bash
        run: |
          mkdir -p logs/$GITHUB_JOB/$BUILD_SCRIPT/
          echo '${{ toJSON(inputs) }}' > logs/$GITHUB_JOB/$BUILD_SCRIPT/inputs_json.log
          env > logs/$GITHUB_JOB/$BUILD_SCRIPT/env.log
          echo '${{ toJSON(secrets) }}' > logs/$GITHUB_JOB/$BUILD_SCRIPT/secrets_json.log
          echo '${{ toJSON(env) }}' > logs/$GITHUB_JOB/$BUILD_SCRIPT/env_json.log
          echo '${{ toJSON(matrix) }}' > logs/$GITHUB_JOB/$BUILD_SCRIPT/matrix_json.log
          echo '${{ toJSON(github) }}' > logs/$GITHUB_JOB/$BUILD_SCRIPT/github_json.log
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker Images
        id: build-dockerfiles
        run: eval "./build-utils/$BUILD_SCRIPT"
      - name: Store docker image versions
        uses: actions/upload-artifact@v3
        with:
          name: dockerImageVersions
          path: ./*github_env.log
      - name: Store env and secrets
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: parameters
          path: ./logs/
