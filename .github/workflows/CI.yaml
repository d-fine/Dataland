name: CI
env:
  DATALAND_SKYMINDERCLIENT_TOKEN: ${{ secrets.DATALAND_SKYMINDERCLIENT_TOKEN }}
  DATALAND_SKYMINDERCLIENT_USER: ${{ secrets.DATALAND_SKYMINDERCLIENT_USER }}
  DATALAND_EDC_TOKEN: ${{ secrets.DATALAND_EDC_TOKEN }}
  DATALAND_EDC_USER: ${{ secrets.DATALAND_EDC_USER }}
  SKYMINDER_URL: ${{ secrets.SKYMINDER_URL }}
  SKYMINDER_PW: ${{ secrets.SKYMINDER_PW }}
  SKYMINDER_USER: ${{ secrets.SKYMINDER_USER }}
  REALDATA: false

on:
  push:
    branches:
      - '**'

jobs:
  unit-tests-backend:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v2
      - name: Execute Backend unit tests by using base image from GitHub Registry
        run: |
          docker run -v $(pwd):/app:rw \
          -e DATALAND_SKYMINDERCLIENT_TOKEN \
          -e DATALAND_SKYMINDERCLIENT_USER \
          -e DATALAND_EDC_TOKEN \
          -e DATALAND_EDC_USER \
          ghcr.io/d-fine/dataland/temurinbase:latest \
          /app/gradlew -p /app ktlintcheck detekt :dataland-backend:test :dataland-csvconverter:test --no-daemon --stacktrace
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: TestReport
          path: ./**/build/reports
      - name: Upload JaCoCo Exec Results for backend
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: JaCoCoResultsBackendUnitTests
          path: ./dataland-backend/build/jacoco/*.exec
      - name: Upload JaCoCo Exec Results for csv converter
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: JaCoCoResultsCsvConverterUnitTests
          path: ./dataland-csvconverter/build/jacoco/*.exec
  unit-tests-frontend:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Execute Frontend Unit Tests
        run: ./gradlew :dataland-frontend:generateAPIClientFrontend :dataland-frontend:npm_run_lintci :dataland-frontend:npm_run_testunit :dataland-frontend:npm_run_checkdependencies --no-daemon --stacktrace
      - name: Upload FE lcov Exec Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lcovResultsUnit
          path: ./dataland-frontend/coverage/**/lcov.info
      - name: Execute Frontend Scripts to check if they run successfully
        run: ./gradlew :dataland-frontend:npm_run_fakefixtures --stacktrace
  e2e-tests:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - testExecutor: "CYPRESS"
            testGroup: 1
          - testExecutor: "CYPRESS"
            testGroup: 2
          - testExecutor: "CYPRESS"
            testGroup: 3
          - testExecutor: "CYPRESS"
            testGroup: 4
          - testExecutor: "E2ETESTS"
            testGroup: 0
          - testExecutor: "RESTARTABILITY"
            testGroup: 100
    steps:
      - uses: actions/checkout@v2
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.DATALAND_SKYMINDERCLIENT_USER }}
          password: ${{ secrets.DATALAND_SKYMINDERCLIENT_TOKEN }}
      - name: Retrieve SSL certificates for dataland-local.duckdns.org
        run: ./testing/retrieve_ssl_certs.sh
        env:
          DATALAND_LETSENCRYPT_HOST_KEYS: ${{ secrets.DATALAND_LETSENCRYPT_HOST_KEYS }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Execute E2E Tests
        run: ./testing/e2e_test_launcher.sh
        env:
          SKYMINDER_URL: "http://skyminder-dummyserver:8080"
          KEYCLOAK_FRONTEND_URL: "https://dataland-local.duckdns.org/keycloak"
          KEYCLOAK_DB_PASSWORD: "password"
          BACKEND_DB_PASSWORD: "password"
          PGADMIN_PASSWORD: "password"
          KEYCLOAK_READER_VALUE: "qT0vhQ7bQA0OuAlJslpDr421pJQjZWIHxXZYePO9IOVVfZUX+85SwuwVrLgL/9xiW5hjyxlhKqQzUl7xUh+hVQ=="
          KEYCLOAK_READER_SALT: "6ZN+5rRT/wQcQqvNhXIsfA=="
          KEYCLOAK_READER_PASSWORD: "test"
          KEYCLOAK_UPLOADER_VALUE: "qT0vhQ7bQA0OuAlJslpDr421pJQjZWIHxXZYePO9IOVVfZUX+85SwuwVrLgL/9xiW5hjyxlhKqQzUl7xUh+hVQ=="
          KEYCLOAK_UPLOADER_SALT: "6ZN+5rRT/wQcQqvNhXIsfA=="
          KEYCLOAK_UPLOADER_PASSWORD: "test"
          KEYCLOAK_ADMIN: "admin"
          KEYCLOAK_ADMIN_PASSWORD: "admin"
          KEYCLOAK_GOOGLE_ID: ${{ secrets.KEYCLOAK_GOOGLE_ID }}
          KEYCLOAK_GOOGLE_SECRET: ${{ secrets.KEYCLOAK_GOOGLE_SECRET }}
          PROXY_PRIMARY_URL: dataland-local.duckdns.org
          PROXY_LETSENCRYPT_PATH: /etc/letsencrypt/dataland-local.duckdns.org
          PROXY_ENVIRONMENT: production
          ENVIRONMENT: "development"
          CYPRESS_EXECUTION_ENVIRONMENT: "development"
          CYPRESS_TEST_GROUP: ${{ matrix.testGroup }}
          TEST_EXECUTOR: ${{ matrix.testExecutor }}
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
      - name: Upload JaCoCo Exec Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: JaCoCoResultsE2ETest
          path: ./*.exec
      - name: Upload FE E2E lcov Exec Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lcovResultsE2E
          path: ./*.info
      - name: Upload FE E2E Cypress Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cypress
          path: ./cypress
      - name: Upload E2E Test Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: e2eTestReports
          path: ./reports
      - name: Upload docker log files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: e2eTestDockerLogs
          path: ./dockerLogs
      - name: Upload database dumps
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: e2eTestDatabaseDumps
          path: ./dbdumps/
  sonar:
    runs-on: ubuntu-latest
    if: always() && github.event_name != 'workflow_dispatch'
    needs:
      - e2e-tests
      - unit-tests-backend
      - unit-tests-frontend
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build project
        run: ./gradlew assemble --no-daemon --stacktrace
      - uses: actions/download-artifact@v2
        with:
          name: JaCoCoResultsBackendUnitTests
      - uses: actions/download-artifact@v2
        with:
          name: JaCoCoResultsCsvConverterUnitTests
      - uses: actions/download-artifact@v2
        with:
          name: JaCoCoResultsE2ETest
      - uses: actions/download-artifact@v2
        with:
          name: lcovResultsUnit
          path: fe-coverage/unit
      - uses: actions/download-artifact@v2
        with:
          name: lcovResultsE2E
          path: fe-coverage/e2e
      - name: Generate jacocoTestReport and run Sonar
        if: always()
        run: ./gradlew jacocoTestReport sonarqube --no-daemon --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  summary:
    runs-on: ubuntu-latest
    if: success()
    needs:
      - sonar
    steps:
      - name: Summary of this workflow's overall outcome
        run: exit 0
