name: CD
env:
  DATALAND_SKYMINDERCLIENT_TOKEN: ${{ secrets.DATALAND_SKYMINDERCLIENT_TOKEN }}
  DATALAND_SKYMINDERCLIENT_USER: ${{ secrets.DATALAND_SKYMINDERCLIENT_USER }}
  SKYMINDER_URL: ${{ secrets.SKYMINDER_URL }}
  SKYMINDER_PW: ${{ secrets.SKYMINDER_PW }}
  SKYMINDER_USER: ${{ secrets.SKYMINDER_USER }}

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      realData:
        description: 'Use real data'
        required: false
        type: boolean
      deployTo:
        description: "Deploy to server"
        required: true
        type: choice
        options:
          - preview_server
          - dev_server
      whichEnvironment:
        description: "Choose environment"
        required: true
        type: environment
jobs:
  build-prod-and-deploy:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Debugging
        run: |
          echo "$AAA_TEST_VARIABLE"
          if [[ $AAA_TEST_VARIABLE == development ]]; then
           echo "Environment variable could be read"
          fi
          if [[ $AAA_TEST_VARIABLE == "Repository Variable" ]]; then
           echo "Repository variable could be read"
          fi
        env:
          AAA_TEST_VARIABLE: ${{ secrets.AAA_TEST_VARIABLE }}
      - uses: actions/checkout@v2
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get GitHub real data image on demand
        run: |
          if [[ $REALDATA == true ]]; then
            echo "Retrieving real data"
            docker run -v $(pwd)/testing/data:/testData:rw ghcr.io/d-fine/dataland/datacontainer:latest
          fi
        env:
          REALDATA: ${{ github.event.inputs.realData }}
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build backend and Assemble boot jar
        run: ./gradlew dataland-backend:bootJar --no-daemon --stacktrace
      - name: Build frontend
        run: ./gradlew dataland-frontend:generateAPIClientFrontend dataland-frontend:npm_run_build --no-daemon --stacktrace
      - name: Start server and deploy to it (either Preview or Dev)
        run: |
          if [[ $DEPLOY_TO == preview_server ]]; then
            echo "Starting preview server"
            curl ${{ secrets.PREVIEW_STARTUP_URL }} > /dev/null
          elif [[ $DEPLOY_TO == dev_server ]]; then
            echo "Starting dev server"
            curl ${{ secrets.DEV_STARTUP_URL }} > /dev/null
          fi
          ./deployment/deploy_to_server.sh $DEPLOY_TO
        env:
          DEPLOY_TO: ${{ github.event.inputs.deployTo }}
          TRUSTEE_IP: ${{ secrets.TRUSTEE_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EDC_API_AUTH_KEY: ${{ secrets.EDC_API_AUTH_KEY }}
          EDC_API_CONTROL_AUTH_APIKEY_VALUE: ${{ secrets.EDC_API_CONTROL_AUTH_APIKEY_VALUE }}
          EDC_KEYSTORE_PASSWORD: ${{ secrets.EDC_KEYSTORE_PASSWORD }}
          TRUSTEE_CREDENTIALS: ${{ secrets.TRUSTEE_CREDENTIALS }}
      - name: check deployment
        run: echo "do nothing until approved by Philip" #./gradlew :dataland-frontend:npm_run_testpreview --no-daemon --stacktrace
      #- name: Upload FE E2E Cypress Results
      #  if: always()
      #  uses: actions/upload-artifact@v2
      #  with:
      #   name: cypress
      #   path: ./dataland-frontend/cypress/
