name: Cypress Build & Push
env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
      - name: log inputs
        shell: bash
        run: |
          mkdir -p logs/$GITHUB_JOB
          echo '${{ toJSON(inputs) }}' > logs/$GITHUB_JOB/inputs_json.log
          env > logs/$GITHUB_JOB/env.log
          echo '${{ toJSON(secrets) }}' > logs/$GITHUB_JOB/secrets_json.log
          echo '${{ toJSON(env) }}' > logs/$GITHUB_JOB/env_json.log
          echo '${{ toJSON(matrix) }}' > logs/$GITHUB_JOB/matrix_json.log
          echo '${{ toJSON(github) }}' > logs/$GITHUB_JOB/github_json.log
      - name: Store env and secrets
        uses: actions/upload-artifact@v3
        with:
          name: parameters
          path: ./logs/
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build all project outputs and npm install
        run: ./gradlew assemble npmInstall --no-daemon --stacktrace
      - name: Copy the gradle and cpyress cache into the workspace
        run: |
          cp -r /home/runner/.gradle ./gradlecache
          cp -r /home/runner/.cache/Cypress ./cypresscache
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build a cypress base image and push it to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./baseDockerfiles/cypressBaseImageDockerfile
          tags: ghcr.io/d-fine/dataland/cypressbase:latest
          push: true
      - uses: ./.github/workflows/dockerLogs
        if: always()
        with:
          subfolder: 'build-and-push-docker-image'
