openapi: 3.0.1
info:
  title: EDC REST API
  description: All files merged by open api merger
  license:
    name: Apache License v2.0
    url: http://apache.org/v2
  version: 1.0.0-SNAPSHOT
servers:
- url: /
paths:
  /identity-hub/query-commits:
    post:
      operationId: queryCommits
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /identity-hub/query-objects:
    post:
      operationId: queryObjects
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /identity-hub/collections:
    post:
      operationId: write
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /identity-hub/collections-commit:
    post:
      operationId: writeCommit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /control/catalog:
    get:
      operationId: getDescription
      parameters:
      - name: provider
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /control/transfer:
    post:
      operationId: addTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /control/agreement/{id}:
    get:
      operationId: getAgreementById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /control/negotiation/{id}:
    get:
      operationId: getNegotiationById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /control/negotiation:
    post:
      operationId: initiateNegotiation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractOfferRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /check/health:
    get:
      operationId: checkHealth
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /check/liveness:
    get:
      operationId: getLiveness
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /check/readiness:
    get:
      operationId: getReadiness
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /check/startup:
    get:
      operationId: getStartup
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /catalog:
    post:
      operationId: getCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FederatedCatalogCacheQuery'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractOffer'
components:
  schemas:
    Action:
      type: object
      properties:
        type:
          type: string
        includedIn:
          type: string
        constraint:
          $ref: '#/components/schemas/Constraint'
    Asset:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
    Constraint:
      required:
      - edctype
      type: object
      properties:
        edctype:
          type: string
      discriminator:
        propertyName: edctype
    ContractOffer:
      type: object
      properties:
        id:
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
        asset:
          $ref: '#/components/schemas/Asset'
        provider:
          type: string
          format: uri
        consumer:
          type: string
          format: uri
        offerStart:
          type: string
          format: date-time
        offerEnd:
          type: string
          format: date-time
        contractStart:
          type: string
          format: date-time
        contractEnd:
          type: string
          format: date-time
    ContractOfferRequest:
      type: object
      properties:
        type:
          type: string
          enum:
          - INITIAL
          - COUNTER_OFFER
        protocol:
          type: string
        connectorId:
          type: string
        connectorAddress:
          type: string
        correlationId:
          type: string
        contractOffer:
          $ref: '#/components/schemas/ContractOffer'
    Criterion:
      type: object
      properties:
        left:
          type: object
        op:
          type: string
        right:
          type: object
    DataAddress:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
        keyName:
          type: string
        type:
          type: string
    DataRequest:
      type: object
      properties:
        id:
          type: string
        processId:
          type: string
        connectorAddress:
          type: string
        protocol:
          type: string
        connectorId:
          type: string
        assetId:
          type: string
        contractId:
          type: string
        dataDestination:
          $ref: '#/components/schemas/DataAddress'
        managedResources:
          type: boolean
        properties:
          type: object
          additionalProperties:
            type: string
        transferType:
          $ref: '#/components/schemas/TransferType'
        destinationType:
          type: string
        sync:
          type: boolean
    Duty:
      type: object
      properties:
        uid:
          type: string
        target:
          type: string
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        parentPermission:
          $ref: '#/components/schemas/Permission'
        consequence:
          $ref: '#/components/schemas/Duty'
    FederatedCatalogCacheQuery:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/Criterion'
    Permission:
      type: object
      properties:
        uid:
          type: string
        target:
          type: string
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        duties:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
    Policy:
      type: object
      properties:
        uid:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        prohibitions:
          type: array
          items:
            $ref: '#/components/schemas/Prohibition'
        obligations:
          type: array
          items:
            $ref: '#/components/schemas/Duty'
        extensibleProperties:
          type: object
          additionalProperties:
            type: object
        inheritsFrom:
          type: string
        assigner:
          type: string
        assignee:
          type: string
        target:
          type: string
        '@type':
          type: string
          enum:
          - SET
          - OFFER
          - CONTRACT
    Prohibition:
      type: object
      properties:
        uid:
          type: string
        target:
          type: string
        action:
          $ref: '#/components/schemas/Action'
        assignee:
          type: string
        assigner:
          type: string
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
    TransferType:
      type: object
      properties:
        contentType:
          type: string
        isFinite:
          type: boolean
