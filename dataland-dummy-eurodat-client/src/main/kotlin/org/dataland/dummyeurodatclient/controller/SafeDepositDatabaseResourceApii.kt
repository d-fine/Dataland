/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package org.dataland.dummyeurodatclient.openApiServer.api

import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import jakarta.validation.Valid
import org.dataland.dummyeurodatclient.openApiServer.model.SafeDepositDatabaseRequestt
import org.dataland.dummyeurodatclient.openApiServer.model.SafeDepositDatabaseResponse
import org.springframework.http.HttpStatus
import org.springframework.http.ResponseEntity
import org.springframework.validation.annotation.Validated
import org.springframework.web.bind.annotation.*

@Validated
@RequestMapping("\${api.base-path:}")
interface SafeDepositDatabaseResourceApii {

    @Operation(
        tags = ["Safe Deposit Database Resource"],
        summary = "",
        operationId = "apiV1ClientControllerDatabaseServiceAppIdDelete",
        description = """""",
        responses = [
            ApiResponse(responseCode = "200", description = "OK", content = [Content(schema = Schema(implementation = SafeDepositDatabaseResponse::class))]),
        ],
    )
    @RequestMapping(
        method = [RequestMethod.DELETE],
        value = ["/api/v1/client-controller/database-service/{appId}"],
        produces = ["application/json"],
    )
    fun apiV1ClientControllerDatabaseServiceAppIdDelete(
        @Parameter(description = "", required = true)
        @PathVariable("appId")
        appId: kotlin.String,
    ): ResponseEntity<SafeDepositDatabaseResponse> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }

    @Operation(
        tags = ["Safe Deposit Database Resource"],
        summary = "",
        operationId = "apiV1ClientControllerDatabaseServicePost",
        description = """""",
        responses = [
            ApiResponse(responseCode = "200", description = "OK", content = [Content(schema = Schema(implementation = SafeDepositDatabaseResponse::class))]),
        ],
    )
    @RequestMapping(
        method = [RequestMethod.POST],
        value = ["/api/v1/client-controller/database-service"],
        produces = ["application/json"],
        consumes = ["application/json"],
    )
    fun apiV1ClientControllerDatabaseServicePost(
        @Parameter(description = "")
        @Valid
        @RequestBody(required = true)
        safeDepositDatabaseRequest: SafeDepositDatabaseRequestt?,
    ): ResponseEntity<SafeDepositDatabaseResponse> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
