## Generated by $ ./gradlew refreshVersionsCatalog

[plugins]
com-github-jk1-dependency-license-report = { id = "com.github.jk1.dependency-license-report", version = "2.9" }
io-gitlab-arturbosch-detekt = { id = "io.gitlab.arturbosch.detekt", version = "1.23.7" }
com-github-node-gradle-node = { id = "com.github.node-gradle.node", version = "7.1.0" }
org-springframework-boot = { id = "org.springframework.boot", version = "3.4.2" }
org-jlleitschuh-gradle-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "12.1.2" }
org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
org-jetbrains-kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
org-sonarqube = { id = "org.sonarqube", version = "6.0.1.5171" }
org-springdoc-openapi-gradle-plugin = { id = "org.springdoc.openapi-gradle-plugin", version = "1.9.0" }
com-gorylenko-gradle-git-properties = { id = "com.gorylenko.gradle-git-properties", version = "2.4.2" }
org-openapi-generator = { id = "org.openapi.generator", version = "7.11.0" }
com-github-ben-manes-versions = { id = "com.github.ben-manes.versions", version = "0.52.0" }
org-jetbrains-kotlin-plugin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
org-jetbrains-kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
org-jetbrains-kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

[versions]
kotlin = "2.0.0"
okhttp3 = "4.12.0"
moshi = "1.15.2"
mockito = "5.15.2"
junit-jupiter = "5.11.4"
log4j = "2.24.3"
jackson = "2.18.2"
logback = "1.5.16"
spring-security = "6.4.2"
flyway = "11.2.0"
cloudevents = "4.0.1"
itext = "9.0.0"
tika = "3.0.0"
poi = "5.4.0"
jodconverter = "4.4.8"

[libraries]
# Gradle
gradle-tooling = { group = "org.gradle", name = "gradle-tooling-api", version = "8.12" }

# Detekt
detekt-cli = { group = "io.gitlab.arturbosch.detekt", name = "detekt-cli", version = "1.23.7" }

# Kotlin
kotlin-compiler-embeddable = { group = "org.jetbrains.kotlin", name = "kotlin-compiler-embeddable", version.ref = "kotlin" }
kotlin-scripting-compiler-embeddable = { group = "org.jetbrains.kotlin", name = "kotlin-scripting-compiler-embeddable", version.ref = "kotlin" }
kotlin-allopen-compiler-plugin-embeddable = { group = "org.jetbrains.kotlin", name = "kotlin-allopen-compiler-plugin-embeddable", version.ref = "kotlin" }
kotlin-annotation-processing-gradle = { group = "org.jetbrains.kotlin", name = "kotlin-annotation-processing-gradle", version.ref = "kotlin" }
kotlin-noarg-compiler-plugin-embeddable = { group = "org.jetbrains.kotlin", name = "kotlin-noarg-compiler-plugin-embeddable", version.ref = "kotlin" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlin-serialization-compiler-plugin-embeddable = { group = "org.jetbrains.kotlin", name = "kotlin-serialization-compiler-plugin-embeddable", version.ref = "kotlin" }

# Ktlint
ktlint = { group = "com.pinterest", name = "ktlint", version = "_" }

# OkHttp
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp3" }

# Log4j
log4j = { group = "org.apache.logging.log4j", name = "log4j", version.ref = "log4j" }
log4j-core = { group = "org.apache.logging.log4j", name = "log4j-core", version.ref = "log4j" }
log4j-slf4j2-impl = { group = "org.apache.logging.log4j", name = "log4j-slf4j2-impl", version.ref = "log4j" }
log4j-api = { group = "org.apache.logging.log4j", name = "log4j-api", version.ref = "log4j" }
log4j-to-slf4j = { group = "org.apache.logging.log4j", name = "log4j-to-slf4j", version.ref = "log4j" }

# Logback
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
logback-core = { group = "ch.qos.logback", name = "logback-core", version.ref = "logback" }

# SLF4J
slf4j-api = { group = "org.slf4j", name = "slf4j-api", version = "2.0.16" }

# Spring Boot
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot = { group = "org.springframework.boot", name = "spring-boot", version = "3.4.2" }

# PostgreSQL
postgresql = { group = "org.postgresql", name = "postgresql", version = "42.7.5" }

# H2
h2 = { group = "com.h2database", name = "h2", version = "2.3.232" }

# Moshi
moshi-kotlin = { group = "com.squareup.moshi", name = "moshi-kotlin", version.ref = "moshi" }
moshi-adapters = { group = "com.squareup.moshi", name = "moshi-adapters", version.ref = "moshi" }

# Spring Security
spring-security-test = { module = "org.springframework.security:spring-security-test" }
spring-security-crypto = { group = "org.springframework.security", name = "spring-security-crypto", version.ref = "spring-security" }
spring-security-web = { group = "org.springframework.security", name = "spring-security-web", version.ref = "spring-security" }

# Jakarta
jakarta-servlet-api = { group = "jakarta.servlet", name = "jakarta.servlet-api", version = "6.1.0" }
jakarta-persistence-api = { group = "jakarta.persistence", name = "jakarta.persistence-api", version = "3.2.0" }

# Bouncy Castle
bcpkix-jdk15on = { group = "org.bouncycastle", name = "bcpkix-jdk15on", version = "1.70" }
bcprov-jdk15on = { group = "org.bouncycastle", name = "bcprov-jdk15on", version = "1.70" }

# Jackson
jackson-dataformat-csv = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-csv", version.ref = "jackson" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
jackson-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }

# Commons
commons-io = { group = "commons-io", name = "commons-io", version = "2.18.0" }
commons-codec = { group = "commons-codec", name = "commons-codec", version = "1.17.2" }
commons-text = { group = "org.apache.commons", name = "commons-text", version = "1.13.0" }

# PDFBox
pdfbox = { group = "org.apache.pdfbox", name = "pdfbox", version = "3.0.4" }

# Mockito
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-inline = { group = "org.mockito", name = "mockito-inline", version.ref = "mockito" }
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version = "5.4.0" }

# JUnit
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit-jupiter" }

# Awaitility
awaitility = { group = "org.awaitility", name = "awaitility", version = "4.2.2" }

# JSON
json = { group = "org.json", name = "json", version = "20250107" }

# Spring
spring-context = { group = "org.springframework", name = "spring-context", version = "6.2.2" }
spring-test = { group = "org.springframework", name = "spring-test", version = "6.2.2" }

# Spring AMQP
spring-rabbit = { group = "org.springframework.amqp", name = "spring-rabbit", version = "3.2.2" }
spring-boot-starter-amqp = { group = "org.springframework.boot", name = "spring-boot-starter-amqp", version = "3.4.2" }
spring-amqp = { group = "org.springframework.amqp", name = "spring-amqp", version = "3.2.2" }
spring-rabbit-test = { group = "org.springframework.amqp", name = "spring-rabbit-test", version = "3.2.2" }

# SpringDoc OpenAPI
springdoc-openapi-ui = { group = "org.springdoc", name = "springdoc-openapi-starter-webmvc-ui", version = "2.8.3" }

# Mailjet
mailjet-client = { group = "com.mailjet", name = "mailjet-client", version = "5.2.5" }

# Flyway
flyway = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }
flyway-core = { group = "org.flywaydb", name = "flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }

# CloudEvents
cloudevents-api = { group = "io.cloudevents", name = "cloudevents-api", version.ref = "cloudevents" }
cloudevents-json-jackson = { group = "io.cloudevents", name = "cloudevents-json-jackson", version.ref = "cloudevents" }
cloudevents-core = { group = "io.cloudevents", name = "cloudevents-core", version.ref = "cloudevents" }

# Spring Cloud Function
spring-cloud-function-context = { group = "org.springframework.cloud", name = "spring-cloud-function-context", version = "4.1.3" }

# Freemarker
freemarker = { group = "org.freemarker", name = "freemarker", version = "2.3.34" }

# JodConverter
jodconverter-core = { group = "org.jodconverter", name = "jodconverter-core", version.ref = "jodconverter" }
jodconverter-local = { group = "org.jodconverter", name = "jodconverter-local", version.ref = "jodconverter" }

# iText
itext-core = { group = "com.itextpdf", name = "itext-core", version.ref = "itext" }
layout = { group = "com.itextpdf", name = "layout", version.ref = "itext" }

# Apache Tika
tika-core = { group = "org.apache.tika", name = "tika-core", version.ref = "tika" }
tika-parsers = { group = "org.apache.tika", name = "tika-parsers", version.ref = "tika" }

# Apache POI
poi = { group = "org.apache.poi", name = "poi", version.ref = "poi" }
poi-ooxml = { group = "org.apache.poi", name = "poi-ooxml", version.ref = "poi" }
poi-scratchpad = { group = "org.apache.poi", name = "poi-scratchpad", version.ref = "poi" }

# ODF Toolkit
simple-odf = { group = "org.odftoolkit", name = "simple-odf", version = "0.9.0" }