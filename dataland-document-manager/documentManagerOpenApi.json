{
  "openapi": "3.0.1",
  "info": {
    "title": "Dataland Document Manager API documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/documents"
    }
  ],
  "tags": [
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "Search for document meta information.",
        "description": "Search for document metainformation by company ID, document categories and reporting period. Results are returned sorted by publication date in reverse chronological order. Only resultswith QA status \u0027Accepted\u0027 are returned.",
        "operationId": "searchForDocumentMetaInformation",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "If specified, only returns meta information of documents associated with the company having this Dataland company ID.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "documentCategories",
            "in": "query",
            "description": "If specified, only returns meta information of documents belonging to one of these document categories.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "AnnualReport",
                  "SustainabilityReport",
                  "Policy",
                  "Other"
                ]
              }
            }
          },
          {
            "name": "reportingPeriod",
            "in": "query",
            "description": "If specified, only returns meta information of documents associated with this reportingperiod (e.g., fiscal year).",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 2024
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "Only a chunk of all matching, ordered results is returned. This parameter specifies the maximum size of a single chunk. All chunks except possibly the last will have that size.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "chunkIndex",
            "in": "query",
            "description": "Only a chunk of all matching, ordered results is returned. This parameter specifies which chunk to return, starting at 0. The default value is 0, meaning the first chunk is returned.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully searched for document meta information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentMetaInfoResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request; make sure that at least one search parameter is non-null and that the chunk index is within bounds (when in doubt, use chunk index 0)."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "document-controller"
        ],
        "summary": "Upload a document and its metainformation.",
        "description": "Upload a document and (optionally) its metainformation. When specifying the metainformation, the fields \u0027publicationDate\u0027 and \u0027reportingPeriod\u0027 are optional.",
        "operationId": "postDocument",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "document"
                ],
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "format": "binary"
                  },
                  "documentMetaInfo": {
                    "$ref": "#/components/schemas/DocumentMetaInfo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully uploaded document.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentMetaInfoResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/{documentId}": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "Receive a document.",
        "description": "Receive a document by its ID from internal storage.",
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The unique identifier of the document on Dataland. It is contained in the HTTP response after posting a new document and is a SHA-256 value.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "afa44f6138e4e3925f9da5ae355a9ee60f1630e52ddd755c4b2762cf61b4f7b4"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully received document.",
            "headers": {
              "Content-Disposition": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "style": "simple",
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "Content-Type": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.oasis.opendocument.spreadsheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      },
      "head": {
        "tags": [
          "document-controller"
        ],
        "summary": "Check if a document exists.",
        "description": "Check for a given document ID (hash) if the document already exists in the database.",
        "operationId": "checkDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The unique identifier of the document on Dataland. It is contained in the HTTP response after posting a new document and is a SHA-256 value.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "afa44f6138e4e3925f9da5ae355a9ee60f1630e52ddd755c4b2762cf61b4f7b4"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully checked document existence."
          },
          "404": {
            "description": "Successfully checked that a document does not exist."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "document-controller"
        ],
        "summary": "Update the metainformation of a document.",
        "description": "Update the metainformation of a document. All fields are optional, and only mentioned fields will be overwritten.",
        "operationId": "patchDocumentMetaInfo",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The unique identifier of the document on Dataland. It is contained in the HTTP response after posting a new document and is a SHA-256 value.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "afa44f6138e4e3925f9da5ae355a9ee60f1630e52ddd755c4b2762cf61b4f7b4"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentMetaInfoPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated the document\u0027s metainformation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentMetaInfoResponse"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the right to update the document\u0027s metainformation."
          },
          "404": {
            "description": "Document ID does not match any stored document."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/{documentId}/companies/{companyId}": {
      "patch": {
        "tags": [
          "document-controller"
        ],
        "summary": "Extend the list of company IDs related to a document.",
        "description": "Extend the list of company IDs related to a document by a single company id.",
        "operationId": "patchDocumentMetaInfoCompanyIds",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The unique identifier of the document on Dataland. It is contained in the HTTP response after posting a new document and is a SHA-256 value.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "afa44f6138e4e3925f9da5ae355a9ee60f1630e52ddd755c4b2762cf61b4f7b4"
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the companyIds field in the document\u0027s meta information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentMetaInfoResponse"
                }
              }
            }
          },
          "403": {
            "description": "You do not have the right to update the companyIds field."
          },
          "404": {
            "description": "Document ID does not match any stored document."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/{documentId}/metadata": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "Receive metainformation for a document.",
        "description": "Receive metainformation for a document by its ID from internal storage.",
        "operationId": "getDocumentMetaInformation",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The unique identifier of the document on Dataland. It is contained in the HTTP response after posting a new document and is a SHA-256 value.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "afa44f6138e4e3925f9da5ae355a9ee60f1630e52ddd755c4b2762cf61b4f7b4"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully received document meta information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentMetaInfoEntity"
                }
              }
            }
          },
          "404": {
            "description": "Document meta information could not be retrieved."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/internal/cached/{hash}": {
      "get": {
        "tags": [
          "temporarily-cached-document-controller"
        ],
        "summary": "Retrieve specific data from the cache store of the backend.",
        "description": "Data identified by the provided sha256 hash is retrieved.",
        "operationId": "getReceivedData",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved blob.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027info\u0027",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027health\u0027",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DocumentMetaInfo": {
        "required": [
          "companyIds",
          "documentCategory",
          "documentName"
        ],
        "type": "object",
        "properties": {
          "documentName": {
            "type": "string",
            "description": "Name under which the document is saved on Dataland. Does not need to coincide with the name of the uploaded file nor include the file type suffix (such as \u0027.pdf\u0027).",
            "example": "Company_X_Annual_Report_2024"
          },
          "documentCategory": {
            "type": "string",
            "description": "The Dataland document category to which the document belongs.",
            "enum": [
              "AnnualReport",
              "SustainabilityReport",
              "Policy",
              "Other"
            ]
          },
          "companyIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The set of Dataland company IDs of the companies using this document as a referenced report.",
            "example": [
              "c9710c7b-9cd6-446b-85b0-3773d2aceb48",
              "1e63a842-1e65-43ed-b78a-5e7cec155c28"
            ],
            "items": {
              "type": "string"
            }
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which this document was published by the responsible company, specified in format \u0027yyyy-MM-dd\u0027.",
            "format": "date",
            "example": "2024-02-13"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The associated reporting period (e.g. a fiscal year).",
            "example": "2023"
          }
        }
      },
      "DocumentMetaInfoResponse": {
        "required": [
          "documentId",
          "uploaderId"
        ],
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "The unique identifier of the document on Dataland. It is contained in the HTTP response after posting a new document and is a SHA-256 value.",
            "example": "afa44f6138e4e3925f9da5ae355a9ee60f1630e52ddd755c4b2762cf61b4f7b4"
          },
          "documentName": {
            "type": "string",
            "description": "Name under which the document is saved on Dataland. Does not need to coincide with the name of the uploaded file nor include the file type suffix (such as \u0027.pdf\u0027).",
            "example": "Company_X_Annual_Report_2024"
          },
          "documentCategory": {
            "type": "string",
            "description": "The Dataland document category to which the document belongs.",
            "enum": [
              "AnnualReport",
              "SustainabilityReport",
              "Policy",
              "Other"
            ]
          },
          "companyIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The set of Dataland company IDs of the companies using this document as a referenced report.",
            "example": [
              "c9710c7b-9cd6-446b-85b0-3773d2aceb48",
              "1e63a842-1e65-43ed-b78a-5e7cec155c28"
            ],
            "items": {
              "type": "string"
            }
          },
          "uploaderId": {
            "type": "string",
            "description": "The Dataland user ID of the user who uploaded the document.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which this document was published by the responsible company, specified in format \u0027yyyy-MM-dd\u0027.",
            "format": "date",
            "example": "2024-02-13"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The associated reporting period (e.g. a fiscal year).",
            "example": "2023"
          }
        }
      },
      "DocumentMetaInfoPatch": {
        "type": "object",
        "properties": {
          "documentName": {
            "type": "string",
            "description": "Name under which the document is saved on Dataland. Does not need to coincide with the name of the uploaded file nor include the file type suffix (such as \u0027.pdf\u0027).",
            "example": "Company_X_Annual_Report_2024"
          },
          "documentCategory": {
            "type": "string",
            "description": "The Dataland document category to which the document belongs.",
            "enum": [
              "AnnualReport",
              "SustainabilityReport",
              "Policy",
              "Other"
            ]
          },
          "companyIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The set of Dataland company IDs of the companies using this document as a referenced report.",
            "example": [
              "c9710c7b-9cd6-446b-85b0-3773d2aceb48",
              "1e63a842-1e65-43ed-b78a-5e7cec155c28"
            ],
            "items": {
              "type": "string"
            }
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which this document was published by the responsible company, specified in format \u0027yyyy-MM-dd\u0027.",
            "format": "date",
            "example": "2024-02-13"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The associated reporting period (e.g. a fiscal year).",
            "example": "2023"
          }
        },
        "description": "A patch object for document metainformation."
      },
      "DocumentMetaInfoEntity": {
        "required": [
          "companyIds",
          "documentId",
          "documentType",
          "isViewableByUser",
          "qaStatus",
          "uploadTime",
          "uploaderId"
        ],
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "The unique identifier of the document on Dataland. It is contained in the HTTP response after posting a new document and is a SHA-256 value.",
            "example": "afa44f6138e4e3925f9da5ae355a9ee60f1630e52ddd755c4b2762cf61b4f7b4"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "documentName": {
            "type": "string",
            "description": "Name under which the document is saved on Dataland. Does not need to coincide with the name of the uploaded file nor include the file type suffix (such as \u0027.pdf\u0027).",
            "example": "Company_X_Annual_Report_2024"
          },
          "documentCategory": {
            "type": "string",
            "description": "The Dataland document category to which the document belongs.",
            "enum": [
              "AnnualReport",
              "SustainabilityReport",
              "Policy",
              "Other"
            ]
          },
          "companyIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The set of Dataland company IDs of the companies using this document as a referenced report.",
            "example": [
              "c9710c7b-9cd6-446b-85b0-3773d2aceb48",
              "1e63a842-1e65-43ed-b78a-5e7cec155c28"
            ],
            "items": {
              "type": "string"
            }
          },
          "uploaderId": {
            "type": "string",
            "description": "The Dataland user ID of the user who uploaded the document.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "uploadTime": {
            "type": "integer",
            "description": "The timestamp (epoch milliseconds) at which the document was uploaded to Dataland.",
            "format": "int64",
            "example": 1751291891271
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which this document was published by the responsible company, specified in format \u0027yyyy-MM-dd\u0027.",
            "format": "date",
            "example": "2024-02-13"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The associated reporting period (e.g. a fiscal year).",
            "example": "2023"
          },
          "qaStatus": {
            "$ref": "#/components/schemas/QaStatus"
          },
          "isViewableByUser": {
            "type": "boolean"
          }
        }
      },
      "DocumentType": {
        "type": "string",
        "description": "The file type of the document.",
        "enum": [
          "Pdf",
          "Xls",
          "Xlsx",
          "Ods"
        ]
      },
      "QaStatus": {
        "type": "string",
        "description": "The status with regard to Dataland\u0027s quality assurance process.",
        "enum": [
          "Pending",
          "Accepted",
          "Rejected"
        ]
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "ErrorDetails": {
        "required": [
          "errorType",
          "httpStatus",
          "message",
          "summary"
        ],
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "httpStatus": {
            "type": "number"
          },
          "metaInformation": {
            "type": "object"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "default-bearer-auth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      },
      "default-oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/auth",
            "tokenUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  }
}