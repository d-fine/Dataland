dataland.keycloak.client-id=dataland-batch-manager
dataland.keycloak.client-secret=password
dataland.dataland-batch-manager.get-all-gleif-companies.force=false
dataland.dataland-batch-manager.get-all-gleif-companies.flag-file=./this-file-does-not-exist
dataland.dataland-batch-manager.get-all-northdata-companies.force=false
dataland.dataland-batch-manager.get-all-northdata-companies.flag-file=./this-file-does-not-exist
dataland.backend.base-url=https://local-dev.dataland.com/api
dataland.keycloak.base-url=https://local-dev.dataland.com/keycloak
dataland.communitymanager.base-url=https://local-dev.dataland.com/community

# RateLimiter configuration
resilience4j.ratelimiter.instances.apiRateLimiter.limitForPeriod=1000
resilience4j.ratelimiter.instances.apiRateLimiter.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.apiRateLimiter.timeoutDuration=500ms

# Resilience4j Retry configuration
resilience4j.retry.instances.apiRetry.maxAttempts=5
resilience4j.retry.instances.apiRetry.waitDuration=1s
# Retry Configuration for API Calls
# List of exceptions that should trigger retry attempts
resilience4j.retry.instances.apiRetry.retryExceptions=\
    ${retry.exception.timeout},\
    ${retry.exception.client},\
    ${retry.exception.server}
# Individual exception definitions
retry.exception.timeout=java.net.SocketTimeoutException
retry.exception.client=org.dataland.datalandbackend.openApiClient.infrastructure.ClientException
retry.exception.server=org.dataland.datalandbackend.openApiClient.infrastructure.ServerException