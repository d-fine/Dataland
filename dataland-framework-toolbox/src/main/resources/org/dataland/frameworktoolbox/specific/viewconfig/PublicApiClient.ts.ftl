// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type AxiosPromise, type AxiosRequestConfig, type AxiosInstance } from "axios";
import { type CompanyAssociatedData } from "@/api-models/CompanyAssociatedData";
import {
  ${frameworkBaseName}DataControllerApi,
  type ${frameworkBaseName}Data,
  type Configuration,
  type DataMetaInformation,
  type ExportFileType,
} from "@clients/backend";
import { type PublicFrameworkDataApi } from "@/utils/api/UnifiedFrameworkDataApi";
import { type DataAndMetaInformation } from "@/api-models/DataAndMetaInformation";

export class ${frameworkBaseName}ApiClient implements PublicFrameworkDataApi<${frameworkBaseName}Data> {
  private readonly openApiDataController: ${frameworkBaseName}DataControllerApi;

  constructor(configuration: Configuration | undefined, axiosInstance: AxiosInstance | undefined) {
    this.openApiDataController = new ${frameworkBaseName}DataControllerApi(configuration, undefined, axiosInstance);
  }

  getAllCompanyData(
    companyId: string,
    showOnlyActive?: boolean,
    reportingPeriod?: string,
    options?: AxiosRequestConfig,
  ): AxiosPromise<DataAndMetaInformation<${frameworkBaseName}Data>[]> {
    return this.openApiDataController.getAllCompany${frameworkBaseName}Data(companyId, showOnlyActive, reportingPeriod, options);
  }

  getFrameworkData(dataId: string, options?: AxiosRequestConfig): AxiosPromise<CompanyAssociatedData<${frameworkBaseName}Data>> {
    return this.openApiDataController.getCompanyAssociated${frameworkBaseName}Data(dataId, options);
  }

  postFrameworkData(
    data: CompanyAssociatedData<${frameworkBaseName}Data>,
    bypassQa?: boolean,
    options?: AxiosRequestConfig,
  ): AxiosPromise<DataMetaInformation> {
    return this.openApiDataController.postCompanyAssociated${frameworkBaseName}Data(data, bypassQa, options);
  }

  exportCompanyAssociatedDataByDimensions(
     reportingPeriods: string[],
     companyIds: string[],
     fileFormat: ExportFileType,
     keepValueFieldsOnly?: Boolean,
     includeAliases?: Boolean,
     options?: AxiosRequestConfig):
  //eslint-disable-next-line @typescript-eslint/no-explicit-any
    AxiosPromise<any> {
    return this.openApiDataController.exportCompanyAssociated${frameworkBaseName}DataByDimensions(reportingPeriods, companyIds, fileFormat, keepValueFieldsOnly, includeAliases, options);
  }

  getCompanyAssociatedDataByDimensions(
    reportingPeriod: string,
    companyId: string,
    options?: AxiosRequestConfig
  ): AxiosPromise<CompanyAssociatedData<${frameworkBaseName}Data>> {
    return this.openApiDataController.getCompanyAssociated${frameworkBaseName}DataByDimensions(reportingPeriod, companyId, options);
  }
}
