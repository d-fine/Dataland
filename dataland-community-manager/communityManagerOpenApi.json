{
  "openapi": "3.0.1",
  "info": {
    "title": "Dataland Community Manager API documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/community"
    }
  ],
  "tags": [
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    }
  ],
  "paths": {
    "/requests/single": {
      "post": {
        "tags": [
          "request-controller"
        ],
        "summary": "Send a single request",
        "description": "A single data request for a specific framework, a company, and one or multiple reporting periods is triggered.",
        "operationId": "postSingleDataRequest",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "The ID of the user who created the data request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully processed a single data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleDataRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Only admins can impersonate another user."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/bulk": {
      "post": {
        "tags": [
          "request-controller"
        ],
        "summary": "Send a bulk request",
        "description": "A bulk of data requests for specific frameworks and companies is being sent.",
        "operationId": "postBulkDataRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully processed a bulk of data requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataRequestResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/emails/validation": {
      "post": {
        "tags": [
          "email-address-controller"
        ],
        "summary": "Validate an email address and obtain user-related information from an email address.",
        "description": "Based on an email address, learn if there is a Dataland user with that email address and if so, obtain their Dataland user ID, first and last name.",
        "operationId": "postEmailAddressValidation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailAddress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully validated the posted email address and returned user information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakUserInfo"
                }
              }
            }
          },
          "400": {
            "description": "The posted string does not have the format of an email address."
          },
          "403": {
            "description": "You do not have permission to query user information based on email addresses."
          },
          "404": {
            "description": "No Dataland user is registered under this email address."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/company-role-assignments/{role}/{companyId}/{userId}": {
      "post": {
        "tags": [
          "company-roles-controller"
        ],
        "summary": "Assign company role for the company to the user.",
        "description": "The company role for the specified company is being assigned to the user, who must be known to Keycloak. Endpoint accessible to all Dataland-Admins and some Company-Role-Assignees of the company, based on the company role that shall be assigned.",
        "operationId": "assignCompanyRole",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "One of the Dataland specific roles which a user can have with respect to a company on Dataland.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CompanyRole"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user in the company role assignment.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully assigned company role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyRoleAssignment"
                }
              }
            }
          },
          "404": {
            "description": "At least one of the specified IDs (user and company) is unknown."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "company-roles-controller"
        ],
        "summary": "Remove company role for the company from the user.",
        "description": "The company role for the specified company is being removed from the user. Endpoint accessible to all Dataland-Admins and some Company-Role-Assignees of the company, based on the company role that shall be removed.",
        "operationId": "removeCompanyRole",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "One of the Dataland specific roles which a user can have with respect to a company on Dataland.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CompanyRole"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user in the company role assignment.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed company role."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      },
      "head": {
        "tags": [
          "company-roles-controller"
        ],
        "summary": "Validate company role for company and user.",
        "description": "Checks whether the company role for the company is assigned to the user. Endpoint accessible to all Dataland-Admins, for all users that check for their own userId, and all Company-Role-Assignees of the company.",
        "operationId": "hasUserCompanyRole",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "One of the Dataland specific roles which a user can have with respect to a company on Dataland.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CompanyRole"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user in the company role assignment.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified user has the company role."
          },
          "404": {
            "description": "Either the specified company does not exist on Dataland or the user does not have the company role for it."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/company-ownership/{companyId}": {
      "post": {
        "tags": [
          "company-roles-controller"
        ],
        "summary": "Request company ownership for the company.",
        "description": "Request company ownership for the company on Dataland. Endpoint accessible to all Dataland users.",
        "operationId": "postCompanyOwnershipRequest",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "comment",
            "in": "query",
            "description": "An accompanying comment to a company ownership request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "I am the CEO of this company, please make me its owner on Dataland."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully requested company ownership."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      },
      "head": {
        "tags": [
          "company-roles-controller"
        ],
        "summary": "Validate existence of company ownership for the company.",
        "description": "Validates if at least one company owner exists for the specified company. Endpoint accessible to all Dataland users.",
        "operationId": "hasCompanyAtLeastOneOwner",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified company has company owner(s)."
          },
          "404": {
            "description": "The specified company has no company owner(s) yet"
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/{dataRequestId}": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Gets a stored data request for a given ID.",
        "description": "Gets the stored data request corresponding to the provided data request ID.",
        "operationId": "getDataRequestById",
        "parameters": [
          {
            "name": "dataRequestId",
            "in": "path",
            "description": "The unique identifier of the data request on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data request for the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataRequest"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "request-controller"
        ],
        "summary": "Updates a data request.",
        "description": "Updates a data request given the data request id.",
        "operationId": "patchDataRequest",
        "parameters": [
          {
            "name": "dataRequestId",
            "in": "path",
            "description": "The unique identifier of the data request on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataRequestPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully patched data request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoredDataRequest"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/dataset-access/{companyId}/{dataType}/{reportingPeriod}/{userId}": {
      "head": {
        "tags": [
          "data-access-controller"
        ],
        "summary": "This head request checks whether the logged-in user has access to dataset.",
        "description": "This head request checks whether the logged-in user has access to dataset.",
        "operationId": "hasAccessToDataset",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "dataType",
            "in": "path",
            "description": "The associated reporting framework or data point type (as applicable).",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sfdr"
          },
          {
            "name": "reportingPeriod",
            "in": "path",
            "description": "The relevant reporting period (e.g. a fiscal year).",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 2023
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user who created the data request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "responses": {
          "200": {
            "description": "The user can access the dataset."
          },
          "404": {
            "description": "Either the specified dataset does not exist or the user cannot access the dataset."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Get all stored data requests based on filters.",
        "description": "Gets all the stored data request based on filters.",
        "operationId": "getDataRequests",
        "parameters": [
          {
            "name": "dataType",
            "in": "query",
            "description": "The associated reporting framework or data point type (as applicable).",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sfdr",
                  "eutaxonomy-financials",
                  "eutaxonomy-non-financials",
                  "nuclear-and-gas",
                  "lksg",
                  "pcaf",
                  "vsme"
                ]
              }
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The ID of the user who created the data request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "description": "The email address of the user who created this data request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "test@example.com"
          },
          {
            "name": "adminComment",
            "in": "query",
            "description": "The admin comment of the data request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Should be processed with high priority."
          },
          {
            "name": "requestStatus",
            "in": "query",
            "description": "The current request status of the data request.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RequestStatus"
              }
            }
          },
          {
            "name": "accessStatus",
            "in": "query",
            "description": "The current access status of the data request.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccessStatus"
              }
            }
          },
          {
            "name": "requestPriority",
            "in": "query",
            "description": "The priority of the data request.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RequestPriority"
              }
            }
          },
          {
            "name": "reportingPeriods",
            "in": "query",
            "description": "The relevant reporting periods (e.g. fiscal years).",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "2023",
              "2024"
            ]
          },
          {
            "name": "datalandCompanyId",
            "in": "query",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "companySearchString",
            "in": "query",
            "description": "Search string used for company substring matching. Matched against company names and identifiers. Must be at least 3 characters after trimming.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Inc."
          },
          {
            "name": "chunkSize",
            "in": "query",
            "description": "Only a chunk of all matching, ordered results is returned. This parameter specifies the maximum size of a single chunk. All chunks except possibly the last will have that size.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "chunkIndex",
            "in": "query",
            "description": "Only a chunk of all matching, ordered results is returned. This parameter specifies which chunk to return, starting at 0. The default value is 0, meaning the first chunk is returned.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtendedStoredDataRequest"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/user": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Get all stored data requests of the user making the request.",
        "description": "Gets all the stored data request created by the user who is making the request.",
        "operationId": "getDataRequestsForRequestingUser",
        "responses": {
          "200": {
            "description": "Successfully retrieved data requests for the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtendedStoredDataRequest"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/numberOfRequests": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Get the number of requests based on filters.",
        "description": "Get the number of requests based on filters.",
        "operationId": "getNumberOfRequests",
        "parameters": [
          {
            "name": "dataType",
            "in": "query",
            "description": "The associated reporting framework or data point type (as applicable).",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sfdr",
                  "eutaxonomy-financials",
                  "eutaxonomy-non-financials",
                  "nuclear-and-gas",
                  "lksg",
                  "pcaf",
                  "vsme"
                ]
              }
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The ID of the user who created the data request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "description": "The email address of the user who created this data request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "test@example.com"
          },
          {
            "name": "adminComment",
            "in": "query",
            "description": "The admin comment of the data request.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Should be processed with high priority."
          },
          {
            "name": "requestStatus",
            "in": "query",
            "description": "The current request status of the data request.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RequestStatus"
              }
            }
          },
          {
            "name": "accessStatus",
            "in": "query",
            "description": "The current access status of the data request.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccessStatus"
              }
            }
          },
          {
            "name": "requestPriority",
            "in": "query",
            "description": "The priority of the data request.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RequestPriority"
              }
            }
          },
          {
            "name": "reportingPeriods",
            "in": "query",
            "description": "The relevant reporting periods (e.g. fiscal years).",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "2023",
              "2024"
            ]
          },
          {
            "name": "datalandCompanyId",
            "in": "query",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "companySearchString",
            "in": "query",
            "description": "Search string used for company substring matching. Matched against company names and identifiers. Must be at least 3 characters after trimming.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Inc."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the number of data requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/requests/aggregated": {
      "get": {
        "tags": [
          "request-controller"
        ],
        "summary": "Get aggregated open data requests.",
        "description": "Gets aggregated open data requests based on the chosen filters.",
        "operationId": "getAggregatedOpenDataRequests",
        "parameters": [
          {
            "name": "dataTypes",
            "in": "query",
            "description": "The associated reporting framework or data point type (as applicable).",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sfdr",
                  "eutaxonomy-financials",
                  "eutaxonomy-non-financials",
                  "nuclear-and-gas",
                  "lksg",
                  "pcaf",
                  "vsme"
                ]
              }
            }
          },
          {
            "name": "reportingPeriod",
            "in": "query",
            "description": "The relevant reporting period (e.g. a fiscal year).",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 2023
          },
          {
            "name": "aggregatedPriority",
            "in": "query",
            "description": "The aggregated data request priority.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AggregatedRequestPriority"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved aggregated data requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregatedDataRequestWithAggregatedPriority"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/emails/{companyId}/recommended-users": {
      "get": {
        "tags": [
          "email-address-controller"
        ],
        "summary": "Get users by company-associated subdomains.",
        "description": "Returns all users whose email address contains one of the subdomains listed in the associatedSubdomains field of the corresponding CompanyInformation object.",
        "operationId": "getUsersByCompanyAssociatedSubdomains",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users with matching email subdomains.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeycloakUserInfo"
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have the right to make this query."
          },
          "404": {
            "description": "The specified company does not exist."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/company-role-assignments": {
      "get": {
        "tags": [
          "company-roles-controller"
        ],
        "summary": "Get company role assignments that match the provided filters.",
        "description": "Get company role assignments extended by basic user information that match the provided filters. The endpoint is fully accessible to all Dataland Admins. Company Role Assignees can access the endpoint if the companyId filter is set to their company. Any Dataland user can access the endpoint if the userId filter is set to their userId.",
        "operationId": "getExtendedCompanyRoleAssignments",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "One of the Dataland specific roles which a user can have with respect to a company on Dataland.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CompanyRole"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user in the company role assignment.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved extended company role assignments.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyRoleAssignmentExtended"
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have the right to make this query."
          },
          "404": {
            "description": "The specified company does not exist on Dataland."
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "default-oauth": []
          },
          {
            "default-bearer-auth": []
          }
        ]
      }
    },
    "/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027info\u0027",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint \u0027health\u0027",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SingleDataRequest": {
        "required": [
          "companyIdentifier",
          "dataType",
          "notifyMeImmediately",
          "reportingPeriods"
        ],
        "type": "object",
        "properties": {
          "companyIdentifier": {
            "type": "string",
            "description": "Unique identifier to find a company.",
            "example": "5493001KJX4BT0IHAG73"
          },
          "dataType": {
            "type": "string",
            "description": "The associated reporting framework or data point type (as applicable).",
            "enum": [
              "sfdr",
              "eutaxonomy-financials",
              "eutaxonomy-non-financials",
              "nuclear-and-gas",
              "lksg",
              "pcaf",
              "vsme"
            ]
          },
          "reportingPeriods": {
            "uniqueItems": true,
            "type": "array",
            "description": "A set of reporting periods (years) on Dataland. Requests will be posted for all specified reporting periods.",
            "example": [
              "2023",
              "2024"
            ],
            "items": {
              "type": "string"
            }
          },
          "contacts": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of company contact email addresses specified by the user creating the request.",
            "example": [
              "test@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string",
            "description": "A message to be sent to the specified company contacts.",
            "example": "Please consider sharing your data on Dataland."
          },
          "notifyMeImmediately": {
            "type": "boolean",
            "description": "Boolean indicating whether an immediate notification email shall be sent whenever there is an update concerning the request. If set to false, these updates are listed in the weekly summary email."
          }
        }
      },
      "SingleDataRequestResponse": {
        "required": [
          "message",
          "reportingPeriodsOfDuplicateDataRequests",
          "reportingPeriodsOfStoredAccessRequests",
          "reportingPeriodsOfStoredDataRequests"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A text about the result of Dataland processing the data request.",
            "example": "Your data request was stored successfully."
          },
          "reportingPeriodsOfStoredDataRequests": {
            "type": "array",
            "description": "Reporting periods corresponding to the accepted and stored data requests.",
            "example": [
              "2023",
              "2024"
            ],
            "items": {
              "type": "string"
            }
          },
          "reportingPeriodsOfDuplicateDataRequests": {
            "type": "array",
            "description": "Reporting periods corresponding to data requests that were rejected due to being duplicates.",
            "example": [
              "2022"
            ],
            "items": {
              "type": "string"
            }
          },
          "reportingPeriodsOfStoredAccessRequests": {
            "type": "array",
            "description": "Reporting periods corresponding to the accepted and stored access requests.",
            "example": [
              "2023",
              "2024"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BulkDataRequest": {
        "required": [
          "companyIdentifiers",
          "dataTypes",
          "notifyMeImmediately",
          "reportingPeriods"
        ],
        "type": "object",
        "properties": {
          "companyIdentifiers": {
            "uniqueItems": true,
            "type": "array",
            "description": "A set of identifiers for companies on Dataland by. Use Dataland company IDs, Leis or Isins for the best results. Requests will be posted for all companies that can be identified.",
            "example": [
              "1e63a842-1e65-43ed-b78a-5e7cec155c28",
              "5493001KJX4BT0IHAG73",
              "US0378331005"
            ],
            "items": {
              "type": "string"
            }
          },
          "dataTypes": {
            "uniqueItems": true,
            "type": "array",
            "description": "A set of framework names. Use kebab-case names such as \"eutaxonomy-financials\". Using a framework name that cannot be identified will result in an error, and no requests will be created.",
            "example": [
              "sfdr",
              "eutaxonomy-financials",
              "eutaxonomy-non-financials",
              "nuclear-and-gas",
              "lksg",
              "vsme"
            ],
            "items": {
              "type": "string",
              "enum": [
                "sfdr",
                "eutaxonomy-financials",
                "eutaxonomy-non-financials",
                "nuclear-and-gas",
                "lksg",
                "pcaf",
                "vsme"
              ]
            }
          },
          "reportingPeriods": {
            "uniqueItems": true,
            "type": "array",
            "description": "A set of reporting periods (years) on Dataland. Requests will be posted for all specified reporting periods.",
            "example": [
              "2023",
              "2024"
            ],
            "items": {
              "type": "string"
            }
          },
          "notifyMeImmediately": {
            "type": "boolean",
            "description": "Boolean indicating whether an immediate notification email shall be sent whenever there is an update concerning one of the posted requests. If set to false, these updates are listed in the weekly summary email."
          }
        }
      },
      "BulkDataRequestResponse": {
        "required": [
          "acceptedDataRequests",
          "alreadyExistingDatasets",
          "alreadyExistingRequests",
          "rejectedCompanyIdentifiers"
        ],
        "type": "object",
        "properties": {
          "acceptedDataRequests": {
            "type": "array",
            "description": "Contains information about all accepted data requests",
            "items": {
              "$ref": "#/components/schemas/ResourceResponse"
            }
          },
          "alreadyExistingRequests": {
            "type": "array",
            "description": "Contains information about all already existing data requests.",
            "items": {
              "$ref": "#/components/schemas/ResourceResponse"
            }
          },
          "alreadyExistingDatasets": {
            "type": "array",
            "description": "Contains information about all already existing data sets",
            "items": {
              "$ref": "#/components/schemas/ResourceResponse"
            }
          },
          "rejectedCompanyIdentifiers": {
            "type": "array",
            "description": "Contains all company identifiers that were rejected by Dataland",
            "example": [
              "5493001KJX4BT0IHAG73"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResourceResponse": {
        "required": [
          "companyName",
          "framework",
          "reportingPeriod",
          "resourceId",
          "userProvidedIdentifier"
        ],
        "type": "object",
        "properties": {
          "userProvidedIdentifier": {
            "type": "string",
            "description": "The identifier (e.g., Dataland company ID or LEI) through which the user specified the respective company.",
            "example": "5493001KJX4BT0IHAG73"
          },
          "companyName": {
            "type": "string",
            "description": "The official name of the company.",
            "example": "ABC Corporation"
          },
          "framework": {
            "type": "string",
            "description": "The associated reporting framework or data point type (as applicable).",
            "example": "sfdr"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The relevant reporting period (e.g. a fiscal year).",
            "example": "2023"
          },
          "resourceId": {
            "type": "string",
            "description": "A unique identifier of a resource on Dataland. In case of newly created or duplicate open requests, it identifies the newly created or original open request. In case of a request for an already existing dataset, it identifies that dataset.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "resourceUrl": {
            "type": "string",
            "description": "A URL pointing to the resource identified by resourceId.",
            "example": "https://dataland.com/requests/1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        }
      },
      "EmailAddress": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address of the Dataland user in question.",
            "example": "test@example.com"
          }
        }
      },
      "KeycloakUserInfo": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address of the Dataland user in question.",
            "example": "test@example.com"
          },
          "id": {
            "type": "string",
            "description": "The Dataland user ID of the user in question.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the Dataland user in question.",
            "example": "Jane"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the Dataland user in question.",
            "example": "Doe"
          }
        }
      },
      "CompanyRole": {
        "type": "string",
        "enum": [
          "MemberAdmin",
          "Member",
          "CompanyOwner",
          "DataUploader"
        ]
      },
      "CompanyRoleAssignment": {
        "required": [
          "companyId",
          "companyRole",
          "userId"
        ],
        "type": "object",
        "properties": {
          "companyRole": {
            "$ref": "#/components/schemas/CompanyRole"
          },
          "companyId": {
            "type": "string",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          "userId": {
            "type": "string",
            "description": "The unique identifier of the user in the company role assignment.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        }
      },
      "AccessStatus": {
        "type": "string",
        "description": "The current access status of the data request.",
        "enum": [
          "Declined",
          "Granted",
          "Pending",
          "Public",
          "Revoked"
        ]
      },
      "DataRequestPatch": {
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "accessStatus": {
            "$ref": "#/components/schemas/AccessStatus"
          },
          "contacts": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of company contact email addresses specified by the user creating the request.",
            "example": [
              "test@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string",
            "description": "A message to be sent to the specified company contacts.",
            "example": "Please consider sharing your data on Dataland."
          },
          "requestPriority": {
            "$ref": "#/components/schemas/RequestPriority"
          },
          "notifyMeImmediately": {
            "type": "boolean",
            "description": "Boolean indicating whether an immediate notification email shall be sent whenever there is an update concerning one of the posted requests. If set to false, these updates are listed in the weekly summary email."
          },
          "adminComment": {
            "type": "string",
            "description": "The admin comment of the data request.",
            "example": "Should be processed with high priority."
          },
          "requestStatusChangeReason": {
            "type": "string",
            "description": "The reason for the status change.",
            "example": "The company has not published data for this reporting period yet."
          }
        }
      },
      "RequestPriority": {
        "type": "string",
        "description": "The priority of the data request.",
        "enum": [
          "Low",
          "Baseline",
          "High",
          "Urgent"
        ]
      },
      "RequestStatus": {
        "type": "string",
        "description": "The current request status of the data request.",
        "enum": [
          "Open",
          "Answered",
          "Resolved",
          "Withdrawn",
          "Closed",
          "NonSourceable"
        ]
      },
      "StoredDataRequest": {
        "required": [
          "accessStatus",
          "creationTimestamp",
          "dataRequestId",
          "dataRequestStatusHistory",
          "dataType",
          "datalandCompanyId",
          "lastModifiedDate",
          "messageHistory",
          "notifyMeImmediately",
          "reportingPeriod",
          "requestPriority",
          "requestStatus",
          "userId"
        ],
        "type": "object",
        "properties": {
          "dataRequestId": {
            "type": "string",
            "description": "The unique identifier of the data request on Dataland.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who created the data request.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "userEmailAddress": {
            "type": "string",
            "description": "The email address of the user who created this data request.",
            "example": "test@example.com"
          },
          "notifyMeImmediately": {
            "type": "boolean",
            "description": "Boolean indicating whether an immediate notification email shall be sent whenever there is an update concerning one of the posted requests. If set to false, these updates are listed in the weekly summary email."
          },
          "creationTimestamp": {
            "type": "integer",
            "description": "The timestamp (epoch milliseconds) when the user created the data request.",
            "format": "int64",
            "example": 1751291891271
          },
          "dataType": {
            "type": "string",
            "description": "The associated reporting framework or data point type (as applicable).",
            "example": "sfdr"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The relevant reporting period (e.g. a fiscal year).",
            "example": "2023"
          },
          "datalandCompanyId": {
            "type": "string",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          "messageHistory": {
            "type": "array",
            "description": "Information on the messages sent to company contacts regarding the data request.",
            "items": {
              "$ref": "#/components/schemas/StoredDataRequestMessageObject"
            }
          },
          "dataRequestStatusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoredDataRequestStatusObject"
            }
          },
          "lastModifiedDate": {
            "type": "integer",
            "description": "The timestamp (epoch milliseconds) when the data request has been modified the last time.",
            "format": "int64",
            "example": 1751291891271
          },
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "accessStatus": {
            "$ref": "#/components/schemas/AccessStatus"
          },
          "requestPriority": {
            "$ref": "#/components/schemas/RequestPriority"
          },
          "adminComment": {
            "type": "string",
            "description": "The admin comment of the data request.",
            "example": "Should be processed with high priority."
          }
        }
      },
      "StoredDataRequestMessageObject": {
        "required": [
          "contacts",
          "creationTimestamp"
        ],
        "type": "object",
        "properties": {
          "contacts": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of company contact email addresses specified by the user creating the request.",
            "example": [
              "test@example.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string",
            "description": "A message specified by the user creating the request to be sent to the company contacts.",
            "example": "Please consider sharing your data on Dataland."
          },
          "creationTimestamp": {
            "type": "integer",
            "description": "The timestamp (epoch milliseconds) when the message object was created.",
            "format": "int64",
            "example": 1751291891271
          }
        },
        "description": "Information on the messages sent to company contacts regarding the data request."
      },
      "StoredDataRequestStatusObject": {
        "required": [
          "accessStatus",
          "creationTimestamp",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "creationTimestamp": {
            "type": "integer",
            "description": "The timestamp (epoch milliseconds) when the status object was created.",
            "format": "int64",
            "example": 1751291891271
          },
          "accessStatus": {
            "$ref": "#/components/schemas/AccessStatus"
          },
          "requestStatusChangeReason": {
            "type": "string",
            "description": "The reason for the status change.",
            "example": "The company has not published data for this reporting period yet."
          },
          "answeringDataId": {
            "type": "string",
            "description": "The data ID of the data set that answered the request.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          }
        }
      },
      "ExtendedStoredDataRequest": {
        "required": [
          "accessStatus",
          "companyName",
          "creationTimestamp",
          "dataRequestId",
          "dataType",
          "datalandCompanyId",
          "lastModifiedDate",
          "reportingPeriod",
          "requestPriority",
          "requestStatus",
          "userId"
        ],
        "type": "object",
        "properties": {
          "dataRequestId": {
            "type": "string",
            "description": "The unique identifier of the data request on Dataland.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who created the data request.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "userEmailAddress": {
            "type": "string",
            "description": "The email address of the user who created this data request.",
            "example": "test@example.com"
          },
          "creationTimestamp": {
            "type": "integer",
            "description": "The timestamp (epoch milliseconds) when the user created the data request.",
            "format": "int64",
            "example": 1751291891271
          },
          "dataType": {
            "type": "string",
            "description": "The associated reporting framework or data point type (as applicable).",
            "example": "sfdr"
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The relevant reporting period (e.g. a fiscal year).",
            "example": "2023"
          },
          "datalandCompanyId": {
            "type": "string",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          "companyName": {
            "type": "string",
            "description": "The official name of the company.",
            "example": "ABC Corporation"
          },
          "lastModifiedDate": {
            "type": "integer",
            "description": "The timestamp (epoch milliseconds) when the data request has been modified the last time.",
            "format": "int64",
            "example": 1751291891271
          },
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "accessStatus": {
            "$ref": "#/components/schemas/AccessStatus"
          },
          "requestPriority": {
            "$ref": "#/components/schemas/RequestPriority"
          },
          "adminComment": {
            "type": "string",
            "description": "The admin comment of the data request.",
            "example": "Should be processed with high priority."
          }
        }
      },
      "AggregatedRequestPriority": {
        "type": "string",
        "enum": [
          "Low",
          "Normal",
          "Baseline",
          "High",
          "VeryHigh",
          "Urgent"
        ]
      },
      "AggregatedDataRequestWithAggregatedPriority": {
        "required": [
          "aggregatedPriority",
          "count",
          "datalandCompanyId"
        ],
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "description": "The associated reporting framework or data point type (as applicable).",
            "enum": [
              "sfdr",
              "eutaxonomy-financials",
              "eutaxonomy-non-financials",
              "nuclear-and-gas",
              "lksg",
              "pcaf",
              "vsme"
            ]
          },
          "reportingPeriod": {
            "type": "string",
            "description": "The relevant reporting period (e.g. a fiscal year).",
            "example": "2023"
          },
          "datalandCompanyId": {
            "type": "string",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          "aggregatedPriority": {
            "$ref": "#/components/schemas/AggregatedRequestPriority"
          },
          "count": {
            "type": "integer",
            "description": "The count of existing data requests for this framework, reporting period, company and priority.",
            "format": "int64",
            "example": 23
          }
        }
      },
      "CompanyRoleAssignmentExtended": {
        "required": [
          "companyId",
          "companyRole",
          "email",
          "userId"
        ],
        "type": "object",
        "properties": {
          "companyRole": {
            "$ref": "#/components/schemas/CompanyRole"
          },
          "companyId": {
            "type": "string",
            "description": "The unique identifier under which a company can be found on Dataland.",
            "example": "c9710c7b-9cd6-446b-85b0-3773d2aceb48"
          },
          "userId": {
            "type": "string",
            "description": "The unique identifier of the user in the company role assignment.",
            "example": "1e63a842-1e65-43ed-b78a-5e7cec155c28"
          },
          "email": {
            "type": "string",
            "description": "The email address of the user in the company role assignment.",
            "example": "test@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the user in the company role assignment.",
            "example": "Jane"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the user in the company role assignment.",
            "example": "Doe"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "ErrorDetails": {
        "required": [
          "errorType",
          "httpStatus",
          "message",
          "summary"
        ],
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "httpStatus": {
            "type": "number"
          },
          "metaInformation": {
            "type": "object"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "default-bearer-auth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      },
      "default-oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/auth",
            "tokenUrl": "/keycloak/realms/datalandsecurity/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  }
}