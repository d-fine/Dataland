// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
package org.dataland.datalandbackend.frameworks.lksg.model.social.withholdingAdequateWages

import io.swagger.v3.oas.annotations.media.Schema
import jakarta.validation.Valid
import org.dataland.datalandbackend.model.datapoints.BaseDataPoint
import org.dataland.datalandbackend.model.enums.commons.YesNo
import org.dataland.datalandbackend.model.enums.commons.YesNoNa

/**
 * The data-model for the WithholdingAdequateWages section
 */
data class LksgSocialWithholdingAdequateWages(
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Is your company currently withholding adequate wages (adequate in the sense of local laws)?""",
        example = """ "Yes"  """,
    )
    val adequateWageWithholding: YesNo? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Are any measures taken to prevent the withholding of adequate wages?""",
        example = """ "Yes"  """,
    )
    val adequateWagesMeasures: YesNo? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Does your company document the working hours and wages of its employees?""",
        example = """ "Yes"  """,
    )
    @field:Valid()
    val documentedWorkingHoursAndWages: BaseDataPoint<YesNo>? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Does your company pay employees adequate living wages? (the appropriate wage is at least the minimum wage set by the applicable law and is otherwise measured according to the law of the place of employment)""",
        example = """ "Yes"  """,
    )
    @field:Valid()
    val adequateLivingWage: BaseDataPoint<YesNo>? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Has your company implemented the payment of wages through standardized and regular process flows?""",
        example = """ "Yes"  """,
    )
    val regularWagesProcessFlow: YesNo? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Do fixed hourly wages exist in your company?""",
        example = """ "Yes"  """,
    )
    val fixedHourlyWages: YesNoNa? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Does your company have fixed piecework wages (pay per unit)?""",
        example = """ "Yes"  """,
    )
    val fixedPieceworkWages: YesNoNa? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Have any other measures been taken to prevent withholding adequate wages?""",
        example = """ "Yes"  """,
    )
    @field:Valid()
    val adequateWageOtherMeasures: BaseDataPoint<YesNo>? = null,
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Please list other measures (if available) you take to prevent withholding adequate wages?""",
        example = """ "This is a string"  """,
    )
    val adequateWageOtherMeasuresDescription: String? = null,
)
