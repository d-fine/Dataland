// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
package org.dataland.datalandbackend.frameworks.pcaf.model.environmentalEstimation.greenhouseGasEmissions

import io.swagger.v3.oas.annotations.media.Schema
import jakarta.validation.Valid
import org.dataland.datalandbackend.model.datapoints.ExtendedDataPoint
import org.dataland.datalandbackend.validator.MinimumValue
import java.math.BigDecimal

/**
 * The data-model for the GreenhouseGasEmissions section
 */
@Suppress("MaxLineLength")
data class PcafEnvironmentalestimationGreenhouseGasEmissions(
    @field:MinimumValue(minimumValue = 0)
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Estimation of Scope 1 greenhouse gas emissions in tonnes, namely emissions generated from sources that are controlled by the company that issues the underlying assets (equity share approach preferably used).""",
        example = """{
      "value" : 100.5, 
      "quality" : "Reported",
      "comment" : "The value is reported by the company."
      "dataSource" : {
        "page" : "5-7",
        "tagName" : "monetaryAmount",
        "fileName" : "AnnualReport2020.pdf",
        "fileReference" : "207c80dd75e923a88ff283d8bf97e346c735d2859e27bd702cf033feaef6de47"
      }
    } """,
    )
    @field:Valid()
    val scope1GhgEmissionsInTonnes: ExtendedDataPoint<BigDecimal?>? = null,
    @field:MinimumValue(minimumValue = 0)
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Estimation of Scope 2 greenhouse gas emissions in tonnes from the consumption of purchased electricity, steam, or other sources of energy computed using the location-based method (equity share approach preferably used).""",
        example = """{
      "value" : 100.5, 
      "quality" : "Reported",
      "comment" : "The value is reported by the company."
      "dataSource" : {
        "page" : "5-7",
        "tagName" : "monetaryAmount",
        "fileName" : "AnnualReport2020.pdf",
        "fileReference" : "207c80dd75e923a88ff283d8bf97e346c735d2859e27bd702cf033feaef6de47"
      }
    } """,
    )
    @field:Valid()
    val scope2GhgEmissionsLocationBasedInTonnes: ExtendedDataPoint<BigDecimal?>? = null,
    @field:MinimumValue(minimumValue = 0)
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Estimation of Scope 2 greenhouse gas emissions in tonnes from the consumption of purchased electricity, steam, or other sources of energy computed using the market-based method (equity share approach preferably used).""",
        example = """{
      "value" : 100.5, 
      "quality" : "Reported",
      "comment" : "The value is reported by the company."
      "dataSource" : {
        "page" : "5-7",
        "tagName" : "monetaryAmount",
        "fileName" : "AnnualReport2020.pdf",
        "fileReference" : "207c80dd75e923a88ff283d8bf97e346c735d2859e27bd702cf033feaef6de47"
      }
    } """,
    )
    @field:Valid()
    val scope2GhgEmissionsMarketBasedInTonnes: ExtendedDataPoint<BigDecimal?>? = null,
    @field:MinimumValue(minimumValue = 0)
    @Suppress("ktlint:standard:max-line-length")
    @field:Schema(
        description = """Estimation of Scope 3 greenhouse gas emissions in tonnes, i.e. all indirect upstream and downstream emissions that are not included in scope 2 (equity share approach preferably used).""",
        example = """{
      "value" : 100.5, 
      "quality" : "Reported",
      "comment" : "The value is reported by the company."
      "dataSource" : {
        "page" : "5-7",
        "tagName" : "monetaryAmount",
        "fileName" : "AnnualReport2020.pdf",
        "fileReference" : "207c80dd75e923a88ff283d8bf97e346c735d2859e27bd702cf033feaef6de47"
      }
    } """,
    )
    @field:Valid()
    val scope3GhgEmissionsInTonnes: ExtendedDataPoint<BigDecimal?>? = null,
)
