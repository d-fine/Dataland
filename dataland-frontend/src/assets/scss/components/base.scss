@use '../colors';
@use '../units';
@use '../variables';

* {
  box-sizing: border-box;
}

#app {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: variables.$brown-dark;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: unset;
}

body {
  font-family: var(--font-family);
  font-size: variables.$fs-base;
  font-weight: variables.$fw-normal;
  margin: 0;
  padding: 0;
}

.w-10 {
  width: 10vw;
}

.w-20 {
  width: 20vw;
}

.w-25 {
  width: 25vw;
}

.w-30 {
  width: 30vw;
}

.w-33 {
  width: 33vw;
}

.w-40 {
  width: 40vw;
}

.w-50 {
  width: 50vw;
}

.w-60 {
  width: 60vw;
}

.w-66 {
  width: 66vw;
}

.w-70 {
  width: 70vw;
}

.w-75 {
  width: 75vw;
}

.w-80 {
  width: 80vw;
}

.w-90 {
  width: 90vw;
}

.w-100 {
  width: 100vw;
}

.flex-direction-column {
  flex-direction: column;
}

.flex-direction-row {
  flex-direction: row;
}

.p-component {
  &:disabled {
    opacity: 0.8;
  }
}

.d-content {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.d-header {
  z-index: 100;
}

.p-fluid {
  .p-button,
  .p-inputtext {
    width: 100%;
  }

  .p-input-icon-left,
  .p-input-icon-right {
    display: block;
    width: 100%;
  }
}

.p-badge {
  color: colors.$btn-primary-color;
  background: colors.$btn-primary-bg;
  font-size: variables.$fs-sm;
  font-weight: variables.$fw-semibold;
  margin: variables.$spacing-xxxs;
  text-align: center;
  min-width: 1.5rem;
  height: 1.5rem;
  line-height: 1.5rem;
  display: inline-block;
  border-radius: 0.25rem;
  padding: 0 0.5rem;

  &.round {
    border-radius: 50%;
  }

  &.badge-yellow {
    color: var(--yellow-700);
    background: var(--yellow-100);
  }

  &.badge-orange {
    color: var(--orange-700);
    background: var(--orange-100);
  }

  &.badge-green,
  &.p-badge-success {
    color: var(--green-700);
    background: var(--green-100);
    border-color: var(--green-700);
  }

  &.badge-light-green {
    color: var(--green-500);
    background: var(--green-100);
    border-color: var(--green-500);
  }

  &.badge-red {
    color: var(--red-700);
    background: var(--red-100);
  }

  &.badge-blue {
    color: var(--blue-700);
    background: var(--blue-100);
  }

  &.badge-purple {
    color: var(--purple-700);
    background: var(--purple-100);
  }

  &.badge-gray {
    color: var(--gray-700);
    background: var(--gray-100);
  }

  &.badge-brown {
    color: variables.$brown-light;
    background: #e2d9c5;
  }

  &.outline {
    background: none;
    border-width: 1px;
    border-style: solid;
    align-items: center;
    display: flex;
    margin: 1rem;
    height: auto;
  }
}

.d-center-div {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
}

.d-letters {
  letter-spacing: 0.05em;
}

.d-small-logo {
  height: 1.25em;
}

// sections
.third-section {
  background-color: variables.$brown-lighter;
  color: var(--default-neutral-white);
}

.second-section {
  background-color: variables.$paper-white;
  color: variables.$aquamarine-dark;
}

.paper-section {
  background-color: variables.$paper-white;
}

// We want this classes to always overwrite styles to main colors
.text-primary,
.primary-color {
  color: colors.$main-color !important;
}

.text-danger {
  color: var(--fk-color-error);
  font-size: variables.$fs-xs;
}

.bg-primary {
  color: colors.$bg-text-primary !important;
  background-color: colors.$main-color !important;
}

.bg-white {
  background-color: var(--default-neutral-white) !important;
}

// --- //

// 12px
.fs-xs {
  font-size: variables.$fs-xs;
}

// 14px
.fs-sm {
  font-size: variables.$fs-sm;
}

// 16px
.fs-base {
  font-size: variables.$fs-base;
}

// 18px
.fs-lg {
  font-size: variables.$fs-lg;
}

// 24px
.fs-xl {
  font-size: variables.$fs-xl;
}

// 32px
.fs-xxl {
  font-size: variables.$fs-xxl;
}

//font-weight
.fw-normal {
  font-weight: units.$normal-weight;
}

.fw-light-bold {
  font-weight: variables.$fw-medium;
}

.fw-semi-bold {
  font-weight: variables.$fw-semibold;
}

// Typography //
.gray-text {
  color: variables.$gray;
}

.gray-text-light {
  color: variables.$gray-light;
}

.red-text {
  color: variables.$red;
}

.green-text {
  color: variables.$green;
}

// Radius //
.radius-1 {
  border-radius: variables.$radius-xxxs;
}

// Home Page
.video-container {
  position: relative;
  width: 100%;
  padding-bottom: 56.25%;
  height: 0;
}

.video-container iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}

.top-left-blue-border {
  border-style: solid;
  border-width: 1px 0 0 1px;
  border-color: variables.$blue-light;
}

.right-bottom-blue-border {
  border-style: solid;
  border-width: 0 1px 1px 0;
  border-color: variables.$blue-light;
}

.all-sides-blue-border {
  border-style: solid;
  border-width: 1px 1px 1px 1px;
  border-color: variables.$blue-light;
}

.middle-center-div {
  flex: 1;
  align-items: center;
  align-content: center;
  display: flex;
  justify-content: center;
  justify-items: center;
}

.vertical-middle {
  display: flex;
  align-items: center;
}

.p-disabled,
.p-component:disabled {
  opacity: 0.5;
}

.d-cursor-pointer {
  cursor: pointer;
}

ul.unstyled-ul-list {
  padding: 0;
  margin: 0;

  li {
    padding: 0;
    margin: 0;
    list-style: none;
  }
}

.next-to-each-other {
  display: flex;
  gap: 1rem;
}

.place-self-center {
  place-self: center;
}

.grid-2-form-cards {
  display: grid;
  grid-template-columns: 1fr 1fr;

  > div:nth-child(even) {
    border-left: 1px solid colors.$table-border;
    padding: 0 0 0 20px;
  }

  > div:nth-child(odd) {
    border: 0 none;
    padding: 0 20px 0 0;
  }

  .formkit-outer:last-child {
    margin: 0;
  }

  grid-gap: 10px;
  @media screen and (max-width: 1200px) {
    grid-template-columns: 1fr;
    > div:nth-child(even) {
      border: 0 none;
      padding: 0;
    }
    > div:nth-child(odd) {
      padding: 0;
    }
    > div {
      margin-bottom: 1rem;
    }
  }
}

.grid3 {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 10px;
}

.display-contents {
  display: contents;
}
