// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type AxiosPromise, type AxiosRequestConfig, type AxiosInstance } from "axios";
import { type CompanyAssociatedData } from "@/api-models/CompanyAssociatedData";
import { type Configuration, type DataMetaInformation, type LksgData, LksgDataControllerApi } from "@clients/backend";
import { type PublicFrameworkDataApi } from "@/utils/api/UnifiedFrameworkDataApi";
import { type DataAndMetaInformation } from "@/api-models/DataAndMetaInformation";

export class LksgApiClient implements PublicFrameworkDataApi<LksgData> {
  private readonly openApiDataController: LksgDataControllerApi;

  constructor(configuration: Configuration | undefined, axiosInstance: AxiosInstance | undefined) {
    this.openApiDataController = new LksgDataControllerApi(configuration, undefined, axiosInstance);
  }

  getAllCompanyData(
    companyId: string,
    showOnlyActive?: boolean,
    reportingPeriod?: string,
    options?: AxiosRequestConfig,
  ): AxiosPromise<DataAndMetaInformation<LksgData>[]> {
    return this.openApiDataController.getAllCompanyLksgData(companyId, showOnlyActive, reportingPeriod, options);
  }

  getFrameworkData(dataId: string, options?: AxiosRequestConfig): AxiosPromise<CompanyAssociatedData<LksgData>> {
    return this.openApiDataController.getCompanyAssociatedLksgData(dataId, options);
  }

  postFrameworkData(
    data: CompanyAssociatedData<LksgData>,
    bypassQa?: boolean,
    options?: AxiosRequestConfig,
  ): AxiosPromise<DataMetaInformation> {
    return this.openApiDataController.postCompanyAssociatedLksgData(data, bypassQa, options);
  }
}
