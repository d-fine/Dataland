// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type Category } from '@/utils/GenericFrameworkTypes';

export const pcafDataModel = [
  {
    name: 'general',
    label: 'General',
    color: '',
    showIf: (): boolean => true,
    subcategories: [
      {
        name: 'general',
        label: 'General',
        fields: [
          {
            name: 'fiscalYearDeviation',
            label: 'Fiscal Year Deviation',
            description: 'Does the fiscal year deviate from the calendar year?',
            options: [
              {
                label: 'Deviation',
                value: 'Deviation',
              },
              {
                label: 'No Deviation',
                value: 'NoDeviation',
              },
            ],

            component: 'RadioButtonsFormField',
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: 'fiscalYearEnd',
            label: 'Fiscal Year End',
            description: 'The date the fiscal year ends.',

            component: 'DateFormField',
            required: false,
            showIf: (): boolean => true,
          },
        ],
      },
      {
        name: 'company',
        label: 'Company',
        fields: [
          {
            name: 'mainPcafSector',
            label: 'Main PCAF sector',
            description:
              'One of the following sectors the company is mainly operating in: "Communication Services"; "Consumer Discretionary"; "Consumer Staples"; "Energy"; "Financials"; "Health Care"; "Industrials"; "Industry"; "Information Technology"; "Machinery"; "Materials"; "Real estate"; "Sovereign"; "Utilities"',
            options: [
              {
                label: 'Communication Services',
                value: 'CommunicationServices',
              },
              {
                label: 'Consumer Discretionary',
                value: 'ConsumerDiscretionary',
              },
              {
                label: 'Consumer Staples',
                value: 'ConsumerStaples',
              },
              {
                label: 'Energy',
                value: 'Energy',
              },
              {
                label: 'Financials',
                value: 'Financials',
              },
              {
                label: 'Health Care',
                value: 'HealthCare',
              },
              {
                label: 'Industrials',
                value: 'Industrials',
              },
              {
                label: 'Industry',
                value: 'Industry',
              },
              {
                label: 'Information Technology',
                value: 'InformationTechnology',
              },
              {
                label: 'Machinery',
                value: 'Machinery',
              },
              {
                label: 'Materials',
                value: 'Materials',
              },
              {
                label: 'Real Estate',
                value: 'RealEstate',
              },
              {
                label: 'Sovereign',
                value: 'Sovereign',
              },
            ],

            component: 'ExtendedSingleSelectFormField',
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: 'companyExchangeStatus',
            label: 'Company exchange status',
            description: '"Listed" if the company is listed on an exchange - otherwise "Unlisted"',
            options: [
              {
                label: 'Listed',
                value: 'Listed',
              },
              {
                label: 'Unlisted',
                value: 'Unlisted',
              },
            ],

            component: 'RadioButtonsExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
          },
        ],
      },
    ],
  },
  {
    name: 'companyValue',
    label: 'Company Value',
    color: '',
    showIf: (): boolean => true,
    subcategories: [
      {
        name: 'listedCompany',
        label: 'Listed company',
        fields: [
          {
            name: 'marketCapitalizationInEUR',
            label: 'Market capitalization',
            description: 'Market capitalization in EUR calculated as: number of shares * price per share',

            unit: 'EUR',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
          {
            name: 'bookValueOfDebtInEUR',
            label: 'Book value of debt',
            description:
              'Book value of debt in EUR = all debt as listed on the company balance sheet (not to be mixed up with other definitions)',

            unit: 'EUR',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
          {
            name: 'minoritiesInterestInEUR',
            label: 'Minorities interest',
            description:
              'Minorities interest in EUR as potentially listed on the balance sheet for ownerships without control (typically for ownerships of less than 50%)',

            unit: 'EUR',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
        ],
      },
      {
        name: 'unlistedCompany',
        label: 'Unlisted company',
        fields: [
          {
            name: 'totalEquityAndDebtInEUR',
            label: 'Total equity and debt',
            description: 'Sum of total equity and total debt in EUR as listed on the balance sheet',

            unit: 'EUR',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
        ],
      },
    ],
  },
  {
    name: 'environmental',
    label: 'Environmental',
    color: '',
    showIf: (): boolean => true,
    subcategories: [
      {
        name: 'greenhouseGasEmissions',
        label: 'Greenhouse gas emissions',
        fields: [
          {
            name: 'scope1GhgEmissionsInTonnes',
            label: 'Scope 1 GHG emissions',
            description:
              'Scope 1 greenhouse gas emissions in tonnes, namely emissions generated from sources that are controlled by the company that issues the underlying assets (equity share approach preferably used).',

            unit: 'Tonnes',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
          {
            name: 'scope2GhgEmissionsLocationBasedInTonnes',
            label: 'Scope 2 GHG emissions (location-based)',
            description:
              'Scope 2 greenhouse gas emissions in tonnes from the consumption of purchased electricity, steam, or other sources of energy computed using the location-based method (equity share approach preferably used).',

            unit: 'Tonnes',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
          {
            name: 'scope2GhgEmissionsMarketBasedInTonnes',
            label: 'Scope 2 GHG emissions (market-based)',
            description:
              'Scope 2 greenhouse gas emissions in tonnes from the consumption of purchased electricity, steam, or other sources of energy computed using the market-based method (equity share approach preferably used).',

            unit: 'Tonnes',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
          {
            name: 'scope3GhgEmissionsInTonnes',
            label: 'Scope 3 GHG emissions',
            description:
              'Scope 3 greenhouse gas emissions in tonnes, i.e. all indirect upstream and downstream emissions that are not included in scope 2 (equity share approach preferably used).',

            unit: 'Tonnes',
            component: 'BigDecimalExtendedDataPointFormField',
            required: false,
            showIf: (): boolean => true,
            validation: 'min:0',
          },
        ],
      },
    ],
  },
] as Category[];
