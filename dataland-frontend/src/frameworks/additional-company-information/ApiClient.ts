// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type AxiosPromise, type AxiosRequestConfig, type AxiosInstance } from 'axios';
import { type CompanyAssociatedData } from '@/api-models/CompanyAssociatedData';
import {
  AdditionalCompanyInformationDataControllerApi,
  type AdditionalCompanyInformationData,
  type Configuration,
  type DataMetaInformation,
  type ExportFileType,
} from '@clients/backend';
import { type PublicFrameworkDataApi } from '@/utils/api/UnifiedFrameworkDataApi';
import { type DataAndMetaInformation } from '@/api-models/DataAndMetaInformation';

export class AdditionalCompanyInformationApiClient implements PublicFrameworkDataApi<AdditionalCompanyInformationData> {
  private readonly openApiDataController: AdditionalCompanyInformationDataControllerApi;

  constructor(configuration: Configuration | undefined, axiosInstance: AxiosInstance | undefined) {
    this.openApiDataController = new AdditionalCompanyInformationDataControllerApi(
      configuration,
      undefined,
      axiosInstance
    );
  }

  getAllCompanyData(
    companyId: string,
    showOnlyActive?: boolean,
    reportingPeriod?: string,
    options?: AxiosRequestConfig
  ): AxiosPromise<DataAndMetaInformation<AdditionalCompanyInformationData>[]> {
    return this.openApiDataController.getAllCompanyAdditionalCompanyInformationData(
      companyId,
      showOnlyActive,
      reportingPeriod,
      options
    );
  }

  getFrameworkData(
    dataId: string,
    options?: AxiosRequestConfig
  ): AxiosPromise<CompanyAssociatedData<AdditionalCompanyInformationData>> {
    return this.openApiDataController.getCompanyAssociatedAdditionalCompanyInformationData(dataId, options);
  }

  postFrameworkData(
    data: CompanyAssociatedData<AdditionalCompanyInformationData>,
    bypassQa?: boolean,
    options?: AxiosRequestConfig
  ): AxiosPromise<DataMetaInformation> {
    return this.openApiDataController.postCompanyAssociatedAdditionalCompanyInformationData(data, bypassQa, options);
  }

  exportCompanyAssociatedDataByDimensions(
    reportingPeriods: string[],
    companyIds: string[],
    fileFormat: ExportFileType,
    keepValueFieldsOnly?: boolean,
    options?: AxiosRequestConfig
  ): //eslint-disable-next-line @typescript-eslint/no-explicit-any
  AxiosPromise<any> {
    return this.openApiDataController.exportCompanyAssociatedAdditionalCompanyInformationDataByDimensions(
      reportingPeriods,
      companyIds,
      fileFormat,
      keepValueFieldsOnly,
      options
    );
  }

  getCompanyAssociatedDataByDimensions(
    reportingPeriod: string,
    companyId: string,
    options?: AxiosRequestConfig
  ): AxiosPromise<CompanyAssociatedData<AdditionalCompanyInformationData>> {
    return this.openApiDataController.getCompanyAssociatedAdditionalCompanyInformationDataByDimensions(
      reportingPeriod,
      companyId,
      options
    );
  }
}
