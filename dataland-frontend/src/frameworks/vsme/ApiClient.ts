// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type AxiosPromise, type AxiosRequestConfig, type AxiosInstance } from 'axios';
import { type CompanyAssociatedData } from '@/api-models/CompanyAssociatedData';
import { type Configuration, type DataMetaInformation, type VsmeData, VsmeDataControllerApi } from '@clients/backend';
import { type PrivateFrameworkDataApi } from '@/utils/api/UnifiedFrameworkDataApi';
import { type DataAndMetaInformation } from '@/api-models/DataAndMetaInformation';

export class VsmeApiClient implements PrivateFrameworkDataApi<VsmeData> {
  private readonly openApiDataController: VsmeDataControllerApi;

  constructor(configuration: Configuration | undefined, axiosInstance: AxiosInstance | undefined) {
    this.openApiDataController = new VsmeDataControllerApi(configuration, undefined, axiosInstance);
  }

  getAllCompanyData(
    companyId: string,
    showOnlyActive?: boolean,
    reportingPeriod?: string,
    options?: AxiosRequestConfig
  ): AxiosPromise<DataAndMetaInformation<VsmeData>[]> {
    return this.openApiDataController.getFrameworkDatasetsForCompany(
      companyId,
      showOnlyActive,
      reportingPeriod,
      options
    );
  }

  getFrameworkData(dataId: string, options?: AxiosRequestConfig): AxiosPromise<CompanyAssociatedData<VsmeData>> {
    return this.openApiDataController.getCompanyAssociatedVsmeData(dataId, options);
  }

  getPrivateDocument(dataId: string, hash: string, options?: AxiosRequestConfig): AxiosPromise<File> {
    return this.openApiDataController.getPrivateDocument(dataId, hash, options);
  }

  postFrameworkData(
    companyAssociatedVsmeData: CompanyAssociatedData<VsmeData>,
    documents: Array<File>,
    options?: AxiosRequestConfig
  ): AxiosPromise<DataMetaInformation> {
    return this.openApiDataController.postVsmeJsonAndDocuments(companyAssociatedVsmeData, documents, options);
  }
}
