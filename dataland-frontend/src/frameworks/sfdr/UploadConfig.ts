// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type Category } from "@/utils/GenericFrameworkTypes";

export const sfdrDataModel = [
  {
    name: "general",
    label: "General",
    color: "orange",
    showIf: (): boolean => true,
    subcategories: [
      {
        name: "general",
        label: "General",
        fields: [
          {
            name: "dataDate",
            label: "Data Date",
            description: "The year for which the data is reported",

            component: "DateFormField",
            required: true,
            showIf: (): boolean => true,
            validation: "required",
          },
          {
            name: "fiscalYearDeviation",
            label: "Fiscal Year Deviation",
            description: "Does the fiscal year deviate from the calendar year?",
            options: [
              {
                label: "Deviation",
                value: "Deviation",
              },
              {
                label: "No Deviation",
                value: "NoDeviation",
              },
            ],

            component: "RadioButtonsFormField",
            required: true,
            showIf: (): boolean => true,
            validation: "required",
          },
          {
            name: "fiscalYearEnd",
            label: "Fiscal Year End",
            description: "The date the fiscal year ends",

            component: "DateFormField",
            required: true,
            showIf: (): boolean => true,
            validation: "required",
          },
          {
            name: "referencedReports",
            label: "Referenced Reports",
            description: "Please upload all relevant reports for this dataset in the PDF format.",

            component: "UploadReports",
            required: false,
            showIf: (): boolean => true,
          },
        ],
      },
    ],
  },
  {
    name: "environmental",
    label: "Environmental",
    color: "green",
    showIf: (): boolean => true,
    subcategories: [
      {
        name: "greenhouseGasEmissions",
        label: "Greenhouse gas emissions ",
        fields: [
          {
            name: "scope1GhgEmissionsInTonnes",
            label: "Scope 1 GHG emissions",
            description:
              "Scope 1 carbon emissions, namely emissions generated from sources that are controlled by the company that issues the underlying assets",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope2GhgEmissionsInTonnes",
            label: "Scope 2 GHG emissions",
            description:
              "Scope 2 carbon emissions, namely emissions from the consumption of purchased electricity, steam, or other sources of energy generated upstream from the company that issues the underlying assets",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope2GhgEmissionsLocationBasedInTonnes",
            label: "Scope 2 GHG emissions (location-based)",
            description: "Scope 2 carbon emissions computed using the location-based method",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope2GhgEmissionsMarketBasedInTonnes",
            label: "Scope 2 GHG emissions (market-based)",
            description: "Scope 2 carbon emissions computed using the market-based method",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope1And2GhgEmissionsInTonnes",
            label: "Scope 1 and 2 GHG emissions",
            description: "Sum of scope 1 and 2 carbon emissions",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope1And2GhgEmissionsLocationBasedInTonnes",
            label: "Scope 1 and 2 GHG emissions (location-based)",
            description:
              "Sum of scope 1 and 2 carbon emissions, using the location-based method to compute scope 2 carbon emissions",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope1And2GhgEmissionsMarketBasedInTonnes",
            label: "Scope 1 and 2 GHG emissions (market-based)",
            description:
              "Sum of scope 1 and 2 carbon emissions, using the market-based method to compute scope 2 carbon emissions",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope3GhgEmissionsInTonnes",
            label: "Scope 3 GHG emissions",
            description:
              "Scope 3 carbon emissions in tonnes, i.e. all indirect upstream and downstream emissions that are not included in scope 2",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope1And2And3GhgEmissionsInTonnes",
            label: "Scope 1 and 2 and 3 GHG emissions",
            description: "Sum of scope 1, 2 and 3 carbon emissions",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope1And2And3GhgEmissionsLocationBasedInTonnes",
            label: "Scope 1 and 2 and 3 GHG emissions (location-based)",
            description:
              "Sum of scope 1, 2 and 3 carbon emissions, using the location-based method to compute scope 2 carbon emissions",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "scope1And2And3GhgEmissionsMarketBasedInTonnes",
            label: "Scope 1 and 2 and 3 GHG emissions (market-based)",
            description:
              "Sum of scope 1, 2 and 3 carbon emissions, using the market-based method to compute scope 2 carbon emissions",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "enterpriseValue",
            label: "Enterprise Value",
            description:
              "The sum, at fiscal year-end, of the market capitalisation of ordinary shares, the market capitalisation of preferred shares, and the book value of total debt and non-controlling interests, without the deduction of cash or cash equivalents. See also Regulation, Annex I top (4).",

            component: "CurrencyDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "totalRevenue",
            label: "Total Revenue",
            description:
              "Total revenue for the financial year. i.e., income arising in the course of an entity's ordinary activities, the amounts derived from the sale of products and the provision of services after deducting sales rebates and value added tax and other taxes directly linked to turnover. Overall turnover is equivalent to a firm's total revenues over some period of time (millions)",

            component: "CurrencyDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "carbonFootprintInTonnesPerMillionEURRevenue",
            label: "Carbon footprint",
            description:
              "Tonnes of GHG emissions / million of the enterprise value (in the same currency as the enterprise value)",

            unit: "Tonnes / €M Revenue",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "ghgIntensityInTonnesPerMillionEURRevenue",
            label: "GHG intensity",
            description: "Tonnes of GHG emissions / million of the revenue (in the same currency as the total revenue)",

            unit: "Tonnes / €M Revenue",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
        ],
      },
      {
        name: "energyPerformance",
        label: "Energy performance",
        fields: [
          {
            name: "renewableEnergyProductionInGWh",
            label: "Renewable Energy Production",
            description:
              "Total value of renewable energy produced, meaning energy from non-fossil sources, namely wind, solar (solar thermal and solar photovoltaic) and geothermal energy, ambient energy, tide, wave and other ocean energy, hydropower, biomass, landfill gas, sewage treatment plant gas, and biogas. See also Regulation, Annex I, top (6).",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "renewableEnergyConsumptionInGWh",
            label: "Renewable Energy Consumption",
            description:
              "Total value of renewable energy consumed, meaning energy from non-fossil sources, namely wind, solar (solar thermal and solar photovoltaic) and geothermal energy, ambient energy, tide, wave and other ocean energy, hydropower, biomass, landfill gas, sewage treatment plant gas, and biogas. See also Regulation, Annex I, top (6).",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyProductionInGWh",
            label: "Non-Renewable Energy Production",
            description:
              "Total value of non-renewable energy produced, meaning energy from sources other than non-fossil sources. See also Regulation, Annex I, top (7).",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "relativeNonRenewableEnergyProductionInPercent",
            label: "Relative Non-Renewable Energy Production",
            description:
              "Share of non-renewable energy production from total energy production (i.e. renewable plus non-renewable).",

            unit: "Percent",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionInGWh",
            label: "Non-Renewable Energy Consumption",
            description:
              "Total value of non-renewable energy consumed, meaning energy from sources other than non-fossil sources.",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "relativeNonRenewableEnergyConsumptionInPercent",
            label: "Relative Non-Renewable Energy Consumption",
            description:
              "Share of non-renewal energy consumption from total energy consumption (i.e. renewable plus non-renewable).",

            unit: "Percent",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "applicableHighImpactClimateSectors",
            label: "Applicable High Impact Climate Sectors",
            description: "Please select any sector(s) applicable activities (NACE Codes A-H, L)",

            component: "HighImpactClimateSectorsFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "totalHighImpactClimateSectorEnergyConsumptionInGWh",
            label: "Total High Impact Climate Sector Energy Consumption",
            description:
              "High impact climate sectors’ means the sectors listed in Sections A to H and Section L of Annex I to Regulation (EC) No 1893/2006 of the European Parliament and of the Council (Regulation (EC) No 1893/2006 of the European Parliament and of the Council of 20 December 2006 establishing the statistical classification of economic activities NACE Revision 2 and amending Council Regulation (EEC) No 3037/90 as well as certain EC Regulations on specific statistical domains (OJ L 393, 30.12.2006, p. 1)).",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionFossilFuelsInGWh",
            label: "Non-Renewable Energy Consumption Fossil Fuels",
            description:
              "Energy consumption from fossil fuels (sum of crude oil, natural gas, nuclear energy, lignite and coal) (non-renewable energy source)",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionCrudeOilInGWh",
            label: "Non-Renewable Energy Consumption Crude Oil",
            description: "Energy consumption from crude oil (non-renewable energy source)",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionNaturalGasInGWh",
            label: "Non-Renewable Energy Consumption Natural Gas",
            description: "Energy consumption from natural gas (non-renewable energy source)",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionLigniteInGWh",
            label: "Non-Renewable Energy Consumption Lignite",
            description: "Energy consumption from lignite (non-renewable energy source)",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionCoalInGWh",
            label: "Non-Renewable Energy Consumption Coal",
            description: "Energy consumption from coal (non-renewable energy source)",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionNuclearEnergyInGWh",
            label: "Non-Renewable Energy Consumption Nuclear Energy",
            description: "Energy consumption from nuclear energy (Uranium) (non-renewable energy source)",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRenewableEnergyConsumptionOtherInGWh",
            label: "Non-Renewable Energy Consumption Other",
            description: "Energy consumption from any other available (used) non-renewable source of energy",

            unit: "GWh",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
        ],
      },
      {
        name: "biodiversity",
        label: "Biodiversity",
        fields: [],
      },
      {
        name: "water",
        label: "Water",
        fields: [
          {
            name: "emissionsToWaterInTonnes",
            label: "Emissions To Water",
            description:
              "Emissions to water (direct nitrates, direct phosphate emissions, direct pesticides) to water (tonnes)",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "waterConsumptionInCubicMeters",
            label: "Water Consumption",
            description: "Amount of water consumed by the company",

            unit: "Cubic Meters",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "waterReusedInCubicMeters",
            label: "Water Reused",
            description:
              "Amount of water recycled and reused by the company. Linked to Regulation, Annex I, Table 2, metric 6.2.",

            unit: "Cubic Meters",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "relativeWaterUsageInCubicMetersPerMillionEURRevenue",
            label: "Relative Water Usage",
            description: "Average amount in cubic meters of fresh water used per million EUR revenue",

            unit: "Cubic Meters / €M Revenue",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
        ],
      },
      {
        name: "waste",
        label: "Waste",
        fields: [
          {
            name: "hazardousAndRadioactiveWasteInTonnes",
            label: "Hazardous and Radioactive Waste",
            description:
              "Tonnes of hazardous waste and radioactive waste generated, which are Explosives, Oxidizing substances, Highly flammable, Flammable, Harmful, Toxic, Carcinogenic, Corrosive, Infectious, Toxic for reproduction, Mutagenic, waste which releases toxic or very toxic gases in contact with water, air or an acid, Sensitizing, Ecotoxic, waste capable by any means after disposal of yielding substance which possesses any of the characteristics listed above (tonnes)",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "nonRecycledWasteInTonnes",
            label: "Non-Recycled Waste",
            description:
              'Value of non-recycled waste generated. "Non-recycled waste" means any waste not recycled within the meaning of ‘recycling’ in Article 3(17) of Directive 2008/98/EC.',

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
        ],
      },
      {
        name: "emissions",
        label: "Emissions",
        fields: [
          {
            name: "emissionsOfInorganicPollutantsInTonnes",
            label: "Emissions of Inorganic Pollutants",
            description:
              "Inorganic pollutants such as those arising due to radiant energy and noise, heat, or light, including arsenic, cadmium, lead, mercury, chromium, aluminium, nitrates, nitrites, and fluorides or contaminants of water such as arsenic, fluoride, iron, nitrate, heavy metals, etc.",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "emissionsOfAirPollutantsInTonnes",
            label: "Emissions of Air Pollutants",
            description:
              "Air pollutants (Direct Sulphur dioxides (Sox/SO2) emissions, direct nitrogen oxides (NOx/NO2) emissions, direct ammonia (NH3) emissions, direct particulate matter (PM2.5) emissions, direct non-methane volatile organic compounds (NMVOC) emissions, direct total heavy metals (HM) emissions (encompassing cadmium, mercury and lead)",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "emissionsOfOzoneDepletionSubstancesInTonnes",
            label: "Emissions of Ozone Depletion Substances",
            description:
              "Tonnes of ozone depletion substances, chemicals that destroy the earth's protective ozone layer. They include: chlorofluorocarbons (CFCs), halons, carbon tetrachloride (CCl4), methyl chloroform (CH3CCl3), hydrobromofluorocarbons (HBFCs), hydrochlorofluorocarbons (HCFCs), methyl bromide (CH3Br), bromochloromethane (CH2BrCl)",

            unit: "Tonnes",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
        ],
      },
    ],
  },
  {
    name: "social",
    label: "Social",
    color: "yellow",
    showIf: (): boolean => true,
    subcategories: [
      {
        name: "socialAndEmployeeMatters",
        label: "Social and employee matters",
        fields: [
          {
            name: "averageGrossHourlyEarningsMaleEmployees",
            label: "Average Gross Hourly Earnings Male Employees",
            description: "Average gross hourly earnings of male employees",

            component: "CurrencyDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "averageGrossHourlyEarningsFemaleEmployees",
            label: "Average Gross Hourly Earnings Female Employees",
            description: "Average gross hourly earnings of female employees",

            component: "CurrencyDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "unadjustedGenderPayGapInPercent",
            label: "Unadjusted gender pay gap",
            description: "Average unadjusted gender pay gap (female to male ratio, only considering gender)",

            unit: "Percent",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
          {
            name: "femaleBoardMembers",
            label: "Female Board Members",
            description:
              "Number of females on the board, i.e. means the administrative, management or supervisory body of a company",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "integer|min:0",
          },
          {
            name: "maleBoardMembers",
            label: "Male Board Members",
            description:
              "Number of males on the board, i.e. means the administrative, management or supervisory body of a company.",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "integer|min:0",
          },
          {
            name: "boardGenderDiversityInPercent",
            label: "Board gender diversity",
            description: "Percentage of female board members among all board members",

            unit: "Percent",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "between:0,100",
          },
          {
            name: "rateOfAccidentsInPercent",
            label: "Rate Of Accidents",
            description:
              "Rate of recordable work-related injuries as defined in GRI, i.e. (Number of recordable work-related injuries) /  (number of hours worked ) x 200,000",

            unit: "Percent",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "between:0,100",
          },
          {
            name: "workdaysLostInDays",
            label: "Workdays Lost",
            description: "Number of workdays lost to injuries, accidents, fatalities or illness",

            unit: "Days",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "reportedIncidentsOfDiscrimination",
            label: "Reported Incidents Of Discrimination",
            description: "Number of reported discrimination-related incidents",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "integer|min:0",
          },
          {
            name: "sanctionedIncidentsOfDiscrimination",
            label: "Sanctioned Incidents Of Discrimination",
            description:
              "Number of discrimination related incidents reported that lead to any kind of penalty and/or fine",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "integer|min:0",
          },
          {
            name: "ceoToEmployeePayGapRatio",
            label: "CEO to Employee Pay Gap Ratio",
            description:
              "Annual total compensation for the highest compensated individual divided by the median annual total compensation for all employees (excluding the highest-compensated individual).",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
          {
            name: "excessiveCeoPayRatioInPercent",
            label: "Excessive CEO pay ratio",
            description:
              "Average ratio of the annual total compensation for the highest compensated individual to the median annual total compensation for all employees (excluding the highest-compensated individual)",

            unit: "Percent",
            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "min:0",
          },
        ],
      },
      {
        name: "greenSecurities",
        label: "Green securities",
        fields: [],
      },
      {
        name: "humanRights",
        label: "Human rights",
        fields: [
          {
            name: "numberOfReportedIncidentsOfHumanRightsViolations",
            label: "Number Of Reported Incidents Of Human Rights Violations",
            description: "Number of cases of severe human rights issues and incidents connected to the company",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "integer|min:0",
          },
        ],
      },
      {
        name: "antiCorruptionAndAntiBribery",
        label: "Anti-corruption and anti-bribery",
        fields: [
          {
            name: "casesOfInsufficientActionAgainstBriberyAndCorruption",
            label: "Cases of Insufficient Action against Bribery and Corruption",
            description:
              "Identified insufficiencies in actions taken to address breaches in procedures and standards of anti-corruption and anti-bribery",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "integer|min:0",
          },
          {
            name: "reportedConvictionsOfBriberyAndCorruption",
            label: "Reported Convictions Of Bribery and Corruption",
            description: "Number of reported convictions for violations of anti-corruption and anti-bribery laws",

            component: "BigDecimalExtendedDataPointFormField",
            required: false,
            showIf: (): boolean => true,
            validation: "integer|min:0",
          },
          {
            name: "totalAmountOfReportedFinesOfBriberyAndCorruption",
            label: "Total Amount Of Reported Fines Of Bribery and Corruption",
            description: "Amount of fines for violations of anti-corruption and anti-bribery laws",

            component: "CurrencyDataPointFormField",
            required: false,
            showIf: (): boolean => true,
          },
        ],
      },
    ],
  },
] as Category[];
