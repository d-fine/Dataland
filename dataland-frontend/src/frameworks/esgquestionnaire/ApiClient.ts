// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type AxiosPromise, type AxiosRequestConfig, type AxiosInstance } from "axios";
import { type CompanyAssociatedData } from "@/api-models/CompanyAssociatedData";
import {
  type Configuration,
  type DataMetaInformation,
  type EsgquestionnaireData,
  EsgquestionnaireDataControllerApi,
} from "@clients/backend";
import { type FrameworkDataApi } from "@/utils/api/UnifiedFrameworkDataApi";
import { type DataAndMetaInformation } from "@/api-models/DataAndMetaInformation";

export class EsgquestionnaireApiClient implements FrameworkDataApi<EsgquestionnaireData> {
  private readonly openApiDataController: EsgquestionnaireDataControllerApi;

  constructor(configuration: Configuration | undefined, axiosInstance: AxiosInstance | undefined) {
    this.openApiDataController = new EsgquestionnaireDataControllerApi(configuration, undefined, axiosInstance);
  }

  getAllCompanyData(
    companyId: string,
    showOnlyActive?: boolean,
    reportingPeriod?: string,
    options?: AxiosRequestConfig,
  ): AxiosPromise<DataAndMetaInformation<EsgquestionnaireData>[]> {
    return this.openApiDataController.getAllCompanyEsgquestionnaireData(
      companyId,
      showOnlyActive,
      reportingPeriod,
      options,
    );
  }

  getFrameworkData(
    dataId: string,
    options?: AxiosRequestConfig,
  ): AxiosPromise<CompanyAssociatedData<EsgquestionnaireData>> {
    return this.openApiDataController.getCompanyAssociatedEsgquestionnaireData(dataId, options);
  }

  postFrameworkData(
    data: CompanyAssociatedData<EsgquestionnaireData>,
    bypassQa?: boolean,
    options?: AxiosRequestConfig,
  ): AxiosPromise<DataMetaInformation> {
    return this.openApiDataController.postCompanyAssociatedEsgquestionnaireData(data, bypassQa, options);
  }
}
