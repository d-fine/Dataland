// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { type SmeData } from "@clients/backend";
import { type MLDTConfig } from "@/components/resources/dataTable/MultiLayerDataTableConfiguration";
import { type AvailableMLDTDisplayObjectTypes } from "@/components/resources/dataTable/MultiLayerDataTableCellDisplayer";
import { formatListOfStringsForDatatable } from "@/components/resources/dataTable/conversion/MultiSelectValueGetterFactory";
import { getOriginalNameFromTechnicalName } from "@/components/resources/dataTable/conversion/Utils";
import { formatNumberForDatatable } from "@/components/resources/dataTable/conversion/NumberValueGetterFactory";
import { formatYesNoValueForDatatable } from "@/components/resources/dataTable/conversion/YesNoValueGetterFactory";
import { formatStringForDatatable } from "@/components/resources/dataTable/conversion/PlainStringValueGetterFactory";
import { formatNaceCodesForDatatable } from "@/components/resources/dataTable/conversion/NaceCodeValueGetterFactory";
export const smeViewConfiguration: MLDTConfig<SmeData> = [
  {
    type: "section",
    label: "General",
    expandOnPageLoad: false,
    shouldDisplay: (): boolean => true,
    children: [
      {
        type: "section",
        label: "Basic Information",
        expandOnPageLoad: false,
        shouldDisplay: (): boolean => true,
        children: [
          {
            type: "cell",
            label: "Sectors",
            explanation:
              "Please select the industry sector in which your company was mainly active in the relevant fiscal year.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNaceCodesForDatatable(dataset.general?.basicInformation?.sectors, "Sectors"),
          },
          {
            type: "cell",
            label: "Number of Employees",
            explanation: "Please provide the number of workforce employed by your company in the relevant fiscal year.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNumberForDatatable(dataset.general?.basicInformation?.numberOfEmployees, ""),
          },
          {
            type: "cell",
            label: "Fiscal Year Start",
            explanation: "Please provide the starting date of the company's fiscal year to which you refer.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatStringForDatatable(dataset.general?.basicInformation?.fiscalYearStart),
          },
        ],
      },
      {
        type: "section",
        label: "Financial Information",
        expandOnPageLoad: false,
        shouldDisplay: (): boolean => true,
        children: [
          {
            type: "cell",
            label: "Revenue in EUR",
            explanation: "Please provide your company's revenue in the relevant year in Euro.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNumberForDatatable(dataset.general?.financialInformation?.revenueInEur, "EUR"),
          },
          {
            type: "cell",
            label: "Operating Cost in EUR",
            explanation: "Please provide your company's operating cost in the relevant fiscal year in Euro.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNumberForDatatable(dataset.general?.financialInformation?.operatingCostInEur, "EUR"),
          },
          {
            type: "cell",
            label: "Capital assets in EUR",
            explanation:
              "Please provide the value of your company's capital assets in the relevant fiscal year in Euro.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNumberForDatatable(dataset.general?.financialInformation?.capitalAssetsInEur, "EUR"),
          },
        ],
      },
    ],
  },
  {
    type: "section",
    label: "Power",
    expandOnPageLoad: false,
    shouldDisplay: (): boolean => true,
    children: [
      {
        type: "section",
        label: "Investments",
        expandOnPageLoad: false,
        shouldDisplay: (): boolean => true,
        children: [
          {
            type: "cell",
            label: "Investments in enhancing energy efficiency",
            explanation:
              "Please provide the fraction of your company's total investments that was primarily spent to enhance energy efficiency in the last fiscal year.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes => {
              const mappings = {
                LessThan1Percent: "less than 1 percent",
                Between1And5Percent: "between 1 and 5 percent",
                Between5And10Percent: "between 5 and 10 percent",
                Between10And15Percent: "between 10 and 15 percent",
                Between15And20Percent: "between 15 and 20 percent",
                Between20And25Percent: "between 20 and 25 percent",
                Over25Percent: "over 25 percent",
              };
              return formatStringForDatatable(
                dataset.power?.investments?.investmentsInEnhancingEnergyEfficiency
                  ? getOriginalNameFromTechnicalName(
                      dataset.power?.investments?.investmentsInEnhancingEnergyEfficiency,
                      mappings,
                    )
                  : "",
              );
            },
          },
        ],
      },
      {
        type: "section",
        label: "Consumption",
        expandOnPageLoad: false,
        shouldDisplay: (): boolean => true,
        children: [
          {
            type: "cell",
            label: "Power consumption in MWh",
            explanation: "Please provide your company's power consumption in the relevant fiscal year in MWh.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNumberForDatatable(dataset.power?.consumption?.powerConsumptionInMwh, "MWh"),
          },
          {
            type: "cell",
            label: "power from renewable sources",
            explanation:
              "Please provide information whether your company has been primarily using power from renewable sources in the relevant fiscal year.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatYesNoValueForDatatable(dataset.power?.consumption?.powerFromRenewableSources),
          },
          {
            type: "cell",
            label: "Energy consumption heating and hot water in MWh",
            explanation:
              "Please provide your company's power consumption for heating and hot water generation in the relevant fiscal year in MWh.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNumberForDatatable(dataset.power?.consumption?.energyConsumptionHeatingAndHotWaterInMwh, "MWh"),
          },
          {
            type: "cell",
            label: "Primary energy source for heating and hot water",
            explanation:
              "Please provide the energy source primarily used by your company for heating/hot water generation in the relevant fiscal year.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes => {
              const mappings = {
                Oil: "Oil",
                Gas: "Gas",
                Electric: "Electric",
                DistrictHeating: "District Heating",
              };
              return formatStringForDatatable(
                dataset.power?.consumption?.primaryEnergySourceForHeatingAndHotWater
                  ? getOriginalNameFromTechnicalName(
                      dataset.power?.consumption?.primaryEnergySourceForHeatingAndHotWater,
                      mappings,
                    )
                  : "",
              );
            },
          },
          {
            type: "cell",
            label: "Energy consumption covered by own renewable power generation",
            explanation:
              "Please provide the portion of consumed power generated by your own renewable sources relative to your company's total power consumption in the relevant fiscal year.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes => {
              const mappings = {
                LessThan25Percent: "less than 25 percent",
                Between25And50Percent: "between 25 and 50 percent",
                Between50And75Percent: "between 50 and 75 percent",
                Over75Percent: "over 75 percent",
              };
              return formatStringForDatatable(
                dataset.power?.consumption?.energyConsumptionCoveredByOwnRenewablePowerGeneration
                  ? getOriginalNameFromTechnicalName(
                      dataset.power?.consumption?.energyConsumptionCoveredByOwnRenewablePowerGeneration,
                      mappings,
                    )
                  : "",
              );
            },
          },
        ],
      },
    ],
  },
  {
    type: "section",
    label: "Insurances",
    expandOnPageLoad: false,
    shouldDisplay: (): boolean => true,
    children: [
      {
        type: "section",
        label: "Natural Hazards",
        expandOnPageLoad: false,
        shouldDisplay: (): boolean => true,
        children: [
          {
            type: "cell",
            label: "Insurance against natural hazards",
            explanation:
              "Please provide information whether your company has insurance against natural hazards at its branch/production site generating most revenue, or its headquarters.",
            shouldDisplay: (): boolean => true,
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatYesNoValueForDatatable(dataset.insurances?.naturalHazards?.insuranceAgainstNaturalHazards),
          },
          {
            type: "cell",
            label: "Amount covered by insurance against natural hazards in EUR",
            explanation:
              "Please provide the amount covered by the insurance in EUR. In case your company has different policies for different natural hazards please provide the average amount covered.",
            shouldDisplay: (dataset: SmeData): boolean =>
              dataset.insurances?.naturalHazards?.insuranceAgainstNaturalHazards == "Yes",
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes =>
              formatNumberForDatatable(
                dataset.insurances?.naturalHazards?.amountCoveredByInsuranceAgainstNaturalHazardsInEur,
                "EUR",
              ),
          },
          {
            type: "cell",
            label: "Natural Hazards covered",
            explanation: "Please identify all natural hazards covered by your insurance.",
            shouldDisplay: (dataset: SmeData): boolean =>
              dataset.insurances?.naturalHazards?.insuranceAgainstNaturalHazards == "Yes",
            valueGetter: (dataset: SmeData): AvailableMLDTDisplayObjectTypes => {
              const mappings = {
                Hail: "Hail",
                Wind: "Wind",
                Flooding: "Flooding",
                EarthQuake: "Earth Quake",
                Avalanche: "Avalanche",
                Snow: "Snow",
              };
              return formatListOfStringsForDatatable(
                dataset.insurances?.naturalHazards?.naturalHazardsCovered?.map((it) =>
                  getOriginalNameFromTechnicalName(it, mappings),
                ),
                "Natural Hazards covered",
              );
            },
          },
        ],
      },
    ],
  },
];
