{"version":3,"file":"ViewTeaserCompanyData-9e60b4a8.js","sources":["../../src/components/pages/ViewTeaserCompanyData.vue"],"sourcesContent":["<template>\n  <div v-if=\"isMetaInfoFetched\" class=\"mt-8\">\n    <h3>COMPANY DATA SAMPLE</h3>\n    <h4>Try Dataland with other people to access all the data.</h4>\n    <div class=\"col-4 col-offset-4\">\n      <JoinDatalandButton />\n    </div>\n    <ViewFrameworkData\n      :view-in-preview-mode=\"true\"\n      :company-id=\"companyId\"\n      :data-type=\"dataType\"\n      :data-id=\"dataId\"\n      :reporting-period=\"reportingPeriod\"\n    />\n  </div>\n  <div v-if=\"!isAtLeastOneTeaserCompanyExisting || !isAtLeastOneDatasetExistingForTeaserCompany\">\n    <BackButton />\n    <h3>No sample data published</h3>\n    <h4>\n      Currently there is no dataset published for preview by the Dataland administrators. Please come back later to see\n      a preview dataset.\n    </h4>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject } from \"vue\";\nimport type Keycloak from \"keycloak-js\";\nimport ViewFrameworkData from \"@/components/pages/ViewFrameworkData.vue\";\nimport { ApiClientProvider } from \"@/services/ApiClients\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\nimport JoinDatalandButton from \"@/components/general/JoinDatalandButton.vue\";\nimport BackButton from \"@/components/general/BackButton.vue\";\n\nexport default defineComponent({\n  name: \"ViewTeaserCompanyData\",\n  components: {\n    ViewFrameworkData,\n    JoinDatalandButton,\n    BackButton,\n  },\n  setup() {\n    return {\n      getKeycloakPromise: inject<() => Promise<Keycloak>>(\"getKeycloakPromise\"),\n    };\n  },\n  data: () => ({\n    companyId: \"\",\n    dataId: \"\",\n    dataType: \"\",\n    reportingPeriod: \"\",\n    isMetaInfoFetched: false,\n    isAtLeastOneTeaserCompanyExisting: true,\n    isAtLeastOneDatasetExistingForTeaserCompany: true,\n  }),\n  created() {\n    void this.queryCompany();\n  },\n  methods: {\n    /**\n     * Uses the Dataland API to retrieve all teaser companies, picks the first company and gets the data meta info of\n     * the first dataset for that company to display it on the sample page.\n     */\n    async queryCompany() {\n      try {\n        const companyDataControllerApi = await new ApiClientProvider(\n          assertDefined(this.getKeycloakPromise)(),\n        ).getCompanyDataControllerApi();\n        const companyResponse = await companyDataControllerApi.getTeaserCompanies();\n        if (companyResponse.data.length > 0) {\n          this.companyId = companyResponse.data[0];\n          const metaDataControllerApi = await new ApiClientProvider(\n            assertDefined(this.getKeycloakPromise)(),\n          ).getMetaDataControllerApi();\n          const listOfMetaDataInfo = (await metaDataControllerApi.getListOfDataMetaInfo(this.companyId)).data;\n          if (listOfMetaDataInfo.length > 0) {\n            const dataMetaInfoForDisplay = listOfMetaDataInfo[0];\n            this.dataId = dataMetaInfoForDisplay.dataId;\n            this.dataType = dataMetaInfoForDisplay.dataType;\n            this.reportingPeriod = dataMetaInfoForDisplay.reportingPeriod;\n            this.isMetaInfoFetched = true;\n          } else {\n            this.isAtLeastOneDatasetExistingForTeaserCompany = false;\n          }\n        } else {\n          this.isAtLeastOneTeaserCompanyExisting = false;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n});\n</script>\n"],"names":["_sfc_main","defineComponent","ViewFrameworkData","JoinDatalandButton","BackButton","inject","companyResponse","ApiClientProvider","assertDefined","listOfMetaDataInfo","dataMetaInfoForDisplay","error","_hoisted_1","_createElementVNode","_hoisted_4","_openBlock","_createElementBlock","_Fragment","_ctx","_hoisted_2","_hoisted_3","_createVNode","_component_JoinDatalandButton","_component_ViewFrameworkData","_createCommentVNode","_hoisted_5","_component_BackButton","_hoisted_6"],"mappings":"ylCAkCA,MAAAA,EAAeC,EAAgB,CAC7B,KAAM,wBACN,WAAY,CACV,kBAAAC,EACA,mBAAAC,EACA,WAAAC,CACF,EACA,OAAQ,CACC,MAAA,CACL,mBAAoBC,EAAgC,oBAAoB,CAAA,CAE5E,EACA,KAAM,KAAO,CACX,UAAW,GACX,OAAQ,GACR,SAAU,GACV,gBAAiB,GACjB,kBAAmB,GACnB,kCAAmC,GACnC,4CAA6C,EAAA,GAE/C,SAAU,CACH,KAAK,cACZ,EACA,QAAS,CAKP,MAAM,cAAe,CACf,GAAA,CAII,MAAAC,EAAkB,MAHS,MAAM,IAAIC,EACzCC,EAAc,KAAK,kBAAkB,EAAE,GACvC,4BAA4B,GACyB,qBACnD,GAAAF,EAAgB,KAAK,OAAS,EAAG,CAC9B,KAAA,UAAYA,EAAgB,KAAK,CAAC,EAIvC,MAAMG,GAAsB,MAHE,MAAM,IAAIF,EACtCC,EAAc,KAAK,kBAAkB,EAAE,GACvC,yBAAyB,GAC6B,sBAAsB,KAAK,SAAS,GAAG,KAC3F,GAAAC,EAAmB,OAAS,EAAG,CAC3B,MAAAC,EAAyBD,EAAmB,CAAC,EACnD,KAAK,OAASC,EAAuB,OACrC,KAAK,SAAWA,EAAuB,SACvC,KAAK,gBAAkBA,EAAuB,gBAC9C,KAAK,kBAAoB,EAAA,MAEzB,KAAK,4CAA8C,EACrD,MAEA,KAAK,kCAAoC,SAEpCC,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACF,CACF,CACF,CAAC,EA3F+BC,EAAY,CAAA,IAAA,kBAGTC,EAAA,KAAA,KAAA,sBAAA,EAAA,6EAa/BC,EAAA,CAAA,MAAA,2UAhBF,OAAAC,EAAA,EAAAC,EAaMC,EAbN,KAaM,CAAAC,EAZJ,mBAC+DH,EAAA,EAAAC,EAAA,MAAAJ,EAAA,CAC/DO,EAAAC,aAGAC,EAMEC,CAAA,CAAA,CAAA,IAJCC,EAAqB,CACrB,uBAAW,GACX,aAASL,EAAA,UACT,YAAgBA,EAAA,SAAA,UAAAA,EAAA,6GAGrB,GAAAM,EAAA,GAAA,EAAA,EAAA,CAAAN,EACE,mCAAc,CACmBA,EAAA,6CAAAH,IAAAC,EAAA,MAAAS,EAAA,CACjCJ,EAGKK,CAAA,EAAAC"}