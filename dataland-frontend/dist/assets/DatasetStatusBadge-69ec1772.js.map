{"version":3,"file":"DatasetStatusBadge-69ec1772.js","sources":["../../src/components/resources/datasetOverview/DatasetTableInfo.ts","../../src/components/general/DatasetStatusBadge.vue"],"sourcesContent":["import { type DataMetaInformation, type DataTypeEnum, QaStatus, type StoredCompany } from \"@clients/backend\";\nimport type Keycloak from \"keycloak-js\";\nimport { ApiClientProvider } from \"@/services/ApiClients\";\nimport { ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE } from \"@/utils/Constants\";\n\nexport enum DatasetStatus {\n  QaPending,\n  QaApproved,\n  QaRejected,\n  Superseded,\n}\n\nexport class DatasetTableInfo {\n  constructor(\n    readonly companyName: string,\n    readonly dataType: DataTypeEnum,\n    readonly uploadTimeInMs: number,\n    readonly companyId: string,\n    readonly dataId: string,\n    readonly dataReportingPeriod: string,\n    readonly status: DatasetStatus,\n  ) {}\n}\n\n/**\n * Computes the reduced DatasetStatus of the provided dataset\n * @param dataMetaInfo the dataset containing different status indicators (i.e QaStatus, currentlyActive,...)\n * @returns a unified DatasetStatus\n */\nexport function getDatasetStatus(dataMetaInfo: DataMetaInformation): DatasetStatus {\n  if (dataMetaInfo.qaStatus == QaStatus.Accepted) {\n    return dataMetaInfo.currentlyActive ? DatasetStatus.QaApproved : DatasetStatus.Superseded;\n  } else if (dataMetaInfo.qaStatus == QaStatus.Rejected) {\n    return DatasetStatus.QaRejected;\n  } else {\n    return DatasetStatus.QaPending;\n  }\n}\n\n/**\n * Loads the datasets in form of DatasetTableInfos the requesting user is responsible for\n * @param getKeycloakPromise the authorization for backend interaction\n * @param searchString a filter for the company names / alternative names\n * @returns the filtered DatasetTableInfos\n */\nexport async function getMyDatasetTableInfos(\n  getKeycloakPromise: () => Promise<Keycloak>,\n  searchString?: string,\n): Promise<DatasetTableInfo[]> {\n  let userId: string | undefined;\n  const companyDataControllerApi = await new ApiClientProvider(getKeycloakPromise()).getCompanyDataControllerApi();\n  const storedCompaniesUploadedByCurrentUser = (\n    await companyDataControllerApi.getCompanies(\n      searchString,\n      new Set(ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE),\n      undefined,\n      undefined,\n      undefined,\n      true,\n    )\n  ).data;\n  const parsedIdToken = (await getKeycloakPromise()).idTokenParsed;\n  if (parsedIdToken) {\n    userId = parsedIdToken.sub;\n  }\n\n  return storedCompaniesUploadedByCurrentUser.flatMap((company: StoredCompany) =>\n    company.dataRegisteredByDataland\n      .filter(\n        (dataMetaInfo: DataMetaInformation) =>\n          dataMetaInfo.uploaderUserId == userId && ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE.includes(dataMetaInfo.dataType),\n      )\n      .map(\n        (dataMetaInfo: DataMetaInformation) =>\n          new DatasetTableInfo(\n            company.companyInformation.companyName,\n            dataMetaInfo.dataType,\n            dataMetaInfo.uploadTime,\n            company.companyId,\n            dataMetaInfo.dataId,\n            dataMetaInfo.reportingPeriod,\n            getDatasetStatus(dataMetaInfo),\n          ),\n      ),\n  );\n}\n","<template>\n  <div :class=\"`p-badge badge-${assertDefined(statusMap.get(datasetStatus)).color}`\">\n    <span data-test=\"qa-status\">{{ assertDefined(statusMap.get(datasetStatus)).text }}</span>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { DatasetStatus } from \"@/components/resources/datasetOverview/DatasetTableInfo\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\n\nexport default defineComponent({\n  name: \"DatasetStatusBadge\",\n  data() {\n    return {\n      assertDefined,\n      statusMap: new Map<DatasetStatus, BadgeProperties>([\n        [DatasetStatus.QaApproved, BadgeProperties.Approved],\n        [DatasetStatus.QaPending, BadgeProperties.Pending],\n        [DatasetStatus.QaRejected, BadgeProperties.Rejected],\n        [DatasetStatus.Superseded, BadgeProperties.Superseded],\n      ]),\n    };\n  },\n  props: {\n    datasetStatus: {\n      type: Number,\n      required: true,\n    },\n  },\n});\n\nclass BadgeProperties {\n  static readonly Approved = new BadgeProperties(\"green\", \"APPROVED\");\n  static readonly Pending = new BadgeProperties(\"yellow\", \"PENDING\");\n  static readonly Rejected = new BadgeProperties(\"red\", \"REJECTED\");\n  static readonly Superseded = new BadgeProperties(\"brown\", \"SUPERSEDED\");\n\n  readonly color: string;\n  readonly text: string;\n\n  constructor(color: string, text: string) {\n    this.color = color;\n    this.text = text;\n  }\n}\n</script>\n"],"names":["DatasetStatus","DatasetStatus2","DatasetTableInfo","companyName","dataType","uploadTimeInMs","companyId","dataId","dataReportingPeriod","status","getDatasetStatus","dataMetaInfo","QaStatus","getMyDatasetTableInfos","getKeycloakPromise","searchString","userId","storedCompaniesUploadedByCurrentUser","ApiClientProvider","ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE","parsedIdToken","company","_sfc_main","defineComponent","assertDefined","BadgeProperties","_BadgeProperties","color","text","__publicField","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_normalizeClass"],"mappings":"iWAKY,IAAAA,GAAAA,IACVA,EAAAC,EAAA,UAAA,CAAA,EAAA,YACAD,EAAAC,EAAA,WAAA,CAAA,EAAA,aACAD,EAAAC,EAAA,WAAA,CAAA,EAAA,aACAD,EAAAC,EAAA,WAAA,CAAA,EAAA,aAJUD,IAAAA,GAAA,CAAA,CAAA,EAOL,MAAME,CAAiB,CAC5B,YACWC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACT,CAPS,KAAA,YAAAN,EACA,KAAA,SAAAC,EACA,KAAA,eAAAC,EACA,KAAA,UAAAC,EACA,KAAA,OAAAC,EACA,KAAA,oBAAAC,EACA,KAAA,OAAAC,CACR,CACL,CAOO,SAASC,EAAiBC,EAAkD,CAC7E,OAAAA,EAAa,UAAYC,EAAS,SAC7BD,EAAa,gBAAkB,EAA2B,EACxDA,EAAa,UAAYC,EAAS,SACpC,EAEA,CAEX,CAQsB,eAAAC,EACpBC,EACAC,EAC6B,CACzB,IAAAC,EAEE,MAAAC,GACJ,MAF+B,MAAM,IAAIC,EAAkBJ,EAAoB,CAAA,EAAE,+BAElD,aAC7BC,EACA,IAAI,IAAII,CAAkC,EAC1C,OACA,OACA,OACA,EAEF,GAAA,KACIC,GAAiB,MAAMN,EAAA,GAAsB,cACnD,OAAIM,IACFJ,EAASI,EAAc,KAGlBH,EAAqC,QAASI,GACnDA,EAAQ,yBACL,OACEV,GACCA,EAAa,gBAAkBK,GAAUG,EAAmC,SAASR,EAAa,QAAQ,CAAA,EAE7G,IACEA,GACC,IAAIT,EACFmB,EAAQ,mBAAmB,YAC3BV,EAAa,SACbA,EAAa,WACbU,EAAQ,UACRV,EAAa,OACbA,EAAa,gBACbD,EAAiBC,CAAY,CAC/B,CACJ,CAAA,CAEN,CC3EA,MAAAW,EAAeC,EAAgB,CAC7B,KAAM,qBACN,MAAO,CACE,MAAA,CACL,cAAAC,EACA,cAAe,IAAoC,CACjD,CAACxB,EAAc,WAAYyB,EAAgB,QAAQ,EACnD,CAACzB,EAAc,UAAWyB,EAAgB,OAAO,EACjD,CAACzB,EAAc,WAAYyB,EAAgB,QAAQ,EACnD,CAACzB,EAAc,WAAYyB,EAAgB,UAAU,CAAA,CACtD,CAAA,CAEL,EACA,MAAO,CACL,cAAe,CACb,KAAM,OACN,SAAU,EACZ,CACF,CACF,CAAC,EAEKC,EAAN,MAAMA,CAAgB,CASpB,YAAYC,EAAeC,EAAc,CAHhCC,EAAA,cACAA,EAAA,aAGP,KAAK,MAAQF,EACb,KAAK,KAAOC,CACd,CACF,EAZEC,EADIH,EACY,WAAW,IAAIA,EAAgB,QAAS,UAAU,GAClEG,EAFIH,EAEY,UAAU,IAAIA,EAAgB,SAAU,SAAS,GACjEG,EAHIH,EAGY,WAAW,IAAIA,EAAgB,MAAO,UAAU,GAChEG,EAJIH,EAIY,aAAa,IAAIA,EAAgB,QAAS,YAAY,GAJxE,IAAMD,EAANC,oCA9Ba,SAAAI,EAAAC,EAAAC,EAAAC,EAAAC,EAAmBC,EAAcC,EAAA,qBAC1C,MAAyFC,EAAA,iBAAAN,EAAA,cAA1DA,gBAAcA,EAAc,aAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA"}