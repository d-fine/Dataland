{"version":3,"file":"QualityAssurance-8d370bb1.js","sources":["../../build/clients/qaservice/org/dataland/datalandfrontend/openApiClient/qaservice/model/qa-status.ts","../../src/components/general/QaDatasetModal.vue","../../src/components/pages/QualityAssurance.vue"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Dataland QA Service API documentation\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n\n/**\n * \n * @export\n * @enum {string}\n */\n\nexport const QaStatus = {\n    Pending: 'Pending',\n    Accepted: 'Accepted',\n    Rejected: 'Rejected'\n} as const;\n\nexport type QaStatus = typeof QaStatus[keyof typeof QaStatus];\n\n\n\n","<template>\n  <div>\n    <pre id=\"dataset-container\">{{ datasetAsJson }}</pre>\n  </div>\n  <MiddleCenterDiv class=\"col-12\">\n    <div v-if=\"reviewSubmitted\">\n      <SuccessMessage v-if=\"reviewSuccessful\" success-message=\"Review successfully submitted.\" />\n      <FailMessage v-else message=\"The resource you tried to access is not available. Please close the data pop-up.\" />\n    </div>\n    <div autofocus=\"autofocus\" v-else>\n      <PrimeButton @click=\"setQaStatusTo(QaStatus.Accepted)\" label=\"Accept Dataset\" id=\"accept-button\" />\n      <PrimeButton @click=\"setQaStatusTo(QaStatus.Rejected)\" label=\"Reject Dataset\" id=\"reject-button\" />\n    </div>\n  </MiddleCenterDiv>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject } from \"vue\";\nimport PrimeButton from \"primevue/button\";\nimport { type DynamicDialogInstance } from \"primevue/dynamicdialogoptions\";\nimport { ApiClientProvider } from \"@/services/ApiClients\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\nimport type Keycloak from \"keycloak-js\";\nimport MiddleCenterDiv from \"@/components/wrapper/MiddleCenterDivWrapper.vue\";\nimport SuccessMessage from \"@/components/messages/SuccessMessage.vue\";\nimport FailMessage from \"@/components/messages/FailMessage.vue\";\nimport { TIME_DELAY_BETWEEN_SUBMIT_AND_NEXT_ACTION_IN_MS } from \"@/utils/Constants\";\nimport { QaStatus } from \"@clients/qaservice\";\n\nexport default defineComponent({\n  components: { FailMessage, SuccessMessage, MiddleCenterDiv, PrimeButton },\n  inject: [\"dialogRef\"],\n  name: \"QADatasetModal\",\n  setup() {\n    return {\n      getKeycloakPromise: inject<() => Promise<Keycloak>>(\"getKeycloakPromise\"),\n    };\n  },\n  data() {\n    return {\n      dataSetToReview: null as unknown as object,\n      dataId: \"\",\n      reviewSubmitted: false,\n      reviewSuccessful: false,\n      QaStatus,\n    };\n  },\n  mounted() {\n    const dialogRefToDisplay = this.dialogRef as DynamicDialogInstance;\n    const dialogRefData = dialogRefToDisplay.data as {\n      dataSetToReview: object;\n      dataId: string;\n    };\n    this.dataSetToReview = dialogRefData.dataSetToReview;\n    this.dataId = dialogRefData.dataId;\n  },\n  computed: {\n    datasetAsJson(): string {\n      return JSON.stringify(this.dataSetToReview, null, 2);\n    },\n  },\n\n  methods: {\n    /**\n     * Sets dataset quality status to the given status\n     * @param qaStatus the QA status to be assigned\n     */\n    async setQaStatusTo(qaStatus: QaStatus) {\n      try {\n        this.reviewSubmitted = true;\n        const qaServiceControllerApi = await new ApiClientProvider(\n          assertDefined(this.getKeycloakPromise)(),\n        ).getQaControllerApi();\n        await qaServiceControllerApi.assignQaStatus(this.dataId, qaStatus);\n        this.reviewSuccessful = true;\n        setTimeout(() => {\n          this.closeTheDialogAndReloadPage();\n        }, TIME_DELAY_BETWEEN_SUBMIT_AND_NEXT_ACTION_IN_MS);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    /**\n     * Closes the dialog and refreshes the page afterwards.\n     */\n    closeTheDialogAndReloadPage() {\n      const dialogRefToDisplay = this.dialogRef as DynamicDialogInstance;\n      dialogRefToDisplay.close();\n    },\n  },\n});\n</script>\n\n<style>\npre#dataset-container {\n  background: white;\n  padding: 20px;\n  border: 1px solid black;\n}\n\n#accept-button {\n  color: var(--green-700);\n  background: var(--green-100);\n  border: 1px solid var(--green-700);\n}\n\n#reject-button {\n  color: var(--red-700);\n  background: var(--red-100);\n  border: 1px solid var(--red-700);\n}\n</style>\n","<template>\n  <AuthenticationWrapper>\n    <TheHeader />\n    <TheContent class=\"paper-section flex\">\n      <DatasetsTabMenu :initial-tab-index=\"2\">\n        <AuthorizationWrapper :required-role=\"KEYCLOAK_ROLE_REVIEWER\">\n          <div class=\"col-12 text-left p-3\">\n            <h1>Quality Assurance</h1>\n            <div v-if=\"waitingForData\" class=\"d-center-div text-center px-7 py-4\">\n              <p class=\"font-medium text-xl\">Loading data to be reviewed...</p>\n              <i class=\"pi pi-spinner pi-spin\" aria-hidden=\"true\" style=\"z-index: 20; color: #e67f3f\" />\n            </div>\n            <div class=\"card\">\n              <DataTable\n                :value=\"displayDataOfPage\"\n                class=\"table-cursor\"\n                id=\"qa-data-result\"\n                :rowHover=\"true\"\n                data-test=\"qa-review-section\"\n                @row-click=\"loadDatasetAndOpenModal($event)\"\n                paginator\n                paginator-position=\"top\"\n                :rows=\"datasetsPerPage\"\n                lazy\n                :total-records=\"dataIdList.length\"\n                @page=\"onPage($event)\"\n              >\n                <Column header=\"DATA ID\" class=\"d-bg-white w-2 qa-review-id\">\n                  <template #body=\"slotProps\">\n                    {{ slotProps.data.dataId }}\n                  </template>\n                </Column>\n                <Column header=\"COMPANY NAME\" class=\"d-bg-white w-2 qa-review-company-name\">\n                  <template #body=\"slotProps\">\n                    {{ slotProps.data.companyInformation.companyName }}\n                  </template>\n                </Column>\n                <Column header=\"FRAMEWORK\" class=\"d-bg-white w-2 qa-review-framework\">\n                  <template #body=\"slotProps\">\n                    {{ humanizeString(slotProps.data.metaInformation.dataType) }}\n                  </template>\n                </Column>\n                <Column header=\"REPORTING PERIOD\" class=\"d-bg-white w-2 qa-review-reporting-period\">\n                  <template #body=\"slotProps\">\n                    {{ slotProps.data.metaInformation.reportingPeriod }}\n                  </template>\n                </Column>\n                <Column header=\"SUBMISSION DATE\" class=\"d-bg-white w-2 qa-review-submission-date\">\n                  <template #body=\"slotProps\">\n                    {{ convertUnixTimeInMsToDateString(slotProps.data.metaInformation.uploadTime) }}\n                  </template>\n                </Column>\n                <Column field=\"reviewDataset\" header=\"\" class=\"w-2 d-bg-white qa-review-button\">\n                  <template #body>\n                    <div class=\"text-right text-primary no-underline font-bold\">\n                      <span>REVIEW</span>\n                      <span class=\"ml-3\">></span>\n                    </div>\n                  </template>\n                </Column>\n              </DataTable>\n            </div>\n          </div>\n        </AuthorizationWrapper>\n      </DatasetsTabMenu>\n    </TheContent>\n    <TheFooter />\n  </AuthenticationWrapper>\n</template>\n\n<script lang=\"ts\">\nimport TheFooter from \"@/components/general/TheFooter.vue\";\nimport TheContent from \"@/components/generics/TheContent.vue\";\nimport TheHeader from \"@/components/generics/TheHeader.vue\";\nimport AuthenticationWrapper from \"@/components/wrapper/AuthenticationWrapper.vue\";\nimport { defineComponent, inject } from \"vue\";\nimport type Keycloak from \"keycloak-js\";\nimport {\n  type CompanyDataControllerApiInterface,\n  type CompanyInformation,\n  type DataMetaInformation,\n  DataTypeEnum,\n  type MetaDataControllerApiInterface,\n} from \"@clients/backend\";\nimport { ApiClientProvider } from \"@/services/ApiClients\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\nimport AuthorizationWrapper from \"@/components/wrapper/AuthorizationWrapper.vue\";\nimport { KEYCLOAK_ROLE_REVIEWER } from \"@/utils/KeycloakUtils\";\nimport DataTable, { type DataTablePageEvent, type DataTableRowClickEvent } from \"primevue/datatable\";\nimport Column from \"primevue/column\";\nimport { humanizeStringOrNumber } from \"@/utils/StringHumanizer\";\nimport QADatasetModal from \"@/components/general/QaDatasetModal.vue\";\nimport { AxiosError } from \"axios\";\nimport DatasetsTabMenu from \"@/components/general/DatasetsTabMenu.vue\";\nimport { convertUnixTimeInMsToDateString } from \"@/utils/DataFormatUtils\";\nimport { type QaControllerApi } from \"@clients/qaservice\";\n\nexport default defineComponent({\n  name: \"QualityAssurance\",\n  components: {\n    DatasetsTabMenu,\n    AuthorizationWrapper,\n    TheFooter,\n    TheContent,\n    TheHeader,\n    AuthenticationWrapper,\n    DataTable,\n    Column,\n  },\n  setup() {\n    return {\n      datasetsPerPage: 10,\n      getKeycloakPromise: inject<() => Promise<Keycloak>>(\"getKeycloakPromise\"),\n    };\n  },\n  data() {\n    return {\n      dataIdList: [] as Array<string>,\n      dataId: \"\",\n      displayDataOfPage: [] as QaDataObject[],\n      waitingForData: true,\n      dataSet: null as unknown as object,\n      KEYCLOAK_ROLE_REVIEWER,\n      metaInformation: null as DataMetaInformation,\n      companyInformation: null as CompanyInformation | null,\n      qaServiceControllerApi: undefined as undefined | QaControllerApi,\n      metaDataInformationControllerApi: undefined as undefined | MetaDataControllerApiInterface,\n      companyDataControllerApi: undefined as undefined | CompanyDataControllerApiInterface,\n      currentPage: 0,\n    };\n  },\n  mounted() {\n    this.getQaDataForCurrentPage().catch((error) => console.log(error));\n  },\n  methods: {\n    convertUnixTimeInMsToDateString,\n    humanizeString: humanizeStringOrNumber,\n    /**\n     * Uses the dataland API to build the QaDataObject which is displayed on the quality assurance page\n     */\n    async getQaDataForCurrentPage() {\n      try {\n        this.waitingForData = true;\n        this.displayDataOfPage = [];\n        const dataOfPage = [] as QaDataObject[];\n        await this.gatherControllerApis();\n        const response = await (this.qaServiceControllerApi as QaControllerApi).getUnreviewedDatasetsIds();\n        this.dataIdList = response.data;\n        const firstDatasetOnPageIndex = this.currentPage * this.datasetsPerPage;\n        const dataIdsOnPage = this.dataIdList.slice(\n          firstDatasetOnPageIndex,\n          firstDatasetOnPageIndex + this.datasetsPerPage,\n        );\n        for (const dataId of dataIdsOnPage) {\n          dataOfPage.push(await this.addDatasetAssociatedInformationToDisplayList(dataId));\n        }\n        this.displayDataOfPage = dataOfPage;\n        this.waitingForData = false;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\n     * Gathers the controller APIs\n     */\n    async gatherControllerApis() {\n      this.qaServiceControllerApi = await new ApiClientProvider(\n        assertDefined(this.getKeycloakPromise)(),\n      ).getQaControllerApi();\n      this.metaDataInformationControllerApi = await new ApiClientProvider(\n        assertDefined(this.getKeycloakPromise)(),\n      ).getMetaDataControllerApi();\n      this.companyDataControllerApi = await new ApiClientProvider(\n        assertDefined(this.getKeycloakPromise)(),\n      ).getCompanyDataControllerApi();\n    },\n    /**\n     * Gathers meta and company information associated with a dataset if the information can be retrieved\n     * @param dataId the ID of the corresponding dataset\n     * @returns a promise on the fetched data object\n     */\n    async addDatasetAssociatedInformationToDisplayList(dataId: string): Promise<QaDataObject> {\n      try {\n        const metaDataResponse = await (\n          this.metaDataInformationControllerApi as MetaDataControllerApiInterface\n        ).getDataMetaInfo(dataId);\n        this.metaInformation = metaDataResponse.data;\n        const companyResponse = await (\n          this.companyDataControllerApi as CompanyDataControllerApiInterface\n        ).getCompanyById(this.metaInformation.companyId);\n        this.companyInformation = companyResponse.data.companyInformation;\n        return {\n          dataId: dataId,\n          metaInformation: this.metaInformation,\n          companyInformation: this.companyInformation,\n        } as QaDataObject;\n      } catch (error) {\n        if (error instanceof AxiosError && error.response.status !== 404) {\n          throw error;\n        }\n      }\n    },\n    /**\n     * Retrieves the dataset corresponding to the given dataId\n     * @param qaDataObject is the quality assurance data object used to retrieve the actual dataset to be reviewed\n     */\n    async getDataSet(qaDataObject: QaDataObject) {\n      try {\n        const dataTypeOfDatasetToReview = qaDataObject.metaInformation.dataType;\n        this.dataId = qaDataObject.dataId;\n        const keycloakPromise = assertDefined(this.getKeycloakPromise)();\n\n        if (dataTypeOfDatasetToReview === DataTypeEnum.EutaxonomyNonFinancials) {\n          const euTaxonomyDataForNonFinancialsControllerApi = await new ApiClientProvider(\n            keycloakPromise,\n          ).getEuTaxonomyDataForNonFinancialsControllerApi();\n          const companyAssociatedDataResponse =\n            await euTaxonomyDataForNonFinancialsControllerApi.getCompanyAssociatedEuTaxonomyDataForNonFinancials(\n              this.dataId,\n            );\n          this.dataSet = assertDefined(companyAssociatedDataResponse.data.data);\n        } else if (dataTypeOfDatasetToReview === DataTypeEnum.EutaxonomyFinancials) {\n          const euTaxonomyDataForFinancialsControllerApi = await new ApiClientProvider(\n            keycloakPromise,\n          ).getEuTaxonomyDataForFinancialsControllerApi();\n          const companyAssociatedDataResponse =\n            await euTaxonomyDataForFinancialsControllerApi.getCompanyAssociatedEuTaxonomyDataForFinancials(this.dataId);\n          this.dataSet = assertDefined(companyAssociatedDataResponse.data.data);\n        } else if (dataTypeOfDatasetToReview === DataTypeEnum.Lksg) {\n          const lksgDataControllerApi = await new ApiClientProvider(keycloakPromise).getLksgDataControllerApi();\n          const companyAssociatedDataResponse = await lksgDataControllerApi.getCompanyAssociatedLksgData(this.dataId);\n          this.dataSet = assertDefined(companyAssociatedDataResponse.data.data);\n        } else if (dataTypeOfDatasetToReview === DataTypeEnum.Sfdr) {\n          const sfdrDataControllerApi = await new ApiClientProvider(keycloakPromise).getSfdrDataControllerApi();\n          const companyAssociatedDataResponse = await sfdrDataControllerApi.getCompanyAssociatedSfdrData(this.dataId);\n          this.dataSet = assertDefined(companyAssociatedDataResponse.data.data);\n        } else if (dataTypeOfDatasetToReview === DataTypeEnum.P2p) {\n          const p2pDataControllerApi = await new ApiClientProvider(keycloakPromise).getP2pDataControllerApi();\n          const companyAssociatedDataResponse = await p2pDataControllerApi.getCompanyAssociatedP2pData(this.dataId);\n          this.dataSet = assertDefined(companyAssociatedDataResponse.data.data);\n        } else if (dataTypeOfDatasetToReview === DataTypeEnum.Sme) {\n          const smeDataControllerApi = await new ApiClientProvider(keycloakPromise).getSmeDataControllerApi();\n          const companyAssociatedDataResponse = await smeDataControllerApi.getCompanyAssociatedSmeData(this.dataId);\n          this.dataSet = assertDefined(companyAssociatedDataResponse.data.data);\n        } else {\n          throw new Error(\"The qaDataObject type of the selected dataset is not supported by the QA frontend.\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\n     * Opens a modal to display a table with the provided list of production sites\n     * @param event the event which triggers the method\n     */\n    async loadDatasetAndOpenModal(event: DataTableRowClickEvent) {\n      const qaDataObject = event.data as QaDataObject;\n      await this.getDataSet(qaDataObject);\n      this.$dialog.open(QADatasetModal, {\n        props: {\n          header:\n            \"Reviewing \" +\n            qaDataObject.metaInformation.dataType +\n            \" data for \" +\n            qaDataObject.companyInformation.companyName +\n            \" for the reporting period \" +\n            qaDataObject.metaInformation.reportingPeriod,\n          modal: true,\n          dismissableMask: true,\n        },\n        data: {\n          dataSetToReview: this.dataSet,\n          dataId: this.dataId,\n        },\n        onClose: () => {\n          this.getQaDataForCurrentPage().catch((error) => console.log(error));\n        },\n      });\n    },\n    /**\n     * Updates the data for the current page\n     * @param event event containing the new page\n     */\n    async onPage(event: DataTablePageEvent) {\n      this.currentPage = event.page;\n      await this.getQaDataForCurrentPage();\n    },\n  },\n});\ninterface QaDataObject {\n  dataId: string;\n  metaInformation: DataMetaInformation;\n  companyInformation: CompanyInformation;\n}\n</script>\n\n<style>\n#qa-data-result tr:hover {\n  cursor: pointer;\n}\n</style>\n"],"names":["QaStatus","_sfc_main$1","defineComponent","FailMessage","SuccessMessage","MiddleCenterDiv","PrimeButton","inject","dialogRefData","qaStatus","ApiClientProvider","assertDefined","TIME_DELAY_BETWEEN_SUBMIT_AND_NEXT_ACTION_IN_MS","error","_hoisted_3","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_toDisplayString","_ctx","_component_MiddleCenterDiv","_withCtx","_hoisted_2","_component_SuccessMessage","_createBlock","_component_FailMessage","_createVNode","_component_PrimeButton","_cache","$event","_sfc_main","DatasetsTabMenu","AuthorizationWrapper","TheFooter","TheContent","TheHeader","AuthenticationWrapper","DataTable","Column","KEYCLOAK_ROLE_REVIEWER","convertUnixTimeInMsToDateString","humanizeStringOrNumber","dataOfPage","response","firstDatasetOnPageIndex","dataIdsOnPage","dataId","metaDataResponse","companyResponse","AxiosError","qaDataObject","dataTypeOfDatasetToReview","keycloakPromise","DataTypeEnum","companyAssociatedDataResponse","event","QADatasetModal","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_8","_component_AuthenticationWrapper","_resolveComponent","_component_TheHeader","_component_TheContent","_component_DatasetsTabMenu","_component_AuthorizationWrapper","_createCommentVNode","_hoisted_7","_component_DataTable","_component_Column"],"mappings":"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"}