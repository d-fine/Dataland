{"version":3,"file":"ApiKeysPage-5d92424a.js","sources":["../../src/components/general/apiKey/UserRolesBadges.vue","../../src/components/general/apiKey/ApiKeyCard.vue","../../src/components/general/apiKey/CreateApiKeyCard.vue","../../src/components/messages/MessageComponent.vue","../../node_modules/primevue/textarea/textarea.esm.js","../../src/components/pages/ApiKeysPage.vue","../../src/assets/images/elements/bulb_icon.svg"],"sourcesContent":["<template>\n  <div class=\"text-left text-xs ml-1 text-600\">Scope</div>\n  <div class=\"flex align-items-center justify-content-center\">\n    <div v-if=\"userRoles.includes('ROLE_USER')\" data-test=\"userRoleUser\" class=\"p-badge badge-yellow\">\n      <span>READ</span>\n    </div>\n    <div v-if=\"userRoles.includes('ROLE_UPLOADER')\" data-test=\"userRoleUploader\" class=\"p-badge badge-green\">\n      <span>WRITE</span>\n    </div>\n    <div v-if=\"userRoles.includes('ROLE_REVIEWER')\" data-test=\"userRoleReviewer\" class=\"p-badge badge-purple\">\n      <span>REVIEWER</span>\n    </div>\n    <div v-if=\"userRoles.includes('ROLE_ADMIN')\" data-test=\"userRoleAdmin\" class=\"p-badge badge-blue\">\n      <span>ADMIN</span>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"UserRolesBadges\",\n  props: {\n    userRoles: {\n      type: Array,\n    },\n  },\n});\n</script>\n","<template>\n  <PrimeDialog\n    id=\"revokeModal\"\n    :dismissableMask=\"true\"\n    :modal=\"true\"\n    header=\"Header\"\n    footer=\"Footer\"\n    v-model:visible=\"viewDeleteConfirmation\"\n  >\n    <template #header>\n      <h2 class=\"m-0\">Delete API Key</h2>\n    </template>\n    Are you sure you want to delete this API key?\n    <strong>If you confirm, your previous token will be invalidated and your applications will stop working.</strong>\n    <template #footer>\n      <PrimeButton label=\"CANCEL\" @click=\"deleteConfirmToggle\" class=\"p-button-outlined\" />\n      <PrimeButton id=\"confirmRevokeButton\" label=\"CONFIRM\" @click=\"$emit('revokeKey')\" />\n    </template>\n  </PrimeDialog>\n\n  <div>\n    <div id=\"existingApiKeyCard\" class=\"surface-card shadow-1 p-3 border-round-sm border-round\">\n      <div class=\"flex justify-content-between mb-3\">\n        <div>\n          <div class=\"text-900 font-medium text-xl text-left\">API Key info</div>\n          <span :class=\"{ 'text-red-700': isKeyExpired() }\" class=\"block text-600 mb-3 mt-6\">\n            {{ keyExpiryInfoText }}\n          </span>\n        </div>\n\n        <div data-test=\"userRoles\" class=\"pr-1\">\n          <UserRolesBadges :userRoles=\"userRoles\" />\n        </div>\n      </div>\n      <div class=\"col-12 text-right\">\n        <PrimeButton\n          label=\"DELETE\"\n          icon=\"pi pi-trash\"\n          class=\"p-button-outlined ml-3 px-4 border-2 p-button-danger\"\n          @click=\"deleteConfirmToggle\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport PrimeButton from \"primevue/button\";\nimport PrimeDialog from \"primevue/dialog\";\nimport { convertUnixTimeInMsToDateString } from \"@/utils/DataFormatUtils\";\nimport { defineComponent } from \"vue\";\nimport UserRolesBadges from \"@/components/general/apiKey/UserRolesBadges.vue\";\n\nexport default defineComponent({\n  name: \"ApiKeyCard\",\n  components: { PrimeButton, PrimeDialog, UserRolesBadges },\n  emits: [\"revokeKey\"],\n  props: {\n    expiryDateInMilliseconds: {\n      type: Number,\n      default: null,\n    },\n    userRoles: {\n      type: Array,\n    },\n  },\n  data: () => ({\n    viewDeleteConfirmation: false,\n  }),\n  computed: {\n    keyExpiryInfoText() {\n      if (this.expiryDateInMilliseconds && this.expiryDateInMilliseconds >= Date.now()) {\n        return `The API Key will expire on ${convertUnixTimeInMsToDateString(this.expiryDateInMilliseconds)}`;\n      } else if (this.expiryDateInMilliseconds && this.expiryDateInMilliseconds < Date.now()) {\n        return `The API Key expired on ${convertUnixTimeInMsToDateString(this.expiryDateInMilliseconds)}`;\n      } else {\n        return \"The API Key has no defined expiry date\";\n      }\n    },\n  },\n  methods: {\n    /**\n     * Toggles the \"confirm api key deletion\" dialog\n     */\n    deleteConfirmToggle() {\n      this.viewDeleteConfirmation = !this.viewDeleteConfirmation;\n    },\n    /**\n     * Calculates whether the current api key is expired based on the expiryDateInMilliseconds\n     * @returns whether the api key is expired\n     */\n    isKeyExpired() {\n      return !(this.expiryDateInMilliseconds >= new Date().getTime() || this.expiryDateInMilliseconds == null);\n    },\n  },\n});\n</script>\n","<template>\n  <div>\n    <div class=\"surface-card shadow-1 p-3 border-round-sm border-round\">\n      <div class=\"flex justify-content-between mb-3\">\n        <div>\n          <div class=\"text-900 font-medium text-xl text-left pl-1\">API Key info</div>\n        </div>\n        <div data-test=\"userRoles\" class=\"pr-1\">\n          <UserRolesBadges :userRoles=\"userRoles\" />\n        </div>\n      </div>\n      <div\n        :class=\"{ invalidExpiryTime: !isExpiryDateValid }\"\n        class=\"col-12 flex justify-content-between align-items-end\"\n      >\n        <div class=\"text-left col-5\">\n          <label\n            for=\"expiryTime\"\n            :class=\"{ invalidExpiryTimeText: !isExpiryDateValid, 'text-900': isExpiryDateValid }\"\n            class=\"block font-medium mb-2\"\n          >\n            {{ !isExpiryDateValid ? \"Please select expiration date\" : \"Expiration\" }}\n          </label>\n          <Dropdown\n            id=\"expiryTime\"\n            v-model=\"expiryTimeDropdown\"\n            :options=\"days\"\n            optionLabel=\"label\"\n            optionValue=\"value\"\n            placeholder=\"Select expiry\"\n            class=\"w-full custom-dropdown\"\n            @change=\"setExpiryTimeDays($event)\"\n          />\n        </div>\n\n        <div v-if=\"expiryTimeDropdown === 'custom'\" class=\"col-7 text-right\">\n          <Calendar\n            data-test=\"expiryDatePicker\"\n            inputId=\"icon\"\n            v-model=\"customDateInMilliseconds\"\n            :showIcon=\"true\"\n            dateFormat=\"D, M dd, yy\"\n            :minDate=\"minDate\"\n            :maxDate=\"maxDate\"\n          />\n        </div>\n\n        <span\n          id=\"expiryTimeWrapper\"\n          v-if=\"expiryTimeDropdown && expiryTimeDropdown !== 'custom'\"\n          class=\"block text-600 col-7\"\n        >\n          {{\n            expiryTimeDropdown === \"noExpiry\"\n              ? `The API Key has no defined expiry date`\n              : `The API Key will expire on ${expiryDateFormated}`\n          }}\n        </span>\n      </div>\n    </div>\n    <div class=\"mt-3 text-right\">\n      <PrimeButton\n        data-test=\"cancelGenerateApiKey\"\n        label=\"CANCEL\"\n        @click=\"$emit('cancelCreate')\"\n        class=\"p-button-outlined ml-3\"\n      />\n      <PrimeButton\n        id=\"generateApiKey\"\n        @click=\"checkDateAndEmitGenerateApiKey\"\n        label=\"GENERATE API KEY\"\n        class=\"ml-3\"\n      ></PrimeButton>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport PrimeButton from \"primevue/button\";\nimport { defineComponent } from \"vue\";\nimport Dropdown from \"primevue/dropdown\";\nimport Calendar from \"primevue/calendar\";\nimport { calculateExpiryDateAsDateString, calculateDaysFromNow } from \"@/utils/DataFormatUtils\";\nimport UserRolesBadges from \"@/components/general/apiKey/UserRolesBadges.vue\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\nimport { MS_PER_DAY } from \"@/utils/Constants\";\nimport { MAX_NUMBER_OF_DAYS_SELECTABLE_FOR_API_KEY_VALIDITY } from \"@/DatalandSettings\";\n\nexport default defineComponent({\n  name: \"CreateApiKeyCard\",\n  components: { PrimeButton, Dropdown, Calendar, UserRolesBadges },\n  props: {\n    userRoles: {\n      type: Array,\n    },\n  },\n  data: () => ({\n    expiryTimeDays: null as null | number,\n    expiryTimeDropdown: \"\",\n    isExpiryDateValid: true,\n    minDate: new Date(new Date().getTime() + MS_PER_DAY),\n    maxDate: new Date(new Date().getTime() + MAX_NUMBER_OF_DAYS_SELECTABLE_FOR_API_KEY_VALIDITY * MS_PER_DAY),\n\n    customDateInMilliseconds: null as null | number,\n    days: [\n      { label: \"7 days\", value: 7 },\n      { label: \"30 days\", value: 30 },\n      { label: \"60 days\", value: 60 },\n      { label: \"90 days\", value: 90 },\n      { label: \"Custom...\", value: \"custom\" },\n      { label: \"No expiry\", value: \"noExpiry\" },\n    ],\n  }),\n  methods: {\n    /**\n     * Called when the user selects a new expiry date from the dropdown.\n     * Updates the local expiry date based on the selected value or the value of the date time selector if \"custom\" was selected\n     * @param event the selection event\n     */\n    setExpiryTimeDays(event: HTMLSelectElement) {\n      if (event.value === \"noExpiry\") {\n        this.expiryTimeDays = null;\n      } else if (event.value === \"custom\") {\n        this.expiryTimeDays = this.customDateInMilliseconds\n          ? calculateDaysFromNow(this.customDateInMilliseconds)\n          : null;\n      } else {\n        this.expiryTimeDays = parseInt(event.value);\n      }\n      this.isExpiryDateValid = true;\n    },\n\n    /**\n     * Called when the user clicks on generate api key. Validates that the expiry time is set and emits\n     * the \"generateApiKey\" event to trigger api-key generation\n     */\n    checkDateAndEmitGenerateApiKey() {\n      if (this.expiryTimeDays) {\n        this.$emit(\"generateApiKey\", this.expiryTimeDays);\n      } else if (this.expiryTimeDropdown === \"noExpiry\") {\n        this.$emit(\"generateApiKey\");\n      } else {\n        this.isExpiryDateValid = false;\n      }\n    },\n  },\n  computed: {\n    expiryDateFormated(): string {\n      return calculateExpiryDateAsDateString(assertDefined(this.expiryTimeDays));\n    },\n  },\n  watch: {\n    customDateInMilliseconds: function (newValue: number) {\n      this.expiryTimeDays = calculateDaysFromNow(newValue);\n      this.isExpiryDateValid = true;\n    },\n  },\n});\n</script>\n\n<style scoped>\n.invalidExpiryTime {\n  border: 1px solid var(--red-600);\n}\n.invalidExpiryTimeText {\n  color: var(--red-600);\n}\n</style>\n","<template>\n  <transition name=\"p-message\" appear>\n    <div v-show=\"visible\" :class=\"containerClass\" class=\"p-message p-component border-round-sm\">\n      <div class=\"p-message-wrapper\">\n        <div data-test=\"text-info\" class=\"text-left\">\n          <slot name=\"text-info\"></slot>\n        </div>\n        <div data-test=\"action-button\" class=\"text-right action-button ml-auto\">\n          <slot name=\"action-button\"></slot>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"MessageComponent\",\n  props: {\n    severity: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      visible: true,\n    };\n  },\n  computed: {\n    containerClass() {\n      return \" p-message-\" + this.severity;\n    },\n  },\n});\n</script>\n\n<style>\n.action-button button {\n  white-space: nowrap;\n  margin-left: 15px;\n}\n.p-message-wrapper {\n  display: flex;\n  align-items: center;\n}\n</style>\n","import BaseComponent from 'primevue/basecomponent';\nimport { useStyle } from 'primevue/usestyle';\nimport { openBlock, createElementBlock, mergeProps } from 'vue';\n\nvar styles = \"\\n.p-inputtextarea-resizable {\\n    overflow: hidden;\\n    resize: none;\\n}\\n\\n.p-fluid .p-inputtextarea {\\n    width: 100%;\\n}\\n\";\nvar classes = {\n  root: function root(_ref) {\n    var instance = _ref.instance,\n      props = _ref.props;\n    return ['p-inputtextarea p-inputtext p-component', {\n      'p-filled': instance.filled,\n      'p-inputtextarea-resizable ': props.autoResize\n    }];\n  }\n};\nvar _useStyle = useStyle(styles, {\n    name: 'textarea',\n    manual: true\n  }),\n  loadStyle = _useStyle.load;\nvar script$1 = {\n  name: 'BaseTextarea',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: null,\n    autoResize: Boolean\n  },\n  css: {\n    classes: classes,\n    loadStyle: loadStyle\n  },\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Textarea',\n  \"extends\": script$1,\n  emits: ['update:modelValue'],\n  mounted: function mounted() {\n    if (this.$el.offsetParent && this.autoResize) {\n      this.resize();\n    }\n  },\n  updated: function updated() {\n    if (this.$el.offsetParent && this.autoResize) {\n      this.resize();\n    }\n  },\n  methods: {\n    resize: function resize() {\n      var style = window.getComputedStyle(this.$el);\n      this.$el.style.height = 'auto';\n      this.$el.style.height = \"calc(\".concat(style.borderTopWidth, \" + \").concat(style.borderBottomWidth, \" + \").concat(this.$el.scrollHeight, \"px)\");\n      if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n        this.$el.style.overflowY = 'scroll';\n        this.$el.style.height = this.$el.style.maxHeight;\n      } else {\n        this.$el.style.overflow = 'hidden';\n      }\n    },\n    onInput: function onInput(event) {\n      if (this.autoResize) {\n        this.resize();\n      }\n      this.$emit('update:modelValue', event.target.value);\n    }\n  },\n  computed: {\n    filled: function filled() {\n      return this.modelValue != null && this.modelValue.toString().length > 0;\n    },\n    ptmParams: function ptmParams() {\n      return {\n        context: {\n          disabled: this.$attrs.disabled || this.$attrs.disabled === ''\n        }\n      };\n    }\n  }\n};\n\nvar _hoisted_1 = [\"value\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"textarea\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    value: _ctx.modelValue,\n    onInput: _cache[0] || (_cache[0] = function () {\n      return $options.onInput && $options.onInput.apply($options, arguments);\n    })\n  }, _ctx.ptm('root', $options.ptmParams), {\n    \"data-pc-name\": \"textarea\"\n  }), null, 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n","<template>\n  <AuthenticationWrapper>\n    <TheHeader />\n\n    <TheContent class=\"paper-section flex\">\n      <div class=\"col-12 text-left pb-0\">\n        <BackButton />\n        <h1>{{ pageTitle }}</h1>\n      </div>\n\n      <MiddleCenterDiv v-if=\"waitingForData\" class=\"col-12\">\n        <div class=\"col-6 md:col-8 lg:col-12\">\n          <p class=\"font-medium text-xl\">Loading Api Key information...</p>\n          <i class=\"pi pi-spinner pi-spin\" aria-hidden=\"true\" style=\"z-index: 20; color: #e67f3f\" />\n        </div>\n      </MiddleCenterDiv>\n\n      <MiddleCenterDiv\n        data-test=\"noApiKeyWelcomeComponent\"\n        v-if=\"!userAlreadyHasApiKey && !waitingForData && this.pageState !== 'create'\"\n        class=\"col-12\"\n      >\n        <div>\n          <img alt=\"light bulb\" src=\"@/assets/images/elements/bulb_icon.svg\" />\n          <p class=\"font-medium text-xl text-color-third\">You have no API Key!</p>\n          <PrimeButton @click=\"setActivePageState('create')\" label=\"CREATE NEW API KEY\" icon=\"pi pi-plus\" />\n        </div>\n      </MiddleCenterDiv>\n\n      <div\n        data-test=\"CreateApiKeyCard\"\n        v-if=\"this.pageState === 'create' && !waitingForData\"\n        class=\"col-12 md:col-8 lg:col-6\"\n      >\n        <CreateApiKeyCard\n          :userRoles=\"userRolesAccordingToKeycloak\"\n          @cancelCreate=\"setActivePageState('view')\"\n          @generateApiKey=\"generateApiKey\"\n        />\n      </div>\n\n      <div\n        data-test=\"apiKeyInfo\"\n        class=\"apiKeyInfo\"\n        v-if=\"userAlreadyHasApiKey && !waitingForData && pageState === 'view'\"\n      >\n        <div class=\"col-12 md:col-8 lg:col-6\">\n          <MessageComponent\n            data-test=\"newKeyHolder\"\n            v-if=\"newKey.length\"\n            severity=\"success\"\n            :closable=\"false\"\n            class=\"border-2\"\n          >\n            <template #text-info>\n              <div class=\"col-12\">Make sure to copy your API Key now. You will not be able to access it again.</div>\n              <div class=\"my-2\">\n                <div class=\"p-input-icon-right border-round-sm paper-section pl-1 col-10 fs-lg\">\n                  <PrimeTextarea\n                    ref=\"newKeyHolderRef\"\n                    v-on:focus=\"$event.target.select()\"\n                    :autoResize=\"true\"\n                    cols=\"5\"\n                    v-model=\"newKey\"\n                    id=\"newKeyHolder\"\n                    readonly\n                    placeholder=\"Key goes here\"\n                    class=\"p-inputText p-component col-10\"\n                  />\n                  <em @click=\"copyToClipboard\" class=\"pi pi-clone form-inputs-bg primary-color copy-button fs-lg\" />\n                </div>\n              </div>\n            </template>\n          </MessageComponent>\n\n          <MessageComponent data-test=\"regenerateApiKeyMessage\" v-if=\"!newKey\" severity=\"block\" class=\"border-2\">\n            <template #text-info> If you don't have access to your API Key you can generate a new one. </template>\n            <template #action-button>\n              <PrimeButton @click=\"regenerateConfirmToggle\" label=\"REGENERATE API KEY\" />\n            </template>\n          </MessageComponent>\n\n          <ApiKeyCard\n            :userRoles=\"userRolesAccordingToApiKey\"\n            :expiryDateInMilliseconds=\"expiryDate\"\n            @revokeKey=\"revokeApiKey\"\n          />\n          <div id=\"apiKeyUsageInfoMessage\" class=\"surface-card shadow-1 p-3 border-round-sm border-round mt-3\">\n            <div>\n              <div class=\"text-900 font-medium text-xl text-left\">API Key usage info</div>\n              <div class=\"block text-600 mb-2 mt-4 text-left\">\n                You can use the API-Keys as bearer-tokens by including them in the authorization header of any requests\n                you make to Dataland (i.e., \"Authorization: Bearer &lt;API Key&gt;\").\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </TheContent>\n\n    <PrimeDialog\n      id=\"regenerateApiKeyModal\"\n      :dismissableMask=\"true\"\n      :modal=\"true\"\n      header=\"Header\"\n      footer=\"Footer\"\n      v-model:visible=\"regenerateConfirmationVisible\"\n    >\n      <template #header>\n        <h2 class=\"m-0\">Regenerate API Key</h2>\n      </template>\n      Are you sure you want to Regenerate your API Key?\n      <strong>If you confirm, your previous token will be invalidated and your applications will stop working.</strong>\n      <template #footer>\n        <PrimeButton\n          data-test=\"regenerateApiKeyCancelButton\"\n          label=\"CANCEL\"\n          @click=\"regenerateConfirmToggle\"\n          class=\"p-button-outlined\"\n        />\n        <PrimeButton\n          data-test=\"regenerateApiKeyConfirmButton\"\n          label=\"CONFIRM\"\n          @click=\"\n            () => {\n              setActivePageState('create');\n              regenerateConfirmToggle();\n            }\n          \"\n        />\n      </template>\n    </PrimeDialog>\n    <TheFooter />\n  </AuthenticationWrapper>\n</template>\n\n<script lang=\"ts\">\nimport AuthenticationWrapper from \"@/components/wrapper/AuthenticationWrapper.vue\";\nimport { type ComponentPublicInstance, defineComponent, inject, ref } from \"vue\";\nimport PrimeButton from \"primevue/button\";\nimport TheHeader from \"@/components/generics/TheHeader.vue\";\nimport TheContent from \"@/components/generics/TheContent.vue\";\nimport MiddleCenterDiv from \"@/components/wrapper/MiddleCenterDivWrapper.vue\";\nimport BackButton from \"@/components/general/BackButton.vue\";\nimport ApiKeyCard from \"@/components/general/apiKey/ApiKeyCard.vue\";\nimport CreateApiKeyCard from \"@/components/general/apiKey/CreateApiKeyCard.vue\";\nimport MessageComponent from \"@/components/messages/MessageComponent.vue\";\nimport PrimeDialog from \"primevue/dialog\";\nimport PrimeTextarea from \"primevue/textarea\";\nimport { ApiClientProvider } from \"@/services/ApiClients\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\nimport type Keycloak from \"keycloak-js\";\nimport { type ApiKeyControllerApiInterface } from \"@clients/apikeymanager\";\nimport TheFooter from \"@/components/general/TheFooter.vue\";\n\nexport default defineComponent({\n  name: \"ApiKeysPage\",\n  components: {\n    AuthenticationWrapper,\n    TheContent,\n    TheHeader,\n    MiddleCenterDiv,\n    BackButton,\n    PrimeButton,\n    PrimeDialog,\n    ApiKeyCard,\n    CreateApiKeyCard,\n    MessageComponent,\n    PrimeTextarea,\n    TheFooter,\n  },\n  setup() {\n    return {\n      getKeycloakPromise: inject<() => Promise<Keycloak>>(\"getKeycloakPromise\"),\n      newKeyHolderRef: ref<ComponentPublicInstance<typeof PrimeTextarea> | null>(null),\n    };\n  },\n  data() {\n    return {\n      pageState: \"view\",\n      userAlreadyHasApiKey: false,\n      waitingForData: true,\n      regenerateConfirmationVisible: false,\n      newKey: \"\",\n      expiryDate: undefined as undefined | number,\n      userRolesAccordingToApiKey: [] as Array<string>,\n      userRolesAccordingToKeycloak: [] as Array<string>,\n    };\n  },\n  computed: {\n    pageTitle() {\n      if (this.pageState === \"view\") return \"API Key\";\n      if (this.pageState === \"create\") return \"Create new API Key\";\n      return \"API\";\n    },\n  },\n  props: {},\n  mounted() {\n    void this.getApiKeyMetaInfoForUser();\n  },\n  methods: {\n    /**\n     * Updates the page state. Possible options are \"view\" and \"create\"\n     * @param state the new page state\n     */\n    setActivePageState(state: string) {\n      this.pageState = state;\n    },\n\n    /**\n     * Called during initialisation. Uses the Dataland API to check if the user already has an existing API key.\n     * Updates the UI according to the retrieved meta-information.\n     */\n    async getApiKeyMetaInfoForUser() {\n      try {\n        const keycloakPromiseGetter = assertDefined(this.getKeycloakPromise);\n        const resolvedKeycloakPromise = await keycloakPromiseGetter();\n        const apiKeyManagerController: ApiKeyControllerApiInterface = await new ApiClientProvider(\n          assertDefined(this.getKeycloakPromise)(),\n        ).getApiKeyManagerController();\n        const apiKeyMetaInfoForUser = await apiKeyManagerController.getApiKeyMetaInfoForUser();\n        this.waitingForData = false;\n        this.userRolesAccordingToApiKey = apiKeyMetaInfoForUser.data.keycloakRoles\n          ? apiKeyMetaInfoForUser.data.keycloakRoles\n          : [];\n        this.userRolesAccordingToKeycloak = resolvedKeycloakPromise.tokenParsed?.realm_access?.roles\n          ? resolvedKeycloakPromise.tokenParsed?.realm_access?.roles\n          : [];\n        this.userAlreadyHasApiKey = apiKeyMetaInfoForUser.data.active ? apiKeyMetaInfoForUser.data.active : false;\n        this.expiryDate = apiKeyMetaInfoForUser.data.expiryDate ? apiKeyMetaInfoForUser.data.expiryDate : undefined;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    /**\n     * Called on the revokeApiKey event emitted from the ApiKeyCard. Uses the Dataland API to revoke any existing api key.\n     * Updates the UI accordingly.\n     */\n    async revokeApiKey() {\n      try {\n        const keycloakPromiseGetter = assertDefined(this.getKeycloakPromise);\n        const apiKeyManagerController = await new ApiClientProvider(\n          keycloakPromiseGetter(),\n        ).getApiKeyManagerController();\n        await apiKeyManagerController.revokeApiKey();\n        this.userAlreadyHasApiKey = false;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    /**\n     * Called when the generateApiKey event is emitted form the CreateApiKeyCard. Uses the Dataland API to\n     * generate a new API key with the specified validity time. Updates the UI to display the new key\n     * @param daysValid the number of days the api key is valid for\n     */\n    async generateApiKey(daysValid?: number) {\n      try {\n        this.waitingForData = true;\n        const keycloakPromiseGetter = assertDefined(this.getKeycloakPromise);\n\n        const apiKeyManagerController = await new ApiClientProvider(\n          keycloakPromiseGetter(),\n        ).getApiKeyManagerController();\n        const response = await apiKeyManagerController.generateApiKey(daysValid);\n        this.waitingForData = false;\n        this.userAlreadyHasApiKey = true;\n        this.expiryDate = response.data.apiKeyMetaInfo.expiryDate ? response.data.apiKeyMetaInfo.expiryDate : undefined;\n        this.newKey = response.data.apiKey;\n        this.userRolesAccordingToApiKey = response.data.apiKeyMetaInfo.keycloakRoles\n          ? response.data.apiKeyMetaInfo.keycloakRoles\n          : [];\n        this.setActivePageState(\"view\");\n      } catch (error) {\n        console.error(error);\n        this.userAlreadyHasApiKey = false;\n      }\n    },\n\n    /**\n     * Toggles the visibility of the \"confirm regeneration\" popup\n     */\n    regenerateConfirmToggle() {\n      this.regenerateConfirmationVisible = !this.regenerateConfirmationVisible;\n    },\n\n    /**\n     * Highlights the newly generated API key and copies it to the clipboard\n     */\n    copyToClipboard() {\n      if (this.newKeyHolderRef) {\n        (this.newKeyHolderRef.$el as HTMLTextAreaElement).focus();\n      }\n      void navigator.clipboard.writeText(this.newKey);\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.copy-button {\n  cursor: pointer;\n}\n.p-inputText:enabled:focus {\n  box-shadow: none;\n}\n.apiKeyInfo .p-message-success {\n  background-color: var(--green-600);\n  border-color: var(--green-600);\n  color: white;\n}\n</style>\n","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"200\",\n  viewBox: \"0 0 353 494\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", {\n  fill: \"#e0dfde\",\n  d: \"M110 358v-21c-.02-11.94-2.41-8.93-17-17.6-12.76-7.59-24.62-16.78-34.99-27.4-20.94-21.45-35.07-48.89-41.66-78-1.41-6.23-3.27-16.75-3.35-23-.18-15.55-.62-29.64 2.45-45C25.72 94.64 59.17 51.21 107 29.31 170.13.4 248.42 15 295.91 66c13.79 14.8 24.61 32.25 32.09 51 5.63 14.12 10.98 34.81 11 50v22c-.05 31.76-16.49 68.7-36.26 93-11.72 14.41-24.99 25.77-40.74 35.58-3.81 2.37-17.34 8.86-18.98 11.63-1.22 2.08-1.02 5.41-1.02 7.79v21H110Zm111-35v-10c.07-10.1 2.1-7.8 16-14.75 12.75-6.38 26-15.06 35.99-25.25 19.64-20.04 38.97-61.6 39.01-90v-10c-.02-13.13-4.76-29.8-9.6-42-15.87-39.99-38.34-63.02-78.4-79-10.86-4.33-29.43-9.86-41-10h-12c-30.01.05-72.47 20.6-92.96 42-19.08 19.92-38 61.09-38.04 89v12c.1 7.87 2.69 18.36 4.86 26 6.77 23.89 21.31 51.34 40.14 67.71 8.99 7.82 21.29 15.27 32 20.53 3.52 1.73 14.27 5.5 15.98 8.15 1.58 2.46 1.02 12.27 1.02 15.61h87Zm-111 44h132v34H110v-34Zm0 43h132v35h-22l-.51 22.96c-.64 2.03-1.84 3.63-3.68 4.73-2.57 1.53-5.92 1.3-8.81 1.31h-62c-9.74-.02-12.93-1.68-13-12v-17h-22v-35Zm581-49\"\n}, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, _hoisted_3))\n}\nexport default { render: render }"],"names":["_sfc_main$4","defineComponent","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_12","_hoisted_13","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_hoisted_5","_createCommentVNode","_hoisted_8","_hoisted_11","_hoisted_14","_sfc_main$3","PrimeButton","PrimeDialog","UserRolesBadges","convertUnixTimeInMsToDateString","_createVNode","_component_PrimeDialog","$event","_withCtx","_component_PrimeButton","_createTextVNode","_normalizeClass","_toDisplayString","_sfc_main$2","Dropdown","Calendar","MS_PER_DAY","MAX_NUMBER_OF_DAYS_SELECTABLE_FOR_API_KEY_VALIDITY","event","calculateDaysFromNow","calculateExpiryDateAsDateString","assertDefined","newValue","_withScopeId","n","_pushScopeId","_popScopeId","_resolveComponent","_component_Dropdown","_component_Calendar","_sfc_main$1","_createBlock","_Transition","_withDirectives","_renderSlot","styles","classes","_ref","instance","props","_useStyle","useStyle","loadStyle","script$1","BaseComponent","script","style","render","openBlock","createElementBlock","mergeProps","_sfc_main","AuthenticationWrapper","TheContent","TheHeader","MiddleCenterDiv","BackButton","ApiKeyCard","CreateApiKeyCard","MessageComponent","PrimeTextarea","TheFooter","inject","ref","state","resolvedKeycloakPromise","apiKeyMetaInfoForUser","ApiClientProvider","_b","_a","_d","_c","error","keycloakPromiseGetter","daysValid","response","_imports_0","_component_AuthenticationWrapper","_component_TheHeader","_component_TheContent","_component_BackButton","_component_MiddleCenterDiv","_component_CreateApiKeyCard","_component_MessageComponent","_component_PrimeTextarea","args","_component_ApiKeyCard"],"mappings":"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","x_google_ignoreList":[4]}