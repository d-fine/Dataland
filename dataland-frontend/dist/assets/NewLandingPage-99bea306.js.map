{"version":3,"file":"NewLandingPage-99bea306.js","sources":["../../src/components/general/TheIntro.vue","../../src/components/general/TheBrands.vue","../../src/components/general/TheMission.vue","../../src/components/general/TheStruggle.vue","../../src/components/general/TheHowItWorks.vue","../../src/components/general/TheClaim.vue","../../src/components/general/TheCampaigns.vue","../../src/components/general/TheComeTogether.vue","../../src/components/pages/NewLandingPage.vue"],"sourcesContent":["<template>\n  <section v-if=\"introSection\" class=\"intro\" role=\"region\" aria-label=\"Introduction\">\n    <img\n      v-for=\"(img, index) in introSection.image\"\n      :key=\"index\"\n      :src=\"img\"\n      :alt=\"introSection.text.join(' ')\"\n      class=\"intro__img\"\n    />\n\n    <h1 class=\"intro__text\">\n      <template v-for=\"(part, index) in introSection.text\" :key=\"index\">\n        <span v-if=\"index === 0\">{{ part }}</span>\n        <template v-else>{{ part }}</template>\n      </template>\n    </h1>\n    <TheSearch v-if=\"introCard\" :icon=\"introCard.icon ?? ''\" :placeholderText=\"introCard.text\" />\n    <button class=\"intro__button\">START YOUR DATALAND JOURNEY</button>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\nimport TheSearch from \"./TheSearch.vue\";\n\nconst { sections } = defineProps<{ sections?: Section[] }>();\n\nconst introSection = computed(() => {\n  return sections?.find((section) => section.title === \"Intro\") || null;\n});\n\nconst introCard = computed(() => {\n  return introSection.value?.cards?.find((card) => card.icon && card.text) || null;\n});\n</script>\n\n<style scoped lang=\"scss\">\n.intro {\n  text-align: center;\n  margin: 120px auto;\n  max-width: 1007px;\n  &__img {\n    width: 81px;\n    height: auto;\n    margin-bottom: 42px;\n  }\n  &__text {\n    color: var(--grey-tones-400);\n    text-align: center;\n    font-size: 100px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 106px;\n    letter-spacing: 0.25px;\n    margin: 0;\n    transition:\n      font-size 0.4s ease,\n      line-height 0.4s ease;\n    span {\n      color: var(--basic-dark);\n    }\n  }\n  &__button {\n    padding: 14px 32px;\n    border-radius: 32px;\n    background-color: var(--primary-orange);\n    color: var(--default-neutral-white);\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 20px;\n    letter-spacing: 0.75px;\n    text-transform: uppercase;\n    border: 2px solid var(--primary-orange);\n    cursor: pointer;\n    margin-top: 64px; //spacing\n    &:hover {\n      background-color: var(--default-neutral-white);\n      color: var(--basic-dark);\n    }\n  }\n}\n@media only screen and (max-width: $large) {\n  .intro {\n    &__img {\n      margin-bottom: 31px;\n    }\n    &__text {\n      font-size: 64px;\n      line-height: 78px;\n      max-width: 750px;\n      margin: 0 auto;\n    }\n  }\n}\n</style>\n","<template>\n  <section v-if=\"brandsSection\" class=\"brands\" role=\"region\" aria-label=\"Brands Statement\">\n    <div class=\"brands__wrap\">\n      <h2 id=\"brands-heading\" aria-labelledby=\"brands-heading\" class=\"brands__text\">\n        {{ brandsSection.text[0] }}\n        <span>{{ brandsSection.text[1] }}</span>\n      </h2>\n      <!-- <component :is=\"brandSvg\" v-if=\"brandSvg\"></component> -->\n\n      <div class=\"brands__list\" role=\"list\">\n        <div class=\"brands__item\" v-for=\"(imgSrc, index) in brandsSection.image\" :key=\"index\" role=\"listitem\">\n          <img :src=\"imgSrc\" :alt=\"`Brand ${index + 1}`\" :class=\"`brands__item-image brands__item-image--${index}`\" />\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, type Ref } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\n\n// const brandSvg: Ref<string | null> = ref(null);\n// const brandSvg = await import(\"/src/assets/images/logos/brands_deka.svg\");\nconst { sections } = defineProps<{ sections?: Section[] }>();\n\nconst brandsSection = computed(() => {\n  return sections?.find((section) => section.title === \"Brands\") || null;\n});\n// onMounted(async () => {\n//   const svgModule = await import(\"/src/assets/images/logos/brands_deka.svg\");\n//   brandSvg.value = svgModule.default;\n// });\n</script>\n\n<style scoped lang=\"scss\">\n.brands {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 64px 0;\n  gap: 40px;\n\n  &__wrap {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  &__text {\n    max-width: 1060px;\n    padding: 0px 220px 0px 172px;\n    font-size: 64px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 78px; /* 121.875% */\n    text-align: left;\n    margin: 0 0 40px;\n    transition:\n      font-size 0.4s ease,\n      line-height 0.4s ease;\n    span {\n      color: var(--grey-tones-400);\n    }\n  }\n\n  &__list {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-evenly;\n    max-width: 1264px;\n\n    .brands__item {\n      width: 200px;\n      height: 124px;\n      padding: 16px;\n      background-color: var(--grey-tones-100);\n      border-radius: 16px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      &-image {\n        max-width: 200px;\n        height: auto;\n      }\n      &:hover {\n        background: #ffebe0;\n\n        .brands__item-image {\n          filter: invert(42%) sepia(68%) saturate(3014%) hue-rotate(8deg) brightness(103%) contrast(99%);\n        }\n      }\n    }\n  }\n}\n\n@media only screen and (max-width: $large) {\n  .brands {\n    &__text {\n      font-size: 48px;\n      max-width: 888px;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n    }\n  }\n}\n</style>\n","<template>\n  <section v-if=\"brandsSection\" class=\"mission\" role=\"region\" aria-label=\"Mission Statement\">\n    <div class=\"mission__wrapper\">\n      <h2 id=\"mission-heading\" aria-labelledby=\"mission-heading\">\n        <template v-for=\"(part, index) in brandsSection.text\" :key=\"index\">\n          <span v-if=\"index === 1\" role=\"emphasis\">{{ part }}</span>\n          <template v-else>{{ part }}</template>\n        </template>\n      </h2>\n      <div class=\"mission__tiles\" role=\"list\">\n        <div\n          v-for=\"(card, index) in brandsSection.cards\"\n          :key=\"index\"\n          class=\"mission__tile\"\n          :class=\"`mission__tile--type_${index + 1}`\"\n          role=\"listitem\"\n        >\n          <img :src=\"card.icon\" :alt=\"card.text\" class=\"mission__tile__icon\" />\n          <p class=\"mission__tile__text\">{{ card.text }}</p>\n        </div>\n      </div>\n      <router-link\n        to=\"/mission\"\n        class=\"mission__button mission__button--black\"\n        aria-label=\"Read More About Our Mission\"\n      >\n        OUR MISSION\n      </router-link>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\n\nconst { sections } = defineProps<{ sections?: Section[] }>();\n\nconst brandsSection = computed(() => {\n  return sections?.find((section) => section.title === \"Mission\") || null;\n});\n</script>\n\n<style scoped lang=\"scss\">\n.mission {\n  display: flex;\n  flex-direction: column;\n  padding: 120px 0;\n  align-items: center;\n  &__wrapper {\n    display: grid;\n    grid-template-columns: repeat(16, 1fr);\n    gap: 32px;\n    max-width: 1440px;\n    width: 100%;\n    padding: 0 32px;\n  }\n  h2 {\n    grid-column: 3 / 15;\n    font-size: 160px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 160px; /* 100% */\n    max-width: 1017px;\n    margin: 0;\n    transition:\n      font-size 0.4s ease,\n      line-height 0.4s ease;\n    span {\n      color: var(--primary-orange);\n    }\n  }\n\n  &__tiles {\n    grid-column: 2 / 16;\n    display: flex;\n    justify-content: center; // centers the tiles\n    gap: 32px;\n    width: 100%;\n  }\n\n  &__tile {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 528px;\n    padding-top: 80px;\n    background-color: var(--default-neutral-white);\n    border-radius: 16px;\n    gap: 32px;\n    transition:\n      background-color 0.3s ease,\n      border-radius 0.3s ease;\n    cursor: pointer;\n\n    &__icon {\n      width: 160px;\n    }\n    &__text {\n      font-size: 48px;\n      font-style: normal;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n      text-align: center;\n      max-width: 308px;\n      transition: color 0.3s ease;\n      .mission__tile:hover & {\n        color: var(--primary-orange);\n      }\n    }\n    &:hover {\n      background-color: #ffebe0;\n      border-radius: 32px;\n    }\n  }\n  &__button {\n    grid-column: span 16;\n    display: inline-block;\n    padding: 14px 32px;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 150% */\n    letter-spacing: 0.75px;\n    text-transform: uppercase;\n    border-radius: 32px;\n    text-align: center;\n    width: fit-content;\n    margin: 0 auto;\n    cursor: pointer;\n    text-decoration: none;\n    &--black {\n      background-color: var(--basic-dark);\n      border: 2px solid var(--basic-dark);\n      color: white;\n    }\n\n    &:hover {\n      background-color: transparent;\n      color: var(--basic-dark);\n    }\n  }\n}\n@media only screen and (max-width: $large) {\n  .mission {\n    h2 {\n      font-size: 100px;\n      font-weight: 700;\n      line-height: 106px; /* 106% */\n      letter-spacing: 0.25px;\n      max-width: 809px;\n    }\n    &__text {\n      font-size: 40px;\n      font-weight: 600;\n      line-height: 48px; /* 120% */\n      letter-spacing: 0.25px;\n    }\n  }\n}\n</style>\n","<template>\n  <section v-if=\"struggleSection\" class=\"struggle\" role=\"region\" aria-label=\"Struggle Statement\">\n    <div class=\"struggle__wrapper\">\n      <h2 id=\"struggle-heading\" aria-labelledby=\"struggle-heading\">{{ struggleSection.text[0] }}</h2>\n      <div class=\"struggle__grid\" role=\"list\">\n        <div v-for=\"(card, index) in struggleSection.cards\" :key=\"index\" class=\"struggle__cell\" role=\"listitem\">\n          <img :src=\"card.icon\" :alt=\"card.title\" class=\"struggle__cell__icon\" />\n          <h3 class=\"struggle__cell__title\">{{ card.title }}</h3>\n          <p class=\"struggle__cell__text\">{{ card.text }}</p>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\n\nconst { sections } = defineProps<{ sections?: Section[] }>();\n\nconst struggleSection = computed(() => {\n  return sections?.find((section) => section.title === \"Struggle\") || null;\n});\n</script>\n<style scoped lang=\"scss\">\n.struggle {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 120px 0;\n  background-color: var(--grey-tones-100);\n  gap: 68px;\n  &__wrapper {\n    display: grid;\n    grid-template-columns: repeat(16, 1fr);\n    gap: 32px;\n    max-width: 1440px;\n    width: 100%;\n    padding: 32px;\n  }\n  h2 {\n    grid-column: 4 / 14;\n    font-size: 64px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 78px; /* 121.875% */\n    margin: 0 0 68px;\n    text-align: left;\n    transition:\n      font-size 0.4s ease,\n      line-height 0.4s ease;\n  }\n\n  &__grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 48px 32px;\n    grid-column: 4 / 14;\n  }\n\n  &__cell {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    padding-right: 88px;\n\n    &__icon {\n      width: 48px;\n      height: 48px;\n      margin-bottom: 24px;\n    }\n\n    &__title {\n      font-size: 32px;\n      font-style: normal;\n      font-weight: 600;\n      line-height: 40px; /* 125% */\n      letter-spacing: 0.25px;\n\n      margin: 0 0 8px;\n    }\n\n    &__text {\n      font-size: 20px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 28px; /* 140% */\n      letter-spacing: 0.25px;\n      color: #5b5b5b;\n      text-align: left;\n      margin: 0;\n    }\n  }\n}\n\n@media only screen and (max-width: $large) {\n  .struggle {\n    h2 {\n      font-size: 48px;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n    }\n    &__cell {\n      &__icon {\n        width: 40px;\n        height: 40px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <section v-if=\"howItWorksSection\" class=\"howitworks\" role=\"region\" aria-labelledby=\"howitworks-heading\">\n    <div class=\"howitworks__wrapper\">\n      <h2 id=\"howitworks-heading\" class=\"howitworks__title\">\n        {{ sectionText }}\n      </h2>\n      <div ref=\"slider\" role=\"list\" class=\"howitworks__slides\" @pointerdown=\"dragStart\" @touchstart=\"dragStart\">\n        <div v-for=\"(slide, index) in slides\" :key=\"index\" role=\"listitem\" class=\"howitworks__slide\">\n          <h3 class=\"howitworks__slide-title\">{{ slide.title }}</h3>\n          <p class=\"howitworks__slide-text\">{{ slide.text }}</p>\n          <p class=\"howitworks__slide-index\">0{{ index + 1 }}</p>\n        </div>\n      </div>\n      <div class=\"howitworks__arrows\">\n        <button\n          @click=\"move(-1)\"\n          aria-label=\"Previous slide\"\n          class=\"howitworks__arrow howitworks__arrow--left\"\n        ></button>\n        <button @click=\"move(1)\" aria-label=\"Next slide\" class=\"howitworks__arrow howitworks__arrow--right\"></button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onUnmounted, watchEffect } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\n\nconst { sections } = defineProps<{ sections?: Section[] }>();\nconst howItWorksSection = computed(() => sections?.find((s) => s.title === \"How it works\"));\nconst sectionText = computed(() => howItWorksSection.value?.text.join(\" \") || \"\");\nconst slides = computed(() => sections?.find((s) => s.title === \"How it works\")?.cards || []);\nconst slider = ref<HTMLElement | null>(null);\nconst currentSlide = ref(0);\n\nlet isDragging = false;\nlet startPos = 0;\nlet currentTranslate = 0;\nlet prevTranslate = 0;\n\nconst setSliderPosition = (sliderElement: HTMLElement, animate = true): void => {\n  if (animate) sliderElement.style.transition = \"transform 0.3s ease-out\";\n  sliderElement.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;\n};\n\nconst move = (direction: number): void => {\n  const slideCount = slides.value.length;\n  if (direction === 1 && currentSlide.value < slideCount - 1) currentSlide.value++;\n  if (direction === -1 && currentSlide.value > 0) currentSlide.value--;\n\n  currentTranslate = currentSlide.value * -440;\n  if (slider.value) setSliderPosition(slider.value);\n};\n\nwatchEffect(() => {\n  const handleResize = (): void => {\n    if (window.innerWidth > 1800) {\n      currentSlide.value = 0;\n      currentTranslate = 0;\n      if (slider.value) setSliderPosition(slider.value);\n    }\n  };\n\n  window.addEventListener(\"resize\", handleResize);\n\n  onUnmounted(() => {\n    window.removeEventListener(\"resize\", handleResize);\n  });\n});\n\nconst dragStart = (e: PointerEvent | TouchEvent): void => {\n  // Disable dragging for window width greater than 1800px, for example\n  if (window.innerWidth > 1800) return;\n  isDragging = true;\n  startPos = \"touches\" in e ? e.touches[0].pageX : e.pageX;\n\n  prevTranslate = currentTranslate;\n\n  if (slider.value) {\n    slider.value.style.transition = \"none\";\n    slider.value.classList.add(\"isdragging\");\n  }\n\n  document.addEventListener(\"pointermove\", drag);\n  document.addEventListener(\"pointerup\", dragEnd);\n  document.addEventListener(\"touchmove\", drag);\n  document.addEventListener(\"touchend\", dragEnd);\n};\n\nconst drag = (e: PointerEvent | TouchEvent): void => {\n  if (!isDragging) return;\n  const currentPos = \"touches\" in e ? e.touches[0].pageX : e.pageX;\n\n  currentTranslate = prevTranslate + currentPos - startPos;\n\n  if (slider.value) {\n    setSliderPosition(slider.value, false);\n  }\n};\n\nconst dragEnd = (): void => {\n  isDragging = false;\n\n  const movedBy = currentTranslate - prevTranslate;\n  if (movedBy < -100 && currentSlide.value < slides.value.length - 1) currentSlide.value++;\n  if (movedBy > 100 && currentSlide.value > 0) currentSlide.value--;\n\n  // Set currentTranslate based on the new slide index\n  currentTranslate = currentSlide.value * -440;\n\n  if (slider.value) {\n    setSliderPosition(slider.value);\n    slider.value.classList.remove(\"isdragging\");\n  }\n\n  document.removeEventListener(\"pointermove\", drag);\n  document.removeEventListener(\"pointerup\", dragEnd);\n  document.removeEventListener(\"touchmove\", drag);\n  document.removeEventListener(\"touchend\", dragEnd);\n};\n\nonUnmounted(() => {\n  document.removeEventListener(\"pointermove\", drag);\n  document.removeEventListener(\"pointerup\", dragEnd);\n  document.removeEventListener(\"touchmove\", drag);\n  document.removeEventListener(\"touchend\", dragEnd);\n});\n</script>\n\n<style lang=\"scss\">\n.howitworks {\n  padding: 200px 0;\n  background-color: var(--primary-orange);\n  &__wrapper {\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 56px;\n  }\n  &__title {\n    font-size: 64px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 78px;\n    margin: 0;\n    max-width: 1273px;\n    padding-right: 789px;\n  }\n\n  &__slides {\n    display: flex;\n    transition: transform 0.3s ease-out;\n    gap: 32px;\n    justify-content: center;\n    &.isdragging .howitworks__slide {\n      cursor: grabbing;\n    }\n  }\n\n  &__slide {\n    flex: 0 0 408px;\n    border-radius: 16px;\n    display: flex;\n    padding: 64px 40px 32px 40px;\n    flex-direction: column;\n    background: #f6f6f6;\n    gap: 24px;\n    cursor: grab;\n\n    &-title {\n      font-size: 48px;\n      font-style: normal;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n      margin: 0;\n    }\n    &-text {\n      font-size: 20px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 28px; /* 140% */\n      letter-spacing: 0.25px;\n      color: #585858;\n    }\n    &-index {\n      margin: auto 0 0;\n      font-size: 48px;\n      font-style: normal;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n      color: #ff5c00;\n    }\n  }\n  &__arrows {\n    display: flex;\n    gap: 18px;\n    visibility: hidden;\n  }\n  &__arrow {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 2px solid rgba(203, 203, 203, 0.24);\n    background-color: #fff;\n    cursor: pointer;\n    &:hover {\n      border: 2px solid #585858;\n    }\n\n    &--left,\n    &--right {\n      &::before {\n        content: \"\";\n        display: block;\n        width: 24px;\n        height: 24px;\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='47' height='47' viewBox='0 0 47 47' fill='none'%3E%3Crect width='46' height='46' transform='translate(0.666992 0.315918)' fill='white' fill-opacity='0.01' style='mix-blend-mode:multiply'/%3E%3Cpath d='M26.542 8.94092L24.4864 10.9434L35.3826 21.8784H6.41699V24.7534H35.3826L24.4864 35.6396L26.542 37.6909L40.917 23.3159L26.542 8.94092Z' fill='%23161616'/%3E%3C/svg%3E\");\n        background-size: contain;\n        background-repeat: no-repeat;\n      }\n    }\n\n    &--left {\n      &::before {\n        transform: scaleX(-1);\n      }\n    }\n  }\n}\n@media (max-width: $extra-large) {\n  .howitworks {\n    &__slides {\n      max-width: 1273px;\n      padding-right: 789px;\n      justify-content: flex-start;\n    }\n    &__arrows {\n      visibility: visible;\n      width: 100%;\n      max-width: 1273px;\n      padding-right: 789px;\n      justify-content: flex-start;\n    }\n  }\n}\n@media only screen and (max-width: $large) {\n  .howitworks {\n    &__wrapper {\n      display: grid;\n      grid-template-columns: repeat(16, 1fr);\n      gap: 32px;\n      max-width: 1440px;\n      width: 100%;\n      padding: 0 32px;\n    }\n    &__title {\n      grid-column: 4 / 9;\n      font-size: 48px;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n      color: var(--default-neutral-white);\n      max-width: unset;\n      padding-right: unset;\n    }\n    &__slides,\n    &__arrows {\n      grid-column: 4 / 16;\n    }\n  }\n}\n</style>\n","<template>\n  <section v-if=\"claimSection\" class=\"claim\" role=\"region\" aria-label=\"Claim Statement\">\n    <div class=\"claim__wrapper\">\n      <h2 class=\"claim__title\">\n        <template v-for=\"(part, index) in claimSection.text\" :key=\"index\">\n          <span v-if=\"index === 1\" role=\"emphasis\">{{ part }}</span>\n          <template v-else>{{ part }}</template>\n        </template>\n      </h2>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\n\nconst { sections } = defineProps<{ sections?: Section[] }>();\n\nconst claimSection = computed(() => {\n  return sections?.find((section) => section.title === \"Claim\") ?? null;\n});\n</script>\n\n<style scoped lang=\"scss\">\n.claim {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &__wrapper {\n    display: grid;\n    grid-template-columns: repeat(16, 1fr);\n    gap: 32px;\n    max-width: 1440px;\n    width: 100%;\n    padding: 0 32px;\n    margin: 140px auto 21px;\n  }\n  h2 {\n    font-size: 160px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 160px; /* 100% */\n    grid-column: 3/15;\n    transition:\n      font-size 0.4s ease,\n      line-height 0.4s ease;\n    span {\n      color: var(--primary-orange);\n    }\n  }\n}\n@media only screen and (max-width: $large) {\n  .claim {\n    &__wrapper {\n      margin-bottom: 0;\n      h2 {\n        font-size: 100px;\n        font-style: normal;\n        font-weight: 700;\n        line-height: 106px; /* 106% */\n        letter-spacing: 0.25px;\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <section v-if=\"campaignSection\" class=\"campaigns\" role=\"region\" aria-labelledby=\"campaigns-heading\">\n    <div class=\"campaigns__wrapper\">\n      <h2 id=\"campaigns-heading\" class=\"campaigns__title\">\n        {{ campaignSection.text[0] }}\n        <span v-if=\"campaignSection.text[1]\"> {{ campaignSection.text[1] }}</span>\n      </h2>\n      <div class=\"campaigns__grid\" role=\"grid\" aria-labelledby=\"campaigns-heading\">\n        <div v-for=\"(card, index) in campaignSection.cards\" :key=\"index\" role=\"row\" class=\"campaigns__row\">\n          <div class=\"campaigns__cell campaigns__cell--icon\" role=\"gridcell\">\n            <img :src=\"card.icon\" :alt=\"card.title\" />\n            <span>{{ card.title }}</span>\n          </div>\n          <div role=\"gridcell\" class=\"campaigns__cell\">\n            Companies:&nbsp;&nbsp;<span>{{ card.text }}</span>\n          </div>\n          <div role=\"gridcell\" class=\"campaigns__cell\">\n            <div v-if=\"card.date && card.date !== 'Starting soon!'\">\n              Starting date: <span>{{ card.date }}</span>\n            </div>\n            <span v-else-if=\"card.date === 'Starting soon!'\">Starting soon!</span>\n          </div>\n          <div role=\"gridcell\" class=\"campaigns__cell\">\n            <button class=\"campaigns__button\">JOIN</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\n\nconst { sections } = defineProps<{ sections?: Section[] }>();\n\nconst campaignSection = computed(() => {\n  return sections?.find((section) => section.title === \"Campaigns\") || null;\n});\n</script>\n\n<style scoped lang=\"scss\">\n.campaigns {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 140px 0 200px;\n\n  &__wrapper {\n    display: grid;\n    grid-template-columns: repeat(16, 1fr);\n    gap: 80px 32px;\n    max-width: 1440px;\n    width: 100%;\n    padding: 0 32px;\n  }\n\n  &__title {\n    font-size: 64px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 78px;\n    grid-column: 4 / 10;\n    transition:\n      font-size 0.4s ease,\n      line-height 0.4s ease;\n    span {\n      color: var(--grey-tones-400);\n    }\n  }\n\n  &__grid {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    align-self: flex-end;\n    border-radius: 16px;\n    border: 1px solid rgba(192, 192, 192, 0.24);\n    background: rgba(255, 255, 255, 0.72);\n    /* Glass Effect */\n    box-shadow: 0px 4px 32px 0px rgba(0, 0, 0, 0.08);\n    backdrop-filter: blur(16px);\n    grid-column: 4 / 14;\n  }\n\n  &__row {\n    display: contents;\n  }\n\n  &__cell {\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    letter-spacing: 0.44px;\n    padding: 30px 24px 24px;\n    span {\n      font-weight: 700;\n    }\n    &:last-child:not(:last-of-type)::after {\n      content: \"\";\n      display: block;\n      position: absolute;\n      bottom: 0;\n      left: 24px; // same as left padding\n      right: 24px; // same as right padding\n      height: 1px;\n      background: #ccc;\n    }\n    &:last-child {\n      justify-content: flex-end;\n    }\n\n    &--icon {\n      font-size: 20px;\n\n      font-weight: 600;\n      line-height: 28px; /* 140% */\n      letter-spacing: 0.25px;\n      img {\n        width: 24px;\n        height: 24px;\n        margin-right: 16px;\n      }\n    }\n  }\n\n  &__button {\n    padding: 10px 24px;\n    border-radius: 32px;\n    background-color: var(--primary-orange);\n    color: var(--default-neutral-white);\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0.75px;\n    text-transform: uppercase;\n    border: 2px solid var(--primary-orange);\n    cursor: pointer;\n    &:hover {\n      background-color: var(--default-neutral-white);\n      color: var(--basic-dark);\n    }\n  }\n}\n@media only screen and (max-width: $large) {\n  .campaigns {\n    padding-top: 80px;\n    &__wrapper {\n      gap: 58px 32px;\n    }\n    &__title {\n      font-size: 48px;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n      grid-column: 4 / 12;\n      margin: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <section v-if=\"comeTogetherSection\" class=\"cometogether\" role=\"region\" aria-labelledby=\"cometogether-heading\">\n    <div class=\"cometogether__wrapper\">\n      <h2 id=\"cometogether-heading\" class=\"cometogether__title\">\n        {{ comeTogetherSection.text[0] }}\n        <span v-if=\"comeTogetherSection.text[1]\"> {{ comeTogetherSection.text[1] }}</span>\n      </h2>\n      <div class=\"cometogether__grid\" role=\"grid\" aria-labelledby=\"cometogether-heading\">\n        <div v-for=\"(card, index) in comeTogetherSection.cards\" :key=\"index\" role=\"row\" class=\"cometogether__row\">\n          <div class=\"cometogether__cell cometogether__cell--icon\" role=\"gridcell\">\n            <img :src=\"card.icon\" :alt=\"card.title\" />\n            <span>{{ card.title }}</span>\n          </div>\n          <div role=\"gridcell\" class=\"cometogether__cell\">\n            {{ card.text }}\n          </div>\n        </div>\n      </div>\n      <div class=\"cometogether__cta\">\n        {{ comeTogetherSection?.image?.[0] ?? \"\" }}\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { Section } from \"@/types/ContentTypes\";\n\nconst { sections } = defineProps<{ sections?: Section[] }>();\n\nconst comeTogetherSection = computed(() => {\n  return sections?.find((section) => section.title === \"Come together\") || null;\n});\n</script>\n\n<style scoped lang=\"scss\">\n.cometogether {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 140px 0 80px;\n  background-color: var(--basic-dark);\n\n  &__wrapper {\n    display: grid;\n    grid-template-columns: repeat(16, 1fr);\n    gap: 32px;\n    max-width: 1440px;\n    width: 100%;\n    padding: 0 32px;\n  }\n\n  &__title {\n    font-size: 64px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 78px;\n    text-align: left;\n    margin: 0;\n    color: var(--default-neutral-white);\n    grid-column: 4 / 11;\n    transition:\n      font-size 0.4s ease,\n      line-height 0.4s ease;\n    span {\n      color: var(--grey-tones-400);\n    }\n  }\n\n  &__grid {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    align-self: flex-end;\n    gap: 32px;\n    grid-column: 4 / 16;\n  }\n  &__row {\n    border: 1px solid rgba(244, 244, 244, 0.33);\n    background: #262626;\n    display: flex;\n    border-radius: 16px;\n    gap: 16px;\n    flex-direction: column;\n    padding: 46px 40px;\n    height: 369px;\n    max-width: 234px;\n  }\n  &__cell {\n    font-size: 20px;\n    color: var(--grey-tones-400);\n    font-style: normal;\n    font-weight: 400;\n    line-height: 28px; /* 140% */\n    letter-spacing: 0.25px;\n    &--icon {\n      color: var(--default-neutral-white);\n      font-size: 64px;\n      font-weight: 700;\n      line-height: 78px;\n      img {\n        display: block;\n        width: 48px;\n        margin-bottom: 16px;\n      }\n    }\n  }\n  &__cta {\n    font-size: 48px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 56px; /* 116.667% */\n    letter-spacing: 0.25px;\n    text-align: right;\n    color: var(--primary-orange);\n    grid-column: 4/16;\n  }\n}\n\n@media only screen and (max-width: $large) {\n  .cometogether {\n    &__title {\n      font-size: 48px;\n      font-weight: 600;\n      line-height: 56px; /* 116.667% */\n      letter-spacing: 0.25px;\n    }\n    &__row {\n      padding: 46px 24px;\n    }\n    &__cell {\n      &--icon {\n        font-size: 40px;\n        font-weight: 700;\n        line-height: 48px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <TheHeader :landingPage=\"landingPage\" :contentData=\"content\" />\n  <main role=\"main\">\n    <TheIntro :sections=\"landingPage?.sections\" />\n    <TheBrands :sections=\"landingPage?.sections\" />\n    <TheMission :sections=\"landingPage?.sections\" />\n    <TheStruggle :sections=\"landingPage?.sections\" />\n    <TheHowItWorks :sections=\"landingPage?.sections\" />\n    <TheClaim :sections=\"landingPage?.sections\" />\n    <TheCampaigns :sections=\"landingPage?.sections\" />\n    <TheComeTogether :sections=\"landingPage?.sections\" />\n  </main>\n  <TheFooter :sections=\"landingPage?.sections\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, watch, inject } from \"vue\";\nimport { useRoute, useRouter, type NavigationFailure } from \"vue-router\";\nimport { useDialog } from \"primevue/usedialog\";\nimport SessionDialog from \"@/components/general/SessionDialog.vue\";\nimport type Keycloak from \"keycloak-js\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\nimport { useSharedSessionStateStore } from \"@/stores/Stores\";\nimport { SessionDialogMode } from \"@/utils/SessionTimeoutUtils\";\n\nimport TheHeader from \"@/components/layout/TheHeader.vue\";\nimport TheIntro from \"@/components/general/TheIntro.vue\";\nimport TheBrands from \"@/components/general/TheBrands.vue\";\nimport TheMission from \"@/components/general/TheMission.vue\";\nimport TheStruggle from \"@/components/general/TheStruggle.vue\";\nimport TheHowItWorks from \"@/components/general/TheHowItWorks.vue\";\nimport TheClaim from \"@/components/general/TheClaim.vue\";\nimport TheCampaigns from \"@/components/general/TheCampaigns.vue\";\nimport TheComeTogether from \"@/components/general/TheComeTogether.vue\";\nimport TheFooter from \"@/components/layout/TheFooter.vue\";\n\n// Import the JSON content and types\nimport contentData from \"@/assets/content.json\";\nimport type { Content, Page } from \"@/types/ContentTypes\";\n\nconst content: Content = contentData;\nconst landingPage: Page | undefined = content.pages.find((page) => page.url === \"/lp\");\n\nconst dialog = useDialog();\nconst injectedAuthenticated = inject<boolean>(\"authenticated\");\nconst authenticated = ref(injectedAuthenticated);\nconst getKeycloakPromise = inject<() => Promise<Keycloak>>(\"getKeycloakPromise\");\nconst route = useRoute();\nconst router = useRouter();\nconst store = useSharedSessionStateStore();\nconst currentRefreshTokenInSharedStore = ref(store.refreshToken);\n\nonMounted(() => {\n  if (route.query.externalLogout === \"true\") {\n    openLogoutModal();\n  }\n  void checkAuthenticatedAndRedirectIfLoggedIn();\n});\n\nwatch(authenticated, () => {\n  void checkAuthenticatedAndRedirectIfLoggedIn();\n});\n\nwatch(currentRefreshTokenInSharedStore, () => {\n  void router.push({ path: \"/companies\", replace: true });\n});\n\nconst checkAuthenticatedAndRedirectIfLoggedIn = async (): Promise<void | NavigationFailure | undefined> => {\n  const keycloak = await assertDefined(getKeycloakPromise)();\n  if (keycloak.authenticated) {\n    return router.push({ path: \"/companies\", replace: true });\n  }\n  return Promise.resolve();\n};\n\nconst openLogoutModal = (): void => {\n  dialog.open(SessionDialog, {\n    props: {\n      modal: true,\n      dismissableMask: true,\n      showHeader: false,\n    },\n    data: {\n      sessionDialogMode: SessionDialogMode.ExternalLogout,\n    },\n    onClose: () => {\n      void router.replace(\"\");\n    },\n  });\n};\n</script>\n\n<style lang=\"scss\" scoped>\nmain {\n  margin-top: 132px;\n}\n</style>\n"],"names":["introSection","computed","sections","section","introCard","_b","_a","card","brandsSection","struggleSection","howItWorksSection","s","sectionText","slides","slider","ref","currentSlide","isDragging","startPos","currentTranslate","prevTranslate","setSliderPosition","sliderElement","animate","move","direction","slideCount","watchEffect","handleResize","onUnmounted","dragStart","e","drag","dragEnd","currentPos","movedBy","claimSection","campaignSection","comeTogetherSection","content","contentData","landingPage","page","dialog","useDialog","injectedAuthenticated","inject","authenticated","getKeycloakPromise","route","useRoute","router","useRouter","store","useSharedSessionStateStore","currentRefreshTokenInSharedStore","onMounted","openLogoutModal","checkAuthenticatedAndRedirectIfLoggedIn","watch","assertDefined","SessionDialog","SessionDialogMode"],"mappings":"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"}