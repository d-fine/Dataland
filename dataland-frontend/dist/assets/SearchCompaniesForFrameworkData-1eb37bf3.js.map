{"version":3,"file":"SearchCompaniesForFrameworkData-1eb37bf3.js","sources":["../../src/components/resources/frameworkDataSearch/RequestDataButton.vue","../../src/components/resources/frameworkDataSearch/FrameworkDataSearchResults.vue","../../src/components/resources/frameworkDataSearch/FrameworkDataSearchDropdownFilter.vue","../../src/components/resources/frameworkDataSearch/FrameworkDataSearchFilters.vue","../../src/utils/QueryParserUtils.ts","../../src/utils/ArrayUtils.ts","../../src/components/pages/SearchCompaniesForFrameworkData.vue"],"sourcesContent":["<template>\n  <router-link to=\"/requests\" class=\"no-underline\" data-test=\"requestDataButton\">\n    <PrimeButton class=\"uppercase p-button p-button-sm mr-3\">\n      <i class=\"material-icons\"> add_box </i>\n      <span class=\"d-letters pl-2\"> Request Data </span>\n    </PrimeButton>\n  </router-link>\n</template>\n\n<script lang=\"ts\">\nimport PrimeButton from \"primevue/button\";\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"RequestDataButton\",\n  components: { PrimeButton },\n});\n</script>\n","<template>\n  <div class=\"col-12 text-left\">\n    <DataTable\n      v-if=\"data && data.length > 0\"\n      ref=\"dataTable\"\n      :value=\"data\"\n      :paginator=\"true\"\n      :rows=\"rowsPerPage\"\n      paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\"\n      :alwaysShowPaginator=\"false\"\n      currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n      @update:first=\"firstUpdated\"\n      @row-click=\"goToData\"\n      class=\"table-cursor\"\n      id=\"search-result-framework-data\"\n      :rowHover=\"true\"\n    >\n      <Column\n        field=\"companyInformation.companyName\"\n        header=\"COMPANY\"\n        :sortable=\"true\"\n        class=\"d-bg-white w-3 d-datatable-column-left\"\n      >\n      </Column>\n      <Column field=\"companyInformation.permId\" :sortable=\"false\" class=\"d-bg-white w-2\">\n        <template #header>\n          <span class=\"uppercase\">PERM ID</span>\n          <i\n            class=\"material-icons pl-2\"\n            aria-hidden=\"true\"\n            title=\"Perm ID\"\n            v-tooltip.top=\"{\n              value:\n                'Permanent Identifier (PermID) is a machine readable identifier that provides a unique reference ' +\n                'for data items including organizations, instruments, funds, issuers and people. You can search and verify an id at permid.org/search',\n              class: 'd-tooltip',\n            }\"\n            >info</i\n          >\n        </template>\n        <template #body=\"{ data }\">\n          {{ data.permId ? data.permId : \"Not available\" }}\n        </template>\n      </Column>\n      <Column field=\"companyInformation.sector\" header=\"SECTOR\" :sortable=\"true\" class=\"d-bg-white w-2\" />\n      <Column field=\"companyInformation.headquarters\" header=\"LOCATION\" :sortable=\"true\" class=\"d-bg-white w-2\">\n        <template #body=\"{ data }\">\n          {{ data.companyInformation.headquarters }}, {{ data.companyInformation.countryCode }}\n        </template>\n      </Column>\n      <Column field=\"companyId\" header=\"\" class=\"d-bg-white w-1 d-datatable-column-right\">\n        <template #body>\n          <span class=\"text-primary no-underline font-bold\"><span> VIEW</span> <span class=\"ml-3\">></span> </span>\n        </template>\n      </Column>\n    </DataTable>\n    <div class=\"d-center-div text-center px-7 py-4\" v-else>\n      <p class=\"font-medium text-xl\">We're sorry, but your search did not return any results.</p>\n      <p class=\"font-medium text-xl\">\n        Please double-check the spelling and try again or request the data you are missing!\n      </p>\n      <RequestDataButton />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport DataTable from \"primevue/datatable\";\nimport Column from \"primevue/column\";\nimport Tooltip from \"primevue/tooltip\";\nimport {\n  type DataSearchStoredCompany,\n  getRouterLinkTargetFramework,\n} from \"@/utils/SearchCompaniesForFrameworkDataPageDataRequester\";\nimport { defineComponent } from \"vue\";\nimport RequestDataButton from \"@/components/resources/frameworkDataSearch/RequestDataButton.vue\";\n\nexport default defineComponent({\n  name: \"FrameworkDataSearchResults\",\n  components: { RequestDataButton, DataTable, Column },\n  directives: {\n    tooltip: Tooltip,\n  },\n  props: {\n    data: {\n      type: Object,\n      default: null,\n    },\n    rowsPerPage: {\n      type: Number,\n      default: null,\n    },\n  },\n  methods: {\n    /**\n     * Navigates to the view framework data page on a click on the row of the company\n     * @param event the row click event\n     * @param event.data the company the user clicked on\n     * @returns the promise of the router push action\n     */\n    goToData(event: { data: DataSearchStoredCompany }) {\n      return this.$router.push(getRouterLinkTargetFramework(event.data));\n    },\n    /**\n     * Resets the pagination of the dataTable\n     */\n    // The following method is used, the linter reports a false positive here\n    // eslint-disable-next-line vue/no-unused-properties\n    resetPagination() {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      if (this.$refs.dataTable) this.$refs.dataTable.resetPage();\n    },\n    /**\n     * Called when the id of the first row is updated (i.e. when the user navigates to the next page)\n     * Scrolls back to the top and propagates the event\n     * @param event the new number of the first row\n     */\n    firstUpdated(event: never) {\n      window.scrollTo(0, 0);\n      this.$emit(\"update:first\", event);\n    },\n  },\n});\n</script>\n\n<style>\n#search-result-framework-data tr:hover {\n  cursor: pointer;\n}\n\n#search-result-framework-data th {\n  background: white;\n}\n\n#search-result-framework-data .d-justify-content-end-inner > div {\n  justify-content: end;\n}\n</style>\n","<template>\n  <MultiSelect\n    v-model=\"selectedItemsBind\"\n    ref=\"multiselect\"\n    :options=\"availableItems\"\n    :filter=\"true\"\n    :showToggleAll=\"false\"\n    :filterPlaceholder=\"filterPlaceholder\"\n    panelClass=\"d-framework-data-search-dropdown\"\n    optionLabel=\"displayName\"\n    optionDisabled=\"disabled\"\n    @before-show=\"this.overlayVisible = true\"\n    @before-hide=\"this.overlayVisible = false\"\n  >\n    <template #dropdownicon>\n      <div :class=\"selectionButtonClasses\">\n        <div class=\"selection-button-content\" :id=\"filterId\">\n          <template v-if=\"this.modelValue.length === 1\">\n            {{ modelValue[0].displayName }}\n          </template>\n          <template v-else>{{ filterName }}</template>\n          <span v-if=\"this.modelValue.length > 0\" class=\"p-badge p-component p-badge-no-gutter ml-1 round\">\n            {{ modelValue.length }}</span\n          >\n          <svg class=\"ml-2\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"7\" xml:space=\"preserve\">\n            <polygon points=\"0,0 5,5 10,0\" fill=\"currentColor\" />\n          </svg>\n        </div>\n      </div>\n    </template>\n  </MultiSelect>\n</template>\n\n<script lang=\"ts\">\nimport MultiSelect from \"primevue/multiselect\";\nimport { defineComponent, ref } from \"vue\";\nimport { type SelectableItem } from \"@/utils/FrameworkDataSearchDropDownFilterTypes\";\n\nexport default defineComponent({\n  setup() {\n    return {\n      multiselect: ref(),\n    };\n  },\n  name: \"FrameworkDataSearchDropdownFilter\",\n  components: { MultiSelect },\n  emits: [\"update:modelValue\"],\n  props: {\n    availableItems: {\n      type: Array as () => Array<SelectableItem>,\n      default: () => [],\n    },\n    modelValue: {\n      type: Array as () => Array<SelectableItem>,\n      default: () => [],\n    },\n    filterName: {\n      type: String,\n      default: \"\",\n    },\n    filterId: {\n      type: String,\n      default: \"\",\n    },\n    filterPlaceholder: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      overlayVisible: false,\n    };\n  },\n  computed: {\n    selectionButtonClasses(): Array<string> {\n      const classes = [\"selection-button\", \"flex\", \"flex-row\", \"align-items-center\"];\n      if (this.overlayVisible) {\n        classes.push(\"overlayVisible\");\n      } else if (this.modelValue.length > 0) {\n        classes.push(\"filterActive\");\n      }\n      return classes;\n    },\n    selectedItemsBind: {\n      get(): Array<SelectableItem> {\n        return this.modelValue;\n      },\n      set(newValue: Array<SelectableItem>) {\n        this.$emit(\"update:modelValue\", newValue);\n      },\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.p-multiselect-label-container) {\n  display: none;\n}\n\n:deep(.p-badge) {\n  background: #fff;\n  color: #5a4f36;\n}\n\n:deep(.p-multiselect) {\n  background: none;\n  box-shadow: none;\n}\n\n:deep(.p-multiselect-trigger) {\n  width: auto;\n}\n\n:deep(.selection-button) {\n  background: white;\n  color: #5a4f36;\n  border: 2px solid #5a4f36;\n  border-radius: 8px;\n  height: 2.5rem;\n\n  .selection-button-content {\n    margin: 0.5rem 1rem;\n  }\n\n  &.overlayVisible {\n    background: #e0dfde;\n  }\n\n  &.filterActive {\n    background: #5a4f36;\n    color: white;\n  }\n}\n</style>\n","<template>\n  <div class=\"flex\">\n    <div class=\"flex flex-column\">\n      <span class=\"d-section-heading mb-2\" v-if=\"showHeading\">Filter by company</span>\n      <div>\n        <FrameworkDataSearchDropdownFilter\n          v-model=\"selectedSectorsInt\"\n          ref=\"sectorFilter\"\n          :available-items=\"availableSectors\"\n          filter-name=\"Sector\"\n          filter-id=\"sector-filter\"\n          filter-placeholder=\"Search sectors\"\n        />\n        <FrameworkDataSearchDropdownFilter\n          v-model=\"selectedCountriesInt\"\n          ref=\"countryFilter\"\n          :available-items=\"availableCountries\"\n          filter-name=\"Country\"\n          filter-id=\"country-filter\"\n          filter-placeholder=\"Search countries\"\n          class=\"ml-3\"\n        />\n      </div>\n    </div>\n    <div class=\"flex flex-column ml-3\">\n      <span class=\"d-section-heading mb-2\" v-if=\"showHeading\">Filter by data</span>\n      <div class=\"flex flex-row align-items-center\">\n        <div class=\"d-separator-left\" />\n        <FrameworkDataSearchDropdownFilter\n          v-model=\"selectedFrameworksInt\"\n          ref=\"frameworkFilter\"\n          :available-items=\"availableFrameworks\"\n          filter-name=\"Framework\"\n          filter-id=\"framework-filter\"\n          filter-placeholder=\"Search frameworks\"\n          class=\"ml-3\"\n        />\n        <div class=\"d-separator-left ml-3\" />\n        <span class=\"ml-3 cursor-pointer text-primary font-semibold d-letters\" @click=\"resetFilters\">RESET</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.d-section-heading {\n  text-align: left;\n  font-size: 0.75rem;\n  color: #5a4f36;\n}\n\n.d-separator-left {\n  height: 2rem;\n  border-left: 1px solid #5a4f36;\n}\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref } from \"vue\";\nimport type Keycloak from \"keycloak-js\";\nimport { ApiClientProvider } from \"@/services/ApiClients\";\nimport { getCountryNameFromCountryCode } from \"@/utils/CountryCodeConverter\";\nimport FrameworkDataSearchDropdownFilter from \"@/components/resources/frameworkDataSearch/FrameworkDataSearchDropdownFilter.vue\";\nimport { type DataTypeEnum } from \"@clients/backend\";\nimport { humanizeStringOrNumber } from \"@/utils/StringHumanizer\";\nimport { assertDefined } from \"@/utils/TypeScriptUtils\";\nimport { ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE } from \"@/utils/Constants\";\nimport {\n  type CountryCodeSelectableItem,\n  type FrameworkSelectableItem,\n  type SelectableItem,\n} from \"@/utils/FrameworkDataSearchDropDownFilterTypes\";\n\nexport default defineComponent({\n  name: \"FrameworkDataSearchFilters\",\n  components: { FrameworkDataSearchDropdownFilter },\n  emits: [\"update:selectedCountryCodes\", \"update:selectedFrameworks\", \"update:selectedSectors\"],\n  setup() {\n    return {\n      sectorFilter: ref(),\n      countryFilter: ref(),\n      frameworkFilter: ref(),\n      getKeycloakPromise: inject<() => Promise<Keycloak>>(\"getKeycloakPromise\"),\n    };\n  },\n  props: {\n    selectedFrameworks: {\n      type: Array as () => Array<DataTypeEnum>,\n      default: () => [],\n    },\n    selectedSectors: {\n      type: Array as () => Array<string>,\n      default: () => [],\n    },\n    selectedCountryCodes: {\n      type: Array as () => Array<string>,\n      default: () => [],\n    },\n    showHeading: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      availableCountries: [] as Array<CountryCodeSelectableItem>,\n      availableFrameworks: [] as Array<FrameworkSelectableItem>,\n      availableSectors: [] as Array<SelectableItem>,\n    };\n  },\n  computed: {\n    selectedCountriesInt: {\n      get(): Array<CountryCodeSelectableItem> {\n        return this.availableCountries.filter((countryCodeSelectableItem) =>\n          this.selectedCountryCodes.includes(countryCodeSelectableItem.countryCode),\n        );\n      },\n      set(newValue: Array<CountryCodeSelectableItem>) {\n        this.$emit(\n          \"update:selectedCountryCodes\",\n          newValue.map((countryCodeSelectableItem) => countryCodeSelectableItem.countryCode),\n        );\n      },\n    },\n    selectedFrameworksInt: {\n      get(): Array<FrameworkSelectableItem> {\n        return this.availableFrameworks.filter((frameworkSelectableItem) =>\n          this.selectedFrameworks.includes(frameworkSelectableItem.frameworkDataType),\n        );\n      },\n      set(newValue: Array<FrameworkSelectableItem>) {\n        this.$emit(\n          \"update:selectedFrameworks\",\n          newValue.map((frameworkSelectableItem) => frameworkSelectableItem.frameworkDataType),\n        );\n      },\n    },\n    selectedSectorsInt: {\n      get(): Array<SelectableItem> {\n        return this.availableSectors.filter((selectableItem) =>\n          this.selectedSectors.includes(selectableItem.displayName),\n        );\n      },\n      set(newValue: Array<SelectableItem>) {\n        this.$emit(\n          \"update:selectedSectors\",\n          newValue.map((selectableItem) => selectableItem.displayName),\n        );\n      },\n    },\n  },\n  methods: {\n    /**\n     * Resets all the filters to their default values (i.e. select all frameworks but no countries / sectors)\n     */\n    resetFilters() {\n      this.selectedFrameworksInt = this.availableFrameworks.filter((it) => !it.disabled);\n      this.selectedCountriesInt = [];\n      this.selectedSectorsInt = [];\n    },\n    /**\n     * A helper function that closes all the dropdown filters\n     */\n    // The following method is used, the linter reports a false positive here\n    // eslint-disable-next-line vue/no-unused-properties\n    closeAllOpenDropDowns() {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      this.countryFilter?.$refs.multiselect.hide();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      this.sectorFilter?.$refs.multiselect.hide();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      this.frameworkFilter?.$refs.multiselect.hide();\n    },\n    /**\n     * Uses the Dataland API to obtain available company search filters and fills in the\n     * availableCountries and availableSectors elements in the format expected by the dropdown filters\n     */\n    async retrieveCountryAndSectorFilterOptions() {\n      const companyDataControllerApi = await new ApiClientProvider(\n        assertDefined(this.getKeycloakPromise)(),\n      ).getCompanyDataControllerApi();\n\n      const availableSearchFilters = await companyDataControllerApi.getAvailableCompanySearchFilters();\n      this.availableCountries = [...(availableSearchFilters.data.countryCodes ?? [])].map((countryCode) => {\n        return {\n          countryCode: countryCode,\n          displayName: getCountryNameFromCountryCode(countryCode),\n          disabled: false,\n        };\n      });\n      this.availableSectors = [...(availableSearchFilters.data.sectors ?? [])].map((sector) => {\n        return { displayName: sector, disabled: false };\n      });\n    },\n    /**\n     * Populates the availableFrameworks property in the format expected by the dropdown filter\n     */\n    retrieveAvailableFrameworks() {\n      this.availableFrameworks = ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE.map((dataTypeEnum) => {\n        return {\n          frameworkDataType: dataTypeEnum,\n          displayName: humanizeStringOrNumber(dataTypeEnum),\n          disabled: false,\n        };\n      });\n    },\n    /**\n     * Initializes the availableCountries, availableSectors and available Frameworks properties for the dropdown filters\n     * @returns a promise as this function needs to request the Dataland api\n     */\n    async retrieveAvailableFilterOptions() {\n      this.retrieveAvailableFrameworks();\n      return this.retrieveCountryAndSectorFilterOptions();\n    },\n  },\n  mounted() {\n    void this.retrieveAvailableFilterOptions();\n  },\n});\n</script>\n","import { type LocationQueryValue } from \"vue-router\";\n\n/**\n * Query parameters can be either a string value or an array of strings if the parameter is specified multiple times.\n * This helper function converts both to a (possibly empty) string array\n * @param queryParam the query parameter of the vue router to convert\n * @returns the query parameter converted to an array of strings\n */\nexport function parseQueryParamArray(queryParam: LocationQueryValue | LocationQueryValue[]): string[] {\n  if (typeof queryParam === \"string\" && queryParam !== \"\") {\n    return [queryParam];\n  } else if (Array.isArray(queryParam)) {\n    return queryParam as string[];\n  } else {\n    return [];\n  }\n}\n","/**\n * Checks if two arrays have the same unique values\n * @param a the first array\n * @param b the second array\n * @returns true iff the two arrays contain the same unique values\n */\nexport function arraySetEquals<T>(a: Array<T>, b: Array<T>): boolean {\n  const aSet = new Set([...a]);\n  const bSet = new Set([...b]);\n  if (aSet.size !== bSet.size) return false;\n  return [...aSet].every((element) => bSet.has(element));\n}\n","<template>\n  <AuthenticationWrapper>\n    <TheHeader />\n    <DatasetsTabMenu :initial-tab-index=\"0\">\n      <TheContent class=\"min-h-screen paper-section relative\">\n        <div\n          id=\"searchBarAndFiltersContainer\"\n          class=\"w-full bg-white pt-4\"\n          :class=\"[pageScrolled && searchBarToggled ? ['d-search-toggle', 'fixed'] : '']\"\n          ref=\"searchBarAndFiltersContainer\"\n        >\n          <FrameworkDataSearchBar\n            id=\"frameworkDataSearchBar\"\n            ref=\"frameworkDataSearchBar\"\n            class=\"pl-4 m-0\"\n            v-model=\"currentSearchBarInput\"\n            :filter=\"currentCombinedFilter\"\n            :searchBarId=\"searchBarId\"\n            :emit-search-results-array=\"true\"\n            @search-confirmed=\"handleSearchConfirmed\"\n            @companies-received=\"handleCompanyQuery\"\n          />\n\n          <div\n            id=\"searchFiltersPanel\"\n            class=\"flex justify-content-between align-items-center d-search-filters-panel pl-4 pr-4\"\n            :class=\"[pageScrolled && !searchBarToggled ? ['d-search-toggle', 'fixed', 'w-full', 'bg-white'] : '']\"\n          >\n            <div class=\"flex\" id=\"searchFiltersContainer\">\n              <div\n                id=\"scrolledSearchToggler\"\n                :class=\"[pageScrolled && !searchBarToggled ? ['flex', 'align-items-center'] : 'hidden']\"\n              >\n                <span class=\"mr-3 font-semibold\">Search Data for Companies</span>\n                <PrimeButton\n                  name=\"search_bar_collapse\"\n                  icon=\"pi pi-search\"\n                  class=\"p-button-rounded surface-ground border-none m-2\"\n                  @click=\"toggleSearchBar\"\n                >\n                  <i class=\"pi pi-search\" aria-hidden=\"true\" style=\"z-index: 20; color: #958d7c\" />\n                </PrimeButton>\n              </div>\n\n              <FrameworkDataSearchFilters\n                id=\"frameworkDataSearchFilters\"\n                class=\"ml-3\"\n                ref=\"frameworkDataSearchFilters\"\n                :show-heading=\"!pageScrolled || searchBarToggled\"\n                v-model:selected-country-codes=\"currentFilteredCountryCodes\"\n                v-model:selected-frameworks=\"currentFilteredFrameworks\"\n                v-model:selected-sectors=\"currentFilteredSectors\"\n              />\n            </div>\n\n            <div v-if=\"!pageScrolled\" id=\"createButtonAndPageTitle\" class=\"flex align-content-end align-items-center\">\n              <RequestDataButton />\n              <NewDatasetButton v-if=\"hasUserUploaderRights\" />\n              <span>{{ currentlyVisiblePageText }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div v-if=\"waitingForSearchResults\" class=\"d-center-div text-center px-7 py-4\">\n          <p class=\"font-medium text-xl\">Loading...</p>\n          <i class=\"pi pi-spinner pi-spin\" aria-hidden=\"true\" style=\"z-index: 20; color: #e67f3f\" />\n        </div>\n\n        <FrameworkDataSearchResults\n          v-if=\"!waitingForSearchResults\"\n          ref=\"searchResults\"\n          :rows-per-page=\"rowsPerPage\"\n          :data=\"resultsArray\"\n          @update:first=\"setFirstShownRow\"\n        />\n      </TheContent>\n    </DatasetsTabMenu>\n    <TheFooter />\n  </AuthenticationWrapper>\n</template>\n\n<script lang=\"ts\">\nimport AuthenticationWrapper from \"@/components/wrapper/AuthenticationWrapper.vue\";\nimport TheHeader from \"@/components/generics/TheHeader.vue\";\nimport TheContent from \"@/components/generics/TheContent.vue\";\nimport {\n  type FrameworkDataSearchFilterInterface,\n  type DataSearchStoredCompany,\n} from \"@/utils/SearchCompaniesForFrameworkDataPageDataRequester\";\nimport FrameworkDataSearchBar from \"@/components/resources/frameworkDataSearch/FrameworkDataSearchBar.vue\";\nimport PrimeButton from \"primevue/button\";\nimport FrameworkDataSearchResults from \"@/components/resources/frameworkDataSearch/FrameworkDataSearchResults.vue\";\nimport { type RouteLocationNormalizedLoaded, useRoute } from \"vue-router\";\nimport { defineComponent, inject, ref } from \"vue\";\nimport { type DataTypeEnum } from \"@clients/backend\";\nimport FrameworkDataSearchFilters from \"@/components/resources/frameworkDataSearch/FrameworkDataSearchFilters.vue\";\nimport { parseQueryParamArray } from \"@/utils/QueryParserUtils\";\nimport { arraySetEquals } from \"@/utils/ArrayUtils\";\nimport { ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE } from \"@/utils/Constants\";\nimport TheFooter from \"@/components/general/TheFooter.vue\";\nimport { useFrameworkFiltersStore } from \"@/stores/Stores\";\nimport type Keycloak from \"keycloak-js\";\nimport RequestDataButton from \"@/components/resources/frameworkDataSearch/RequestDataButton.vue\";\nimport { checkIfUserHasRole, KEYCLOAK_ROLE_UPLOADER } from \"@/utils/KeycloakUtils\";\nimport DatasetsTabMenu from \"@/components/general/DatasetsTabMenu.vue\";\nimport NewDatasetButton from \"@/components/general/NewDatasetButton.vue\";\n\nexport default defineComponent({\n  setup() {\n    return {\n      searchBarAndFiltersContainer: ref<Element>(),\n      frameworkDataSearchBar: ref<typeof FrameworkDataSearchBar>(),\n      frameworkDataSearchFilters: ref<typeof FrameworkDataSearchFilters>(),\n      searchResults: ref(),\n      getKeycloakPromise: inject<() => Promise<Keycloak>>(\"getKeycloakPromise\"),\n    };\n  },\n  name: \"SearchCompaniesForFrameworkData\",\n  components: {\n    NewDatasetButton,\n    RequestDataButton,\n    DatasetsTabMenu,\n    FrameworkDataSearchFilters,\n    AuthenticationWrapper,\n    TheHeader,\n    TheContent,\n    FrameworkDataSearchBar,\n    PrimeButton,\n    FrameworkDataSearchResults,\n    TheFooter,\n  },\n  created() {\n    window.addEventListener(\"scroll\", this.windowScrollHandler);\n    checkIfUserHasRole(KEYCLOAK_ROLE_UPLOADER, this.getKeycloakPromise)\n      .then((hasUserUploaderRights) => {\n        this.hasUserUploaderRights = hasUserUploaderRights;\n      })\n      .catch((error) => console.log(error));\n    this.scanQueryParams(this.route);\n  },\n  data() {\n    return {\n      frameworkFilters: useFrameworkFiltersStore(),\n      searchBarToggled: false,\n      pageScrolled: false,\n      route: useRoute(),\n      resultsArray: [] as Array<DataSearchStoredCompany>,\n      latestScrollPosition: 0,\n      currentSearchBarInput: \"\",\n      currentFilteredFrameworks: ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE,\n      currentFilteredCountryCodes: [] as Array<string>,\n      currentFilteredSectors: [] as Array<string>,\n      currentCombinedFilter: <FrameworkDataSearchFilterInterface>{\n        companyNameFilter: \"\",\n        frameworkFilter: [],\n        sectorFilter: [],\n        countryCodeFilter: [],\n      },\n      scrollEmittedByToggleSearchBar: false,\n      hiddenSearchBarHeight: 0,\n      searchBarId: \"search_bar_top\",\n      indexOfFirstShownRow: 0,\n      rowsPerPage: 100,\n      waitingForSearchResults: true,\n      windowScrollHandler: (): void => {\n        this.handleScroll();\n      },\n      hasUserUploaderRights: null as null | boolean,\n    };\n  },\n  beforeRouteUpdate(to: RouteLocationNormalizedLoaded) {\n    this.scanQueryParams(to);\n  },\n  watch: {\n    currentFilteredFrameworks: {\n      handler() {\n        this.updateCombinedFilterIfRequired();\n      },\n      deep: true,\n    },\n    currentFilteredCountryCodes: {\n      handler() {\n        this.updateCombinedFilterIfRequired();\n      },\n      deep: true,\n    },\n    currentFilteredSectors: {\n      handler() {\n        this.updateCombinedFilterIfRequired();\n      },\n      deep: true,\n    },\n  },\n  computed: {\n    currentlyVisiblePageText(): string {\n      const totalSearchResults = this.resultsArray.length;\n\n      if (!this.waitingForSearchResults) {\n        if (totalSearchResults === 0) {\n          return \"No results\";\n        } else {\n          const startIndex = this.indexOfFirstShownRow;\n          const endIndex =\n            startIndex + (this.rowsPerPage - 1) >= totalSearchResults\n              ? totalSearchResults - 1\n              : startIndex + (this.rowsPerPage - 1);\n          return `${startIndex + 1}-${endIndex + 1} of ${totalSearchResults} results`;\n        }\n      } else {\n        return \"loading...\";\n      }\n    },\n  },\n  methods: {\n    /**\n     * Updates the local variable indicating which row of the datatable is currently displayed at the top\n     * @param value the index of the new row displayed on top\n     */\n    setFirstShownRow(value: number) {\n      this.indexOfFirstShownRow = value;\n    },\n    /**\n     * Called when the window is scrolled.\n     * Handles the collapsing / uncollapsing of the search bar depending on the scroll position\n     */\n    handleScroll() {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      this.frameworkDataSearchBar?.$refs.autocomplete.hide();\n      const windowScrollY = window.scrollY;\n      if (this.scrollEmittedByToggleSearchBar) {\n        this.scrollEmittedByToggleSearchBar = false;\n      } else {\n        if (this.searchBarToggled) {\n          this.searchBarToggled = false;\n          this.searchBarId = \"search_bar_top\";\n          window.scrollBy(0, this.hiddenSearchBarHeight);\n        }\n        if (this.latestScrollPosition > windowScrollY) {\n          //ScrollUP event\n          this.latestScrollPosition = windowScrollY;\n          this.pageScrolled = document.documentElement.scrollTop >= 60;\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          this.frameworkDataSearchFilters?.closeAllOpenDropDowns();\n        } else {\n          //ScrollDOWN event\n          this.latestScrollPosition = windowScrollY;\n          this.pageScrolled = document.documentElement.scrollTop > 152;\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n          this.frameworkDataSearchFilters?.closeAllOpenDropDowns();\n        }\n      }\n    },\n    /**\n     * Parses the framework filter query parameters.\n     * @param route the current route\n     * @returns an array of framework filters from the URL or an array of all frameworks if no filter is defined\n     */\n    getQueryFrameworks(route: RouteLocationNormalizedLoaded): Array<DataTypeEnum> {\n      const queryFrameworks = route.query.framework;\n      if (queryFrameworks !== undefined) {\n        const allowedDataTypeEnumValues = ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE as Array<string>;\n        return parseQueryParamArray(queryFrameworks).filter((singleFrameworkInQueryParam) =>\n          allowedDataTypeEnumValues.includes(singleFrameworkInQueryParam),\n        ) as Array<DataTypeEnum>;\n      } else {\n        return ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE;\n      }\n    },\n    /**\n     * Parses the country-code query parameters.\n     * @param route the current route\n     * @returns an array of country codes to filter by or an empty array of no filter is present\n     */\n    getQueryCountryCodes(route: RouteLocationNormalizedLoaded): Array<string> {\n      const queryCountryCodes = route.query.countryCode;\n      if (queryCountryCodes) {\n        return parseQueryParamArray(queryCountryCodes);\n      }\n      return [];\n    },\n    /**\n     * Parses the sector-filter query parameters.\n     * @param route the current route\n     * @returns an array of sectors to filter by or an empty array of no filter is present\n     */\n    getQuerySectors(route: RouteLocationNormalizedLoaded): Array<string> {\n      const querySectors = route.query.sector;\n      if (querySectors) {\n        return parseQueryParamArray(querySectors);\n      }\n      return [];\n    },\n    /**\n     * Parses the search term query parameter\n     * @param route the current route\n     * @returns the parsed search term query parameter or an empty string if non-existent\n     */\n    getQueryInput(route: RouteLocationNormalizedLoaded): string {\n      const queryInput = route.query.input as string;\n      if (queryInput) {\n        return queryInput;\n      }\n      return \"\";\n    },\n    /**\n     * Updates the combined filter object if any of the local filters no longer match the combined filter object.\n     * An update of the combined filter object automatically triggers a new search.\n     */\n    updateCombinedFilterIfRequired() {\n      this.frameworkFilters.setSelectedFiltersForFrameworks(this.currentFilteredFrameworks);\n      if (\n        !arraySetEquals(this.currentFilteredFrameworks, this.currentCombinedFilter.frameworkFilter) ||\n        !arraySetEquals(this.currentFilteredSectors, this.currentCombinedFilter.sectorFilter) ||\n        !arraySetEquals(this.currentFilteredCountryCodes, this.currentCombinedFilter.countryCodeFilter) ||\n        this.currentSearchBarInput !== this.currentCombinedFilter.companyNameFilter\n      ) {\n        this.waitingForSearchResults = true;\n        this.currentCombinedFilter = {\n          sectorFilter: this.currentFilteredSectors,\n          frameworkFilter: this.currentFilteredFrameworks,\n          companyNameFilter: this.currentSearchBarInput,\n          countryCodeFilter: this.currentFilteredCountryCodes,\n        };\n      }\n    },\n    /**\n     * Reads the query parameters of the framework-, country-code-, sector- and name- filters and\n     * udpates the corresponding local variables accordingly\n     * @param route the current vue route\n     */\n    scanQueryParams(route: RouteLocationNormalizedLoaded) {\n      const queryFrameworks = this.getQueryFrameworks(route);\n      const queryCountryCodes = this.getQueryCountryCodes(route);\n      const querySectors = this.getQuerySectors(route);\n      const queryInput = this.getQueryInput(route);\n\n      if (\n        !arraySetEquals(this.currentFilteredFrameworks, queryFrameworks) ||\n        !arraySetEquals(this.currentFilteredCountryCodes, queryCountryCodes) ||\n        !arraySetEquals(this.currentFilteredSectors, querySectors) ||\n        this.currentSearchBarInput !== queryInput\n      ) {\n        this.currentFilteredFrameworks = queryFrameworks;\n        this.currentFilteredCountryCodes = queryCountryCodes;\n        this.currentFilteredSectors = querySectors;\n        this.currentSearchBarInput = queryInput;\n      }\n    },\n    /**\n     * Called when the new search results are received from the framework search bar. Disables the waiting indicator,\n     * resets the pagination and updates the datatable. Also updates the query parameters to reflect the new search parameters\n     * @param companiesReceived the received companies\n     * @returns the promise of the router push with the new query parameters\n     */\n    handleCompanyQuery(companiesReceived: Array<DataSearchStoredCompany>) {\n      this.resultsArray = companiesReceived;\n      this.setFirstShownRow(0);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n      this.searchResults?.resetPagination();\n      this.waitingForSearchResults = false;\n      this.searchBarToggled = false;\n\n      const queryInput = this.currentSearchBarInput == \"\" ? undefined : this.currentSearchBarInput;\n\n      const allFrameworksSelected = ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE.every((frameworkAsDataTypeEnum) =>\n        this.currentFilteredFrameworks.includes(frameworkAsDataTypeEnum),\n      );\n      let queryFrameworks: DataTypeEnum[] | undefined | null = this.currentFilteredFrameworks;\n      if (allFrameworksSelected) queryFrameworks = undefined;\n      if (this.currentFilteredFrameworks.length == 0) queryFrameworks = null;\n\n      const queryCountryCodes =\n        this.currentFilteredCountryCodes.length == 0 ? undefined : this.currentFilteredCountryCodes;\n\n      const querySectors = this.currentFilteredSectors.length == 0 ? undefined : this.currentFilteredSectors;\n      return this.$router.push({\n        name: \"Search Companies for Framework Data\",\n        query: {\n          input: queryInput,\n          framework: queryFrameworks,\n          countryCode: queryCountryCodes,\n          sector: querySectors,\n        },\n      });\n    },\n    /**\n     * Called when the user performed a company search. Updates the search bar contents and\n     * displays the waiting indicator\n     * @param companyNameFilter the new search filter\n     */\n    handleSearchConfirmed(companyNameFilter: string) {\n      this.waitingForSearchResults = true;\n      this.currentSearchBarInput = companyNameFilter;\n    },\n    /**\n     * Expands the searchbar that got collapsed when the user scrolled down\n     */\n    async toggleSearchBar() {\n      this.searchBarToggled = true;\n      this.scrollEmittedByToggleSearchBar = true;\n      if (this.searchBarAndFiltersContainer) {\n        this.hiddenSearchBarHeight = this.searchBarAndFiltersContainer.clientHeight;\n      }\n      window.scrollBy(0, -this.hiddenSearchBarHeight);\n      await this.$nextTick();\n      this.searchBarId = \"search_bar_scrolled\";\n    },\n  },\n  unmounted() {\n    window.removeEventListener(\"scroll\", this.windowScrollHandler);\n  },\n});\n</script>\n\n<style scoped>\n.d-search-toggle {\n  z-index: 99;\n  top: 4rem;\n}\n.d-search-filters-panel {\n  height: 5rem;\n}\n</style>\n"],"names":["_sfc_main$4","defineComponent","PrimeButton","_resolveComponent","_openBlock","_createBlock","_component_router_link","_withCtx","_createVNode","_component_PrimeButton","_hoisted_1","_sfc_main$3","RequestDataButton","DataTable","Column","Tooltip","event","getRouterLinkTargetFramework","_hoisted_2","_createElementVNode","_hoisted_3","_createTextVNode","_hoisted_5","_directive_tooltip","_resolveDirective","_createElementBlock","_ctx","_component_DataTable","_component_Column","_hoisted_6","_hoisted_7","_sfc_main$2","ref","MultiSelect","classes","newValue","_withScopeId","_cache","$event","_normalizeClass","_toDisplayString","_Fragment","_createCommentVNode","_sfc_main$1","FrameworkDataSearchDropdownFilter","inject","countryCodeSelectableItem","frameworkSelectableItem","selectableItem","it","_a","_b","_c","availableSearchFilters","ApiClientProvider","assertDefined","countryCode","getCountryNameFromCountryCode","sector","ARRAY_OF_FRAMEWORKS_WITH_VIEW_PAGE","dataTypeEnum","humanizeStringOrNumber","n","_pushScopeId","_popScopeId","_component_FrameworkDataSearchDropdownFilter","_hoisted_4","_hoisted_8","args","parseQueryParamArray","queryParam","arraySetEquals","a","b","aSet","bSet","element","_sfc_main","NewDatasetButton","DatasetsTabMenu","FrameworkDataSearchFilters","AuthenticationWrapper","TheHeader","TheContent","FrameworkDataSearchBar","FrameworkDataSearchResults","TheFooter","checkIfUserHasRole","KEYCLOAK_ROLE_UPLOADER","hasUserUploaderRights","error","useFrameworkFiltersStore","useRoute","to","totalSearchResults","startIndex","endIndex","value","windowScrollY","route","queryFrameworks","allowedDataTypeEnumValues","singleFrameworkInQueryParam","queryCountryCodes","querySectors","queryInput","companiesReceived","allFrameworksSelected","frameworkAsDataTypeEnum","companyNameFilter","_component_AuthenticationWrapper","_component_TheHeader","_component_DatasetsTabMenu","_component_TheContent","_component_FrameworkDataSearchBar","_component_FrameworkDataSearchFilters","_component_RequestDataButton","_component_NewDatasetButton","_component_FrameworkDataSearchResults"],"mappings":"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"}