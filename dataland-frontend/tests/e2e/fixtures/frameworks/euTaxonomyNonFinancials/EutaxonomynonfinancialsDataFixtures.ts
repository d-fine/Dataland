// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { DEFAULT_PROBABILITY } from "@e2e/utils/FakeFixtureUtils";
import { type FixtureData } from "@sharedUtils/Fixtures";
import { generateFixtureDataset } from "@e2e/fixtures/FixtureUtils";
import { type EutaxonomynonfinancialsData } from "@clients/backend";
import { EutaxonomynonfinancialsGenerator } from "@e2e/fixtures/frameworks/euTaxonomyNonFinancials/EutaxonomynonfinancialsGenerator";

/**
 * Generates a set number of euTaxonomyNonFinancials fixtures
 * @param numFixtures the number of euTaxonomyNonFinancials fixtures to generate
 * @param nullProbability the probability (as number between 0 and 1) for "null" values in optional fields
 * @returns a set number of euTaxonomyNonFinancials fixtures
 */
export function generateEutaxonomynonfinancialsFixtures(
  numFixtures: number,
  nullProbability = DEFAULT_PROBABILITY,
): FixtureData<EutaxonomynonfinancialsData>[] {
  return generateFixtureDataset<EutaxonomynonfinancialsData>(
    () => generateEutaxonomynonfinancialsData(nullProbability),
    numFixtures,
  );
}

/**
 * Generates a random euTaxonomyNonFinancials dataset
 * @param nullProbability the probability (as number between 0 and 1) for "null" values in optional fields
 * @returns a random euTaxonomyNonFinancials dataset
 */
export function generateEutaxonomynonfinancialsData(
  nullProbability = DEFAULT_PROBABILITY,
): EutaxonomynonfinancialsData {
  const dataGenerator = new EutaxonomynonfinancialsGenerator(nullProbability);
  return {
    general: {
      general: {
        reportingPeriod: dataGenerator.guaranteedFutureDate(),
        fiscalYearEnd: dataGenerator.guaranteedFutureDate(),
        euTaxonomyActivityLevelReporting: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        nfrdMandatory: dataGenerator.randomYesNo(),
      },
    },
    revenue: {
      revenue: {
        totalRevenue: dataGenerator.randomFloat(),
        eligibleRevenue: dataGenerator.randomFloat(),
        alignedRevenue: dataGenerator.randomFloat(),
        substantialContributionToClimateChangeMitigation: dataGenerator.randomFloat(),
        substantialContributionToClimateChangeAdaptation: dataGenerator.randomFloat(),
        substantialContributionToSustainableUseAndProtectionOfWaterAndMarineResources: dataGenerator.randomFloat(),
        substantialContributionToTransitionToACircularEconomy: dataGenerator.randomFloat(),
        substantialContributionToPollutionPreventionAndControl: dataGenerator.randomFloat(),
        substantialContributionToProtectionAndRestorationOfBiodiversityAndEcosystems: dataGenerator.randomFloat(),
        nonAlignedRevenue: dataGenerator.randomFloat(),
        nonEligibleRevenue: dataGenerator.randomFloat(),
        enablingRevenue: dataGenerator.randomFloat(),
        transitionalRevenue: dataGenerator.randomFloat(),
      },
    },
    capex: {
      capex: {
        totalCapex: dataGenerator.randomFloat(),
        eligibleCapex: dataGenerator.randomFloat(),
        alignedCapex: dataGenerator.randomFloat(),
        substantialContributionToClimateChangeMitigation: dataGenerator.randomFloat(),
        substantialContributionToClimateChangeAdaptation: dataGenerator.randomFloat(),
        substantialContributionToSustainableUseAndProtectionOfWaterAndMarineResources: dataGenerator.randomFloat(),
        substantialContributionToTransitionToACircularEconomy: dataGenerator.randomFloat(),
        substantialContributionToPollutionPreventionAndControl: dataGenerator.randomFloat(),
        substantialContributionToProtectionAndRestorationOfBiodiversityAndEcosystems: dataGenerator.randomFloat(),
        nonAlignedCapex: dataGenerator.randomFloat(),
        nonEligibleCapex: dataGenerator.randomFloat(),
        enablingCapex: dataGenerator.randomFloat(),
        transitionalCapex: dataGenerator.randomFloat(),
      },
    },
    opex: {
      opex: {
        totalOpex: dataGenerator.randomFloat(),
        eligibleOpex: dataGenerator.randomFloat(),
        alignedOpex: dataGenerator.randomFloat(),
        substantialContributionToClimateChangeMitigation: dataGenerator.randomFloat(),
        substantialContributionToClimateChangeAdaptation: dataGenerator.randomFloat(),
        substantialContributionToSustainableUseAndProtectionOfWaterAndMarineResources: dataGenerator.randomFloat(),
        substantialContributionToTransitionToACircularEconomy: dataGenerator.randomFloat(),
        substantialContributionToPollutionPreventionAndControl: dataGenerator.randomFloat(),
        substantialContributionToProtectionAndRestorationOfBiodiversityAndEcosystems: dataGenerator.randomFloat(),
        nonAlignedOpex: dataGenerator.randomFloat(),
        nonEligibleOpex: dataGenerator.randomFloat(),
        enablingOpex: dataGenerator.randomFloat(),
        transitionalOpex: dataGenerator.randomFloat(),
      },
    },
  };
}
