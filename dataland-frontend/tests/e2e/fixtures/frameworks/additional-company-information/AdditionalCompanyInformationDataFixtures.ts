// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { DEFAULT_PROBABILITY } from '@e2e/utils/FakeFixtureUtils';
import { type FixtureData } from '@sharedUtils/Fixtures';
import { AdditionalCompanyInformationGenerator } from '@e2e/fixtures/frameworks/additional-company-information/AdditionalCompanyInformationGenerator';
import { pickOneElement, generateFixtureDataset } from '@e2e/fixtures/FixtureUtils';
import {
  AdditionalCompanyInformationGeneralGeneralFiscalYearDeviationOptions,
  type AdditionalCompanyInformationData,
} from '@clients/backend';

/**
 * Generates a set number of additional-company-information fixtures
 * @param numFixtures the number of additional-company-information fixtures to generate
 * @param nullProbability the probability (as number between 0 and 1) for "null" values in optional fields
 * @returns a set number of additional-company-information fixtures
 */
export function generateAdditionalCompanyInformationFixtures(
  numFixtures: number,
  nullProbability = DEFAULT_PROBABILITY
): FixtureData<AdditionalCompanyInformationData>[] {
  return generateFixtureDataset<AdditionalCompanyInformationData>(
    () => generateAdditionalCompanyInformationData(nullProbability),
    numFixtures
  );
}

/**
 * Generates a random additional-company-information dataset
 * @param nullProbability the probability (as number between 0 and 1) for "null" values in optional fields
 * @returns a random additional-company-information dataset
 */
export function generateAdditionalCompanyInformationData(
  nullProbability = DEFAULT_PROBABILITY
): AdditionalCompanyInformationData {
  const dataGenerator = new AdditionalCompanyInformationGenerator(nullProbability);
  return {
    general: {
      general: {
        fiscalYearDeviation: dataGenerator.randomExtendedDataPoint(
          dataGenerator.valueOrNull(
            pickOneElement(Object.values(AdditionalCompanyInformationGeneralGeneralFiscalYearDeviationOptions))
          )
        ),
        fiscalYearEnd: dataGenerator.randomExtendedDataPoint(dataGenerator.randomFutureDate()),
        referencedReports: dataGenerator.reports,
      },
      financialInformation: {
        equity: dataGenerator.randomCurrencyDataPoint(),
        debt: dataGenerator.randomCurrencyDataPoint(),
        balanceSheetTotal: dataGenerator.randomCurrencyDataPoint(),
        evic: dataGenerator.randomCurrencyDataPoint(),
      },
    },
  };
}
