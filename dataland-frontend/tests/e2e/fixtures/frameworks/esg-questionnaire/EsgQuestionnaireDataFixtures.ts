// <--WARNING--> THIS FILE IS AUTO-GENERATED BY THE FRAMEWORK-TOOLBOX AND WILL BE OVERWRITTEN
import { DEFAULT_PROBABILITY } from '@e2e/utils/FakeFixtureUtils';
import { type FixtureData } from '@sharedUtils/Fixtures';
import { EsgQuestionnaireGenerator } from '@e2e/fixtures/frameworks/esg-questionnaire/EsgQuestionnaireGenerator';
import {
  pickOneElement,
  pickSubsetOfElements,
  generateArray,
  generateFixtureDataset,
} from '@e2e/fixtures/FixtureUtils';
import {
  EsgQuestionnaireGovernanceVorstandsprofilUmfangDesTopManagementImUnternehmenOptions,
  type EsgQuestionnaireData,
} from '@clients/backend';
import { generateNaceCodes } from '@e2e/fixtures/common/NaceCodeFixtures';

/**
 * Generates a set number of esg-questionnaire fixtures
 * @param numFixtures the number of esg-questionnaire fixtures to generate
 * @param nullProbability the probability (as number between 0 and 1) for "null" values in optional fields
 * @returns a set number of esg-questionnaire fixtures
 */
export function generateEsgQuestionnaireFixtures(
  numFixtures: number,
  nullProbability = DEFAULT_PROBABILITY
): FixtureData<EsgQuestionnaireData>[] {
  return generateFixtureDataset<EsgQuestionnaireData>(() => generateEsgQuestionnaireData(nullProbability), numFixtures);
}

/**
 * Generates a random esg-questionnaire dataset
 * @param nullProbability the probability (as number between 0 and 1) for "null" values in optional fields
 * @returns a random esg-questionnaire dataset
 */
export function generateEsgQuestionnaireData(nullProbability = DEFAULT_PROBABILITY): EsgQuestionnaireData {
  const dataGenerator = new EsgQuestionnaireGenerator(nullProbability);
  return {
    general: {
      masterData: {
        berichtspflichtUndEinwilligungZurVeroeffentlichung: dataGenerator.guaranteedYesNo(),
        gueltigkeitsDatum: dataGenerator.dataDate,
      },
    },
    allgemein: {
      generelleEsgStrategie: {
        nachhaltigkeitsstrategieVorhanden: dataGenerator.randomYesNo(),
        dokumenteZurNachhaltigkeitsstrategie: dataGenerator.valueOrNull(
          generateArray(() => dataGenerator.guaranteedBaseDataPoint(dataGenerator.guaranteedShortString()), 1, 5, 0)
        ),
        massnahmenBezueglich15GradCelsiusZielVorhanden: dataGenerator.randomYesNo(),
        beschreibungMassnahmenBezueglich15GradCelsiusZiel: dataGenerator.randomParagraphs(),
        zugewieseneBudgetsBis2030: dataGenerator.randomFloat(0),
        zugewieseneBudgetsAb2031: dataGenerator.randomFloat(0),
        erwarteterFinanzierungsbedarfBis2030: dataGenerator.randomFloat(0),
        erwarteterFinanzierungsbedarfAb2031: dataGenerator.randomFloat(0),
        geplanteVollzeitaequivalenteBis2023: dataGenerator.randomFloat(0),
        geplanteVollzeitaequivalenteAb2031: dataGenerator.randomFloat(0),
        chancenOderHindernisse: dataGenerator.randomParagraphs(),
      },
      taxonomieKpisUndBestimmteAktivitaeten: {
        wirtschaftszweige: dataGenerator.valueOrNull(generateNaceCodes()),
        gesamtumsatz: dataGenerator.randomFloat(0),
        taxonomiefaehigerUmsatz: dataGenerator.randomFloat(0),
        taxonomiekonformerUmsatz: dataGenerator.randomFloat(0),
        gesamtCapex: dataGenerator.randomFloat(0),
        taxonomiefaehigeCapex: dataGenerator.randomFloat(0),
        taxonomiekonformeCapex: dataGenerator.randomFloat(0),
        taxonomiebezogeneCapexPlanungVorhanden: dataGenerator.randomYesNo(),
        geplanteTaxonomiefaehigeCapexIn5Jahren: dataGenerator.randomPercentageValue(),
        geplanteTaxonomiekonformeCapexIn5Jahren: dataGenerator.randomPercentageValue(),
        aktivitaetImSektorFossileBrennstoffe: dataGenerator.randomYesNo(),
        aktuellerProzentualerUmsatzanteilImSektorFossileBrennstoffe: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorFossileBrennstoffeIn2030: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorFossileBrennstoffeIn2040: dataGenerator.randomPercentageValue(),
        aktivitaetImSektorHerstellungVonChemikalien: dataGenerator.randomYesNo(),
        aktuellerProzentualerUmsatzanteilImSektorHerstellungVonChemikalien: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorHerstellungVonChemikalienIn2030: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorHerstellungVonChemikalienIn2040: dataGenerator.randomPercentageValue(),
        aktivitaetImSektorUmstritteneWaffen: dataGenerator.randomYesNo(),
        aktuellerProzentualerUmsatzanteilImSektorUmstritteneWaffen: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorUmstritteneWaffenIn2030: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorUmstritteneWaffenIn2040: dataGenerator.randomPercentageValue(),
        aktivitaetImSektorTabakanbauUndVerarbeitung: dataGenerator.randomYesNo(),
        aktuellerProzentualerUmsatzanteilImSektorTabakanbauUndVerarbeitung: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorTabakanbauUndVerarbeitungIn2030: dataGenerator.randomPercentageValue(),
        geplanterProzentualerUmsatzanteilImSektorTabakanbauUndVerarbeitungIn2040: dataGenerator.randomPercentageValue(),
      },
      esgRatingUndZertifizierung: {
        esgRating: dataGenerator.randomYesNo(),
        ratingagentur: dataGenerator.randomShortString(),
        ergebnisDesEsgRatings: dataGenerator.randomShortString(),
        ratingbericht: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        iso14001: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        iso45001: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        iso27001: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        iso50001: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        iso14040Ivm14044: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        iso14064: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        emas: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
      },
      unGlobalCompactPrinzipien: {
        mechanismenZurUeberwachungDerEinhaltungDerUngcp: dataGenerator.randomYesNo(),
        richtlinienZurEinhaltungDerUngcp: dataGenerator.valueOrNull(
          generateArray(() => dataGenerator.guaranteedBaseDataPoint(dataGenerator.guaranteedShortString()), 1, 5, 0)
        ),
        erklaerungDerEinhaltungDerUngcp: dataGenerator.randomParagraphs(),
      },
      oecdLeitsaetze: {
        mechanismenZurUeberwachungDerEinhaltungDerOecdLeitsaetze: dataGenerator.randomYesNo(),
        richtlinienZurEinhaltungDerOecdLeitsaetze: dataGenerator.valueOrNull(
          generateArray(() => dataGenerator.guaranteedBaseDataPoint(dataGenerator.guaranteedShortString()), 1, 5, 0)
        ),
        erklaerungDerEinhaltungDerOecdLeitsaetze: dataGenerator.randomParagraphs(),
      },
      unSgds: {
        ausrichtungNachDenUnSdgsUndAktivesVerfolgen: dataGenerator.randomParagraphs(),
      },
      richtlinienDesUnternehmens: {
        existenzVonRichtlinienZuSpezifischenThemen: dataGenerator.valueOrNull(
          pickSubsetOfElements([
            'DiversitaetAndInklusion',
            'AntiDiskriminierung',
            'Arbeitsschutz',
            'Interessenskonflikte',
            'AntiKorruption',
            'Whistleblowing',
            'Menschenrechte',
            'UmgangMitKunden',
            'GesundheitAndSicherheit',
          ])
        ),
        beruecksichtigungVonNachhaltigkeitskriterienBeiDerLieferantenauswahl: dataGenerator.randomParagraphs(),
      },
      rechtsstreitigkeiten: {
        rechtsstreitigkeitenMitEsgBezug: dataGenerator.randomYesNo(),
        einzelheitenZuEsgBezogenenRechtsstreitigkeiten: dataGenerator.randomParagraphs(),
      },
      transaktionenMitNachhaltigkeitskomponenten: {
        emissionGruenerSozialerUndOderNachhaltigerSchuldtitel: dataGenerator.randomYesNo(),
        detailsZuEmissionenGruenerSozialerUndOderNachhaltigerSchuldtitel: dataGenerator.randomParagraphs(),
        emissionVonSustainibilityLinkedDebt: dataGenerator.randomYesNo(),
        detailsZuEmissionenVonSustainibilityLinkedDebt: dataGenerator.randomParagraphs(),
      },
    },
    umwelt: {
      emissionen: {
        scope1Treibhausgasemissionen: dataGenerator.randomFloat(0),
        scope2TreibhausgasemissionenMarktbasiert: dataGenerator.randomFloat(0),
        scope2TreibhausgasemissionenStandortbasiert: dataGenerator.randomFloat(0),
        scope3Treibhausgasemissionen: dataGenerator.randomFloat(0),
        co2IntensitaetDesUnternehmens: dataGenerator.randomFloat(0),
        luftschadstoffe: dataGenerator.randomFloat(0),
        wassergefaehrdendeStoffe: dataGenerator.randomFloat(0),
        bodenverschmutzendeStoffe: dataGenerator.randomFloat(0),
      },
      verbrauchsangaben: {
        energieverbrauch: dataGenerator.randomFloat(0),
        anteilErneuerbarerEnergienAmGesamtEnergieverbrauch: dataGenerator.randomPercentageValue(),
        wasserverbrauch: dataGenerator.randomFloat(0),
      },
      abfall: {
        abfallmenge: dataGenerator.randomFloat(0),
        anteilDesNichtRecycletenAbfallsAnDerGesamtAbfallmenge: dataGenerator.randomPercentageValue(),
        mengeAnGefaehrlichenAbfaellen: dataGenerator.randomFloat(0),
      },
      risikenUndMassnahmenKlima: {
        transitorischeKlimaUndUmweltrisiken: dataGenerator.randomParagraphs(),
        physischeKlimaUndUmweltrisiken: dataGenerator.valueOrNull(
          pickSubsetOfElements([
            'DuerrenAndHitzewellen',
            'Hochwasser',
            'Wassermangel',
            'RadioaktiveStrahlung',
            'ErdHangabbruch',
            'StarkregenHagel',
            'VerlustBiodiversitaet',
            'Waldbraende',
            'Stuerme',
            'Erdbeben',
            'Meeresspiegelanstieg',
            'Sonstige',
          ])
        ),
        vonPhysischenKlimaUndUmweltrisikenBetroffeneStandorte: dataGenerator.randomParagraphs(),
        messungSteuerungUndUeberwachungDerKlimaUndUmweltrisiken: dataGenerator.randomYesNo(),
        beschreibungDerMessungSteuerungUndUeberwachungDerKlimaUndUmweltrisiken: dataGenerator.randomParagraphs(),
        nutzungVonSzenarioanalysen: dataGenerator.randomYesNo(),
        beschreibungDerNutzungVonSzenarioanalysen: dataGenerator.randomParagraphs(),
        beruecksichtigungVonKlimaUndUmweltrisiken: dataGenerator.randomYesNo(),
        zeithorizontDerBeruecksichtigungVonKlimaUndUmweltrisikenImGeschaeftsmodell: dataGenerator.randomParagraphs(),
        transitionsplanVorhanden: dataGenerator.randomBaseDataPoint(dataGenerator.guaranteedYesNo()),
        transitorischeRisiken: dataGenerator.randomParagraphs(),
        physischeRisiken: dataGenerator.randomParagraphs(),
        produkteZurReduzierungDerUmweltbelastung: dataGenerator.randomYesNoNa(),
        produkteZurReduzierungDerUmweltbelastungErlaeuterungen: dataGenerator.randomParagraphs(),
        zielReduzierungTreibhausgasemmissionen2030: dataGenerator.randomPercentageValue(),
        zielReduzierungTreibhausgasemmissionen2040: dataGenerator.randomPercentageValue(),
        zielReduzierungTreibhausgasemmissionen2050: dataGenerator.randomPercentageValue(),
        zielReduzierungTreibhausgasemmissionenErlaeuterungen: dataGenerator.randomParagraphs(),
        kompensationsinstrumenteTreibhausgasemissionen: dataGenerator.randomYesNo(),
        kompensationsinstrumenteTreibhausgasemissionenZertifizierungen: dataGenerator.randomParagraphs(),
        zielAnteilErneuerbarerEnergien2030: dataGenerator.randomPercentageValue(),
        zielAnteilErneuerbarerEnergien2040: dataGenerator.randomPercentageValue(),
        zielAnteilErneuerbarerEnergien2050: dataGenerator.randomPercentageValue(),
        zielAnteilErneuerbarerEnergienErlaeuterungen: dataGenerator.randomParagraphs(),
      },
      risikenUndMassnahmenKreislaufwirtschaft: {
        abfallmanagementsystem: dataGenerator.randomYesNoNa(),
        abfallmanagementsystemErlaeuterungen: dataGenerator.randomParagraphs(),
        anteilWiederverwendeterOderRecycelterKomponentenProdukteUndMaterialienImProduktionsprozess:
          dataGenerator.randomPercentageValue(),
        geplanteErhoehungDesAnteilsVonRecyclaten: dataGenerator.randomYesNoNa(),
        geplanteErhoehungDesAnteilsVonRecyclatenErlaeuterungen: dataGenerator.randomParagraphs(),
      },
      risikenUndMassnahmenBiodiversitaetUndOekosysteme: {
        negativeAuswirkungenAufBiodiversitaetUndOekosystem: dataGenerator.randomYesNoNa(),
        negativeAuswirkungenAufBiodiversitaetUndOekosystemErlaeuterungen: dataGenerator.randomParagraphs(),
        positiveAuswirkungenAufBiodiversitaetUndOekosystem: dataGenerator.randomYesNoNa(),
        positiveAuswirkungenAufBiodiversitaetUndOekosystemErlaeuterungen: dataGenerator.randomParagraphs(),
        gegenmassnahmenNegativeAuswirkungenAufBiodiversitaetUndOekosystem: dataGenerator.randomParagraphs(),
        planZurReduktionDesWasserverbrauchs: dataGenerator.randomYesNoNa(),
        planZurReduktionDesWasserverbrauchsErlaeuterung: dataGenerator.randomParagraphs(),
      },
    },
    soziales: {
      beschaeftigtenprofilUndEntlohnung: {
        zahlDerBeschaeftigtenInsgesamt: dataGenerator.randomInt(0),
        anteilWeiblicherPersonenUnterDenBeschaeftigten: dataGenerator.randomPercentageValue(),
        anteilMaennlicherPersonenUnterDenBeschaeftigten: dataGenerator.randomPercentageValue(),
        anteilDiverserPersonenUnterDenBeschaeftigten: dataGenerator.randomPercentageValue(),
        geschlechtsspezifischesLohngefaelle: dataGenerator.randomPercentageValue(),
        jaehrlicheGesamtverguetungsquote: dataGenerator.randomPercentageValue(),
        anteilVonUnterDreissigjaehrigen: dataGenerator.randomPercentageValue(),
        anteilVonDreissigBisFuenfzigjaehrigen: dataGenerator.randomPercentageValue(),
        anteilVonUeberFuenfzigjaehrigen: dataGenerator.randomPercentageValue(),
        durchschnittlicheAnzahlAnTrainingsstunden: dataGenerator.randomFloat(0),
        fluktuationsquote: dataGenerator.randomPercentageValue(),
      },
      einbindungDerBeschaeftigten: {
        einbindungVonBeschaeftigtenInEntscheidungen: dataGenerator.valueOrNull(
          pickSubsetOfElements([
            'EinbindungInBetriebsratGesetzlicheVertretungsorgane',
            'Aufsichtsrat',
            'Verwaltungsrat',
            'KeineEinbindungInEntscheidungsgremien',
            'KeinArbeitnehmervertretungGesetzlichVorgeschrieben',
          ])
        ),
        einbindungVonBeschaeftigtenInEntscheidungenErlaeuterungen: dataGenerator.randomParagraphs(),
      },
      arbeitsschutz: {
        massnahmenZumSchutzDerGesundheitUndVerbesserungDerSicherheit: dataGenerator.randomParagraphs(),
        anzahlDerArbeitsunfaelleProFuenfhundertVollzeitbeschaeftigte: dataGenerator.randomFloat(0),
      },
      risikenUndMassnahmen: {
        weitereWesentlicheSozialeRisiken: dataGenerator.randomYesNo(),
        weitereWesentlicheSozialeRisikenErlaeuterung: dataGenerator.randomParagraphs(),
        massnahmenZurReduzierungVonSozialenRisiken: dataGenerator.randomParagraphs(),
      },
    },
    governance: {
      vorstandsprofil: {
        umfangDesTopManagementImUnternehmen: dataGenerator.valueOrNull(
          pickOneElement(
            Object.values(EsgQuestionnaireGovernanceVorstandsprofilUmfangDesTopManagementImUnternehmenOptions)
          )
        ),
        anteilWeiblicherPersonenImTopManagement: dataGenerator.randomPercentageValue(),
        anteilMaennlicherPersonenImTopManagement: dataGenerator.randomPercentageValue(),
        anteilDiverserPersonenImTopManagement: dataGenerator.randomPercentageValue(),
        kopplungVonVerguetungDesTopManagementsAnNachhaltigkeitsziele: dataGenerator.randomYesNo(),
        kopplungVonVerguetungDesTopManagementsAnNachhaltigkeitszieleErlaeuterung: dataGenerator.randomParagraphs(),
        gesamtanzahlAufsichtsratMitglieder: dataGenerator.randomInt(0),
        anzahlUnabhaengigerAufsichtsratMitglieder: dataGenerator.randomInt(0),
        anzahlWeiblicherOderDiverserAufsichtsratMitglieder: dataGenerator.randomInt(0),
      },
      stakeholderdialog: {
        csrdKonformerProzessZurBeruecksichtigungDerStakeholderinteressen: dataGenerator.randomYesNo(),
        csrdKonformerProzessZurBeruecksichtigungDerStakeholderinteressenErlaeuterung: dataGenerator.randomParagraphs(),
      },
      risikenUndMassnahmen: {
        weitereWesentlicheGovernanceRisiken: dataGenerator.randomParagraphs(),
        massnahmenZurReduzierungVonGovernanceRisiken: dataGenerator.randomParagraphs(),
      },
    },
  };
}
