import { faker } from "@faker-js/faker";
import { SfdrData } from "@clients/backend";

import {
  generateNumericDatapoint,
  generateYesNoDatapoint,
  generateReferencedReports,
} from "../common/DataPointFixtures";

import { randomYesNoNaUndefined } from "../common/YesNoFixtures";
import { randomFutureDate } from "@e2e/fixtures/common/DateFixtures";
import { generateIso4217CurrencyCode } from "@e2e/fixtures/common/CurrencyFixtures";

export function generateSfdrData(): SfdrData {
  const sfdr: SfdrData = {} as SfdrData;
  const reports = generateReferencedReports();

  sfdr.fiscalYear = faker.datatype.string();
  sfdr.fiscalYearEnd = randomFutureDate();
  sfdr.annualReport = faker.datatype.string();
  sfdr.groupLevelAnnualReport = randomYesNoNaUndefined();
  sfdr.annualReport = faker.datatype.string();
  sfdr.annualReportDate = randomFutureDate();
  sfdr.annualReportCurrency = generateIso4217CurrencyCode();
  sfdr.sustainabilityReport = faker.datatype.string();
  sfdr.groupLevelSustainabilityReport = randomYesNoNaUndefined();
  sfdr.sustainabilityReportDate = randomFutureDate();
  sfdr.sustainabilityReportCurrency = generateIso4217CurrencyCode();
  sfdr.integratedReport = faker.datatype.string();
  sfdr.groupLevelIntegratedReport = randomYesNoNaUndefined();
  sfdr.integratedReportDate = randomFutureDate();
  sfdr.integratedReportCurrency = generateIso4217CurrencyCode();
  sfdr.esefReport = faker.datatype.string();
  sfdr.groupLevelEsefReport = randomYesNoNaUndefined();
  sfdr.esefReportDate = randomFutureDate();
  sfdr.esefReportCurrency = generateIso4217CurrencyCode();
  sfdr.scopeOfEntities = randomYesNoNaUndefined();
  sfdr.scope1 = generateNumericDatapoint(reports);
  sfdr.scope2 = generateNumericDatapoint(reports);
  sfdr.scope3 = generateNumericDatapoint(reports);
  sfdr.enterpriseValue = generateNumericDatapoint(reports);
  sfdr.totalRevenue = generateNumericDatapoint(reports);
  sfdr.fossilFuelSectorExposure = generateYesNoDatapoint(reports);
  sfdr.renewableEnergyProduction = generateNumericDatapoint(reports);
  sfdr.renewableEnergyConsumption = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyConsumption = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyProduction = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceA = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceB = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceC = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceD = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceE = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceF = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceG = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceH = generateNumericDatapoint(reports);
  sfdr.highImpactClimateSectorEnergyConsumptionNaceL = generateNumericDatapoint(reports);
  sfdr.totalHighImpactClimateSectorEnergyConsumption = generateNumericDatapoint(reports);
  sfdr.primaryForestAndWoodedLandOfNativeSpeciesExposure = generateYesNoDatapoint(reports);
  sfdr.protectedAreasExposure = generateYesNoDatapoint(reports);
  sfdr.rareOrEndangeredEcosystemsExposure = generateYesNoDatapoint(reports);
  sfdr.emissionsToWater = generateNumericDatapoint(reports);
  sfdr.hazardousWaste = generateNumericDatapoint(reports);
  sfdr.humanRightsPolicy = generateYesNoDatapoint(reports);
  sfdr.humanRightsLegalProceedings = generateYesNoDatapoint(reports);
  sfdr.iloCoreLabourStandards = generateYesNoDatapoint(reports);
  sfdr.environmentalPolicy = generateYesNoDatapoint(reports);
  sfdr.corruptionLegalProceedings = generateYesNoDatapoint(reports);
  sfdr.transparencyDisclosurePolicy = generateYesNoDatapoint(reports);
  sfdr.humanRightsDueDiligencePolicy = generateYesNoDatapoint(reports);
  sfdr.childForcedDiscriminationPolicy = generateYesNoDatapoint(reports);
  sfdr.iso14001 = generateYesNoDatapoint(reports);
  sfdr.briberyCoruptionPolicy = generateYesNoDatapoint(reports);
  sfdr.fairBusinessMarketingAdvertisingPolicy = generateYesNoDatapoint(reports);
  sfdr.technologiesExpertiseTransferPolicy = generateYesNoDatapoint(reports);
  sfdr.fairCompetitionPolicy = generateYesNoDatapoint(reports);
  sfdr.violationOfTaxRulesAndRegulation = generateYesNoDatapoint(reports);
  sfdr.unGlobalCompactPrinciplesCompliancePolicy = generateYesNoDatapoint(reports);
  sfdr.oecdGuidelinesForMultinationalEnterprisesPolicy = generateYesNoDatapoint(reports);
  sfdr.averageGrossHourlyEarningsMaleEmployees = generateNumericDatapoint(reports);
  sfdr.averageGrossHourlyEarningsFemaleEmployees = generateNumericDatapoint(reports);
  sfdr.femaleBoardMembers = generateNumericDatapoint(reports);
  sfdr.maleBoardMembers = generateNumericDatapoint(reports);
  sfdr.controversialWeaponsExposure = generateYesNoDatapoint(reports);
  sfdr.inorganicPollutants = generateNumericDatapoint(reports);
  sfdr.airPollutants = generateNumericDatapoint(reports);
  sfdr.ozoneDepletionSubstances = generateNumericDatapoint(reports);
  sfdr.carbonReductionInitiatives = generateYesNoDatapoint(reports);
  sfdr.nonRenewableEnergyConsumptionFossilFuels = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyConsumptionCrudeOil = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyConsumptionNaturalGas = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyConsumptionLignite = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyConsumptionCoal = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyConsumptionNuclearEnergy = generateNumericDatapoint(reports);
  sfdr.nonRenewableEnergyConsumptionOther = generateNumericDatapoint(reports);
  sfdr.waterConsumption = generateNumericDatapoint(reports);
  sfdr.waterReused = generateNumericDatapoint(reports);
  sfdr.waterManagementPolicy = generateYesNoDatapoint(reports);
  sfdr.waterStressAreaExposure = generateYesNoDatapoint(reports);
  sfdr.manufactureOfAgrochemicalPesticidesProducts = generateYesNoDatapoint(reports);
  sfdr.landDegradationDesertificationSoilSealingExposure = generateYesNoDatapoint(reports);
  sfdr.sustainableAgriculturePolicy = generateYesNoDatapoint(reports);
  sfdr.sustainableOceansAndSeasPolicy = generateYesNoDatapoint(reports);
  sfdr.wasteNonRecycled = generateNumericDatapoint(reports);
  sfdr.threatenedSpeciesExposure = generateYesNoDatapoint(reports);
  sfdr.biodiversityProtectionPolicy = generateYesNoDatapoint(reports);
  sfdr.deforestationPolicy = generateYesNoDatapoint(reports);
  sfdr.securitiesNotCertifiedAsGreen = generateYesNoDatapoint(reports);
  sfdr.workplaceAccidentPreventionPolicy = generateYesNoDatapoint(reports);
  sfdr.rateOfAccidents = generateNumericDatapoint(reports);
  sfdr.workdaysLost = generateNumericDatapoint(reports);
  sfdr.supplierCodeOfConduct = generateYesNoDatapoint(reports);
  sfdr.grievanceHandlingMechanism = generateYesNoDatapoint(reports);
  sfdr.whistleblowerProtectionPolicy = generateYesNoDatapoint(reports);
  sfdr.reportedIncidentsOfDiscrimination = generateNumericDatapoint(reports);
  sfdr.sanctionsIncidentsOfDiscrimination = generateNumericDatapoint(reports);
  sfdr.ceoToEmployeePayGap = generateNumericDatapoint(reports);
  sfdr.humanRightsDueDiligence = generateYesNoDatapoint(reports);
  sfdr.traffickingInHumanBeingsPolicy = generateYesNoDatapoint(reports);
  sfdr.reportedChildLabourIncidents = generateYesNoDatapoint(reports);
  sfdr.reportedForcedOrCompulsoryLabourIncidents = generateYesNoDatapoint(reports);
  sfdr.reportedIncidentsOfHumanRights = generateNumericDatapoint(reports);
  sfdr.reportedCasesOfBriberyCorruption = generateYesNoDatapoint(reports);
  sfdr.reportedConvictionsOfBriberyCorruption = generateNumericDatapoint(reports);
  sfdr.reportedFinesOfBriberyCorruption = generateNumericDatapoint(reports);
  sfdr.referencedReports = reports;
  return sfdr;
}
