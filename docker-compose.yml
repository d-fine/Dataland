version: "3.8"
services:
  proxy:
    restart: always
    profiles: ["production", "testing"]
    networks:
      - external
      - internal
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dataland-inbound-proxy/nginx.conf:/etc/nginx/nginx.conf
  backend:
    restart: always
    profiles: ["production", "testing"]
    networks:
      - internal
    build:
      context: ./
      dockerfile: ${BACKEND_DOCKERFILE:-./dataland-backend/DockerfileTest}
    expose:
      - "8080"
    environment:
      DATALAND_SKYMINDERCLIENT_TOKEN: ${DATALAND_SKYMINDERCLIENT_TOKEN}
      DATALAND_SKYMINDERCLIENT_USER: ${DATALAND_SKYMINDERCLIENT_USER}
      DATALAND_EDC_TOKEN: ${DATALAND_EDC_TOKEN}
      DATALAND_EDC_USER: ${DATALAND_EDC_USER}
      SKYMINDER_URL: ${SKYMINDER_URL}
      SKYMINDER_USER: ${SKYMINDER_USER}
      SKYMINDER_PW: ${SKYMINDER_PW}
  e2etests:
    profiles: ["testing"]
    build:
      context: ./
      dockerfile: ./dataland-e2etests/Dockerfile
    networks:
      - external
    environment:
      DATALAND_SKYMINDERCLIENT_TOKEN: ${DATALAND_SKYMINDERCLIENT_TOKEN}
      DATALAND_SKYMINDERCLIENT_USER: ${DATALAND_SKYMINDERCLIENT_USER}
      DATALAND_EDC_TOKEN: ${DATALAND_EDC_TOKEN}
      DATALAND_EDC_USER: ${DATALAND_EDC_USER}
  frontend:
    restart: always
    profiles: ["production", "testing"]
    build:
      context: ./
      dockerfile: ${FRONTEND_DOCKERFILE:-./dataland-frontend/DockerfileTest}
      args:
        DATALAND_EDC_TOKEN: ${DATALAND_EDC_TOKEN}
        DATALAND_EDC_USER: ${DATALAND_EDC_USER}
    expose:
      - "80"
    networks:
      - internal
  skyminder-dummyserver:
    profiles: ["testing", "development"]
    image: ghcr.io/d-fine/datalandskyminder/skyminderdummyserver:latest
    networks:
      - internal
      - external
    ports:
      - "8085:8080"
    environment:
      DATALAND_SKYMINDERCLIENT_TOKEN: ${DATALAND_SKYMINDERCLIENT_TOKEN}
      DATALAND_SKYMINDERCLIENT_USER: ${DATALAND_SKYMINDERCLIENT_USER}
  edc-dummyserver:
    restart: always
    profiles: ["testing", "development"]
    image: ghcr.io/d-fine/datalandedc/edcdummyserver:latest
    networks:
      internal:
        aliases:
          - dataland-edc
      external:
        aliases:
          - dataland-edc
    ports:
      - "8095:8080"
  dataland-edc:
    restart: always
    profiles: ["production"]
    image: ghcr.io/d-fine/datalandedc/edcdummyserver:latest
    networks:
     - internal
    expose:
     - "8080"
  develop:
    profiles: ["devcontainer"]
    build:
      context: ./
      dockerfile: ./devcontainer/Dockerfile
    volumes:
      - "./:/code:rw"
    expose:
      - "8080"
    networks:
      - external
    environment:
      DATALAND_SKYMINDERCLIENT_TOKEN: ${DATALAND_SKYMINDERCLIENT_TOKEN}
      DATALAND_SKYMINDERCLIENT_USER: ${DATALAND_SKYMINDERCLIENT_USER}
      DATALAND_EDC_TOKEN: ${DATALAND_EDC_TOKEN}
      DATALAND_EDC_USER: ${DATALAND_EDC_USER}
      SKYMINDER_URL: ${SKYMINDER_URL}
      SKYMINDER_USER: ${SKYMINDER_USER}
      SKYMINDER_PW: ${SKYMINDER_PW}
networks:
  internal:
  external:
